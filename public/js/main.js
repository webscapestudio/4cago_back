/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/main.js":
/*!******************************!*\
  !*** ./resources/js/main.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_burger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/burger.js */ \"./resources/js/modules/burger.js\");\n/* harmony import */ var _modules_burger_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modules_burger_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _modules_openCloseItem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/openCloseItem.js */ \"./resources/js/modules/openCloseItem.js\");\n/* harmony import */ var _modules_openCloseItem_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_modules_openCloseItem_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _modules_meatballs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/meatballs.js */ \"./resources/js/modules/meatballs.js\");\n/* harmony import */ var _modules_meatballs_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_modules_meatballs_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _modules_dropdownFilter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/dropdownFilter.js */ \"./resources/js/modules/dropdownFilter.js\");\n/* harmony import */ var _modules_dropdownFilter_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_modules_dropdownFilter_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _modules_notifications_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/notifications.js */ \"./resources/js/modules/notifications.js\");\n/* harmony import */ var _modules_notifications_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_modules_notifications_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _modules_loginDrop_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/loginDrop.js */ \"./resources/js/modules/loginDrop.js\");\n/* harmony import */ var _modules_loginDrop_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_modules_loginDrop_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var micromodal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromodal */ \"./node_modules/micromodal/dist/micromodal.es.js\");\n/* harmony import */ var _modules_tab_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/tab.js */ \"./resources/js/modules/tab.js\");\n/* harmony import */ var slim_select__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! slim-select */ \"./node_modules/slim-select/dist/slimselect.umd.js\");\n/* harmony import */ var slim_select__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(slim_select__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _modules_tags__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/tags */ \"./resources/js/modules/tags.js\");\n/* harmony import */ var read_smore__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! read-smore */ \"./node_modules/read-smore/dist/index.js\");\n/* harmony import */ var read_smore__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(read_smore__WEBPACK_IMPORTED_MODULE_10__);\n\n\n\n\n\n\n\n\n\n\n\ntry {\n  new (slim_select__WEBPACK_IMPORTED_MODULE_8___default())({\n    select: \"#slim-select\",\n    showContent: \"down\"\n  });\n  new (slim_select__WEBPACK_IMPORTED_MODULE_8___default())({\n    select: \"#slim-select-job\",\n    showContent: \"down\"\n  });\n} catch (e) {\n  console.log(\"error\");\n}\nvar readMores = document.querySelectorAll(\".js-read-smore\");\nvar options = {\n  // blockClassName: \"read-more\",\n  moreText: \"Показать больше\",\n  lessText: \"Скрыть\"\n};\n\n// Pass in options param\nread_smore__WEBPACK_IMPORTED_MODULE_10___default()(readMores, options).init();\nmicromodal__WEBPACK_IMPORTED_MODULE_6__[\"default\"].init({\n  disableScroll: true // [6]\n});\n\n(0,_modules_tab_js__WEBPACK_IMPORTED_MODULE_7__.tab)(\".category__tabs_wrap\", \".tabs-btn\", \".category__tabs\", \".category__tabs_content\");\ntinymce.init({\n  selector: '.tiny_editor',\n  plugins: 'anchor autolink charmap codesample emoticons link lists searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage tableofcontents footnotes mergetags autocorrect typography inlinecss',\n  toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',\n  language: 'ru'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvbWFpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF5QztBQUNjO0FBQ1I7QUFDVTtBQUNGO0FBQ1I7QUFDWDtBQUNHO0FBQ0Y7QUFDSDtBQUNDO0FBQ25DLElBQUk7RUFDQSxJQUFJUSxvREFBVSxDQUFDO0lBQ1hHLE1BQU0sRUFBRSxjQUFjO0lBQ3RCQyxXQUFXLEVBQUU7RUFDakIsQ0FBQyxDQUFDO0VBRUYsSUFBSUosb0RBQVUsQ0FBQztJQUNYRyxNQUFNLEVBQUUsa0JBQWtCO0lBQzFCQyxXQUFXLEVBQUU7RUFDakIsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDLE9BQU9DLENBQUMsRUFBRTtFQUNSQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxPQUFPLENBQUM7QUFDeEI7QUFFQSxJQUFNQyxTQUFTLEdBQUdDLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsZ0JBQWdCLENBQUM7QUFFN0QsSUFBTUMsT0FBTyxHQUFHO0VBQ1o7RUFDQUMsUUFBUSxFQUFFLGlCQUFpQjtFQUMzQkMsUUFBUSxFQUFFO0FBQ2QsQ0FBQzs7QUFFRDtBQUNBWCxrREFBUyxDQUFDTSxTQUFTLEVBQUVHLE9BQU8sQ0FBQyxDQUFDRyxJQUFJLEVBQUU7QUFDcENoQix1REFBZSxDQUFDO0VBQ1ppQixhQUFhLEVBQUUsSUFBSSxDQUFFO0FBQ3pCLENBQUMsQ0FBQzs7QUFFRmhCLG9EQUFHLENBQ0Msc0JBQXNCLEVBQ3RCLFdBQVcsRUFDWCxpQkFBaUIsRUFDakIseUJBQXlCLENBQzVCO0FBQ0RpQixPQUFPLENBQUNGLElBQUksQ0FBQztFQUNURyxRQUFRLEVBQUUsY0FBYztFQUN4QkMsT0FBTyxFQUFFLHVVQUF1VTtFQUNoVkMsT0FBTyxFQUFFLG9SQUFvUjtFQUM3UkMsUUFBUSxFQUFFO0FBQ1gsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vNGNhZ29fYmFjay8uL3Jlc291cmNlcy9qcy9tYWluLmpzP2ZkYWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJ1cmdlciBmcm9tIFwiLi9tb2R1bGVzL2J1cmdlci5qc1wiO1xyXG5pbXBvcnQgb3BlbkNsb3NlSXRlbSBmcm9tIFwiLi9tb2R1bGVzL29wZW5DbG9zZUl0ZW0uanNcIjtcclxuaW1wb3J0IG1lYXRiYWxscyBmcm9tIFwiLi9tb2R1bGVzL21lYXRiYWxscy5qc1wiO1xyXG5pbXBvcnQgZHJvcGRvd25GaWx0ZXIgZnJvbSBcIi4vbW9kdWxlcy9kcm9wZG93bkZpbHRlci5qc1wiO1xyXG5pbXBvcnQgbm90aWZpY2F0aW9ucyBmcm9tIFwiLi9tb2R1bGVzL25vdGlmaWNhdGlvbnMuanNcIjtcclxuaW1wb3J0IGxvZ2luRHJvcCBmcm9tIFwiLi9tb2R1bGVzL2xvZ2luRHJvcC5qc1wiO1xyXG5pbXBvcnQgTWljcm9Nb2RhbCBmcm9tIFwibWljcm9tb2RhbFwiO1xyXG5pbXBvcnQgeyB0YWIgfSBmcm9tIFwiLi9tb2R1bGVzL3RhYi5qc1wiO1xyXG5pbXBvcnQgU2xpbVNlbGVjdCBmcm9tIFwic2xpbS1zZWxlY3RcIjtcclxuaW1wb3J0IHRhZ3MgZnJvbSBcIi4vbW9kdWxlcy90YWdzXCI7XHJcbmltcG9ydCBSZWFkU21vcmUgZnJvbSBcInJlYWQtc21vcmVcIjtcclxudHJ5IHtcclxuICAgIG5ldyBTbGltU2VsZWN0KHtcclxuICAgICAgICBzZWxlY3Q6IFwiI3NsaW0tc2VsZWN0XCIsXHJcbiAgICAgICAgc2hvd0NvbnRlbnQ6IFwiZG93blwiLFxyXG4gICAgfSk7XHJcblxyXG4gICAgbmV3IFNsaW1TZWxlY3Qoe1xyXG4gICAgICAgIHNlbGVjdDogXCIjc2xpbS1zZWxlY3Qtam9iXCIsXHJcbiAgICAgICAgc2hvd0NvbnRlbnQ6IFwiZG93blwiLFxyXG4gICAgfSk7XHJcbn0gY2F0Y2ggKGUpIHtcclxuICAgIGNvbnNvbGUubG9nKFwiZXJyb3JcIik7XHJcbn1cclxuXHJcbmNvbnN0IHJlYWRNb3JlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuanMtcmVhZC1zbW9yZVwiKTtcclxuXHJcbmNvbnN0IG9wdGlvbnMgPSB7XHJcbiAgICAvLyBibG9ja0NsYXNzTmFtZTogXCJyZWFkLW1vcmVcIixcclxuICAgIG1vcmVUZXh0OiBcItCf0L7QutCw0LfQsNGC0Ywg0LHQvtC70YzRiNC1XCIsXHJcbiAgICBsZXNzVGV4dDogXCLQodC60YDRi9GC0YxcIixcclxufTtcclxuXHJcbi8vIFBhc3MgaW4gb3B0aW9ucyBwYXJhbVxyXG5SZWFkU21vcmUocmVhZE1vcmVzLCBvcHRpb25zKS5pbml0KCk7XHJcbk1pY3JvTW9kYWwuaW5pdCh7XHJcbiAgICBkaXNhYmxlU2Nyb2xsOiB0cnVlLCAvLyBbNl1cclxufSk7XHJcblxyXG50YWIoXHJcbiAgICBcIi5jYXRlZ29yeV9fdGFic193cmFwXCIsXHJcbiAgICBcIi50YWJzLWJ0blwiLFxyXG4gICAgXCIuY2F0ZWdvcnlfX3RhYnNcIixcclxuICAgIFwiLmNhdGVnb3J5X190YWJzX2NvbnRlbnRcIlxyXG4pO1xyXG50aW55bWNlLmluaXQoe1xyXG4gICAgc2VsZWN0b3I6ICcudGlueV9lZGl0b3InLFxyXG4gICAgcGx1Z2luczogJ2FuY2hvciBhdXRvbGluayBjaGFybWFwIGNvZGVzYW1wbGUgZW1vdGljb25zIGxpbmsgbGlzdHMgc2VhcmNocmVwbGFjZSB0YWJsZSB2aXN1YWxibG9ja3Mgd29yZGNvdW50IGNoZWNrbGlzdCBtZWRpYWVtYmVkIGNhc2VjaGFuZ2UgZXhwb3J0IGZvcm1hdHBhaW50ZXIgcGFnZWVtYmVkIGxpbmtjaGVja2VyIGExMXljaGVja2VyIHRpbnltY2VzcGVsbGNoZWNrZXIgcGVybWFuZW50cGVuIHBvd2VycGFzdGUgYWR2dGFibGUgYWR2Y29kZSBlZGl0aW1hZ2UgdGFibGVvZmNvbnRlbnRzIGZvb3Rub3RlcyBtZXJnZXRhZ3MgYXV0b2NvcnJlY3QgdHlwb2dyYXBoeSBpbmxpbmVjc3MnLFxyXG4gICAgdG9vbGJhcjogJ3VuZG8gcmVkbyB8IGJsb2NrcyBmb250ZmFtaWx5IGZvbnRzaXplIHwgYm9sZCBpdGFsaWMgdW5kZXJsaW5lIHN0cmlrZXRocm91Z2ggfCBsaW5rIGltYWdlIG1lZGlhIHRhYmxlIG1lcmdldGFncyB8IGFkZGNvbW1lbnQgc2hvd2NvbW1lbnRzIHwgc3BlbGxjaGVja2RpYWxvZyBhMTF5Y2hlY2sgdHlwb2dyYXBoeSB8IGFsaWduIGxpbmVoZWlnaHQgfCBjaGVja2xpc3QgbnVtbGlzdCBidWxsaXN0IGluZGVudCBvdXRkZW50IHwgZW1vdGljb25zIGNoYXJtYXAgfCByZW1vdmVmb3JtYXQnLFxyXG4gICAgbGFuZ3VhZ2U6ICdydScsXHJcbiAgIH0pOyJdLCJuYW1lcyI6WyJidXJnZXIiLCJvcGVuQ2xvc2VJdGVtIiwibWVhdGJhbGxzIiwiZHJvcGRvd25GaWx0ZXIiLCJub3RpZmljYXRpb25zIiwibG9naW5Ecm9wIiwiTWljcm9Nb2RhbCIsInRhYiIsIlNsaW1TZWxlY3QiLCJ0YWdzIiwiUmVhZFNtb3JlIiwic2VsZWN0Iiwic2hvd0NvbnRlbnQiLCJlIiwiY29uc29sZSIsImxvZyIsInJlYWRNb3JlcyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsIm9wdGlvbnMiLCJtb3JlVGV4dCIsImxlc3NUZXh0IiwiaW5pdCIsImRpc2FibGVTY3JvbGwiLCJ0aW55bWNlIiwic2VsZWN0b3IiLCJwbHVnaW5zIiwidG9vbGJhciIsImxhbmd1YWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/main.js\n");

/***/ }),

/***/ "./resources/js/modules/burger.js":
/*!****************************************!*\
  !*** ./resources/js/modules/burger.js ***!
  \****************************************/
/***/ (() => {

eval("var burgerBtn = document.querySelector(\".burger\");\nvar menu = document.querySelector(\".sidebar\");\nburgerBtn.addEventListener(\"click\", function (e) {\n  var target = e.target.classList;\n  if (target.contains(\"burger\") && target.contains(\"active\")) {\n    burgerBtn.classList.remove(\"active\");\n    menu.classList.remove(\"active\");\n    document.querySelector(\"html\").style.overflow = \"\";\n  } else {\n    burgerBtn.classList.add(\"active\");\n    menu.classList.add(\"active\");\n    document.querySelector(\"html\").style.overflow = \"hidden\";\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJidXJnZXJCdG4iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJtZW51IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJ0YXJnZXQiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInJlbW92ZSIsInN0eWxlIiwib3ZlcmZsb3ciLCJhZGQiXSwic291cmNlcyI6WyJ3ZWJwYWNrOi8vNGNhZ29fYmFjay8uL3Jlc291cmNlcy9qcy9tb2R1bGVzL2J1cmdlci5qcz8zN2Y2Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGJ1cmdlckJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYnVyZ2VyXCIpO1xyXG5jb25zdCBtZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zaWRlYmFyXCIpO1xyXG5cclxuYnVyZ2VyQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgY29uc3QgdGFyZ2V0ID0gZS50YXJnZXQuY2xhc3NMaXN0O1xyXG4gICAgaWYgKHRhcmdldC5jb250YWlucyhcImJ1cmdlclwiKSAmJiB0YXJnZXQuY29udGFpbnMoXCJhY3RpdmVcIikpIHtcclxuICAgICAgICBidXJnZXJCdG4uY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgICAgICBtZW51LmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImh0bWxcIikuc3R5bGUub3ZlcmZsb3cgPSBcIlwiO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBidXJnZXJCdG4uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcclxuICAgICAgICBtZW51LmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImh0bWxcIikuc3R5bGUub3ZlcmZsb3cgPSBcImhpZGRlblwiO1xyXG4gICAgfVxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFNQSxTQUFTLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLFNBQVMsQ0FBQztBQUNuRCxJQUFNQyxJQUFJLEdBQUdGLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLFVBQVUsQ0FBQztBQUUvQ0YsU0FBUyxDQUFDSSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsVUFBQ0MsQ0FBQyxFQUFLO0VBQ3ZDLElBQU1DLE1BQU0sR0FBR0QsQ0FBQyxDQUFDQyxNQUFNLENBQUNDLFNBQVM7RUFDakMsSUFBSUQsTUFBTSxDQUFDRSxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUlGLE1BQU0sQ0FBQ0UsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFFO0lBQ3hEUixTQUFTLENBQUNPLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDLFFBQVEsQ0FBQztJQUNwQ04sSUFBSSxDQUFDSSxTQUFTLENBQUNFLE1BQU0sQ0FBQyxRQUFRLENBQUM7SUFDL0JSLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDUSxLQUFLLENBQUNDLFFBQVEsR0FBRyxFQUFFO0VBQ3RELENBQUMsTUFBTTtJQUNIWCxTQUFTLENBQUNPLFNBQVMsQ0FBQ0ssR0FBRyxDQUFDLFFBQVEsQ0FBQztJQUNqQ1QsSUFBSSxDQUFDSSxTQUFTLENBQUNLLEdBQUcsQ0FBQyxRQUFRLENBQUM7SUFDNUJYLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDUSxLQUFLLENBQUNDLFFBQVEsR0FBRyxRQUFRO0VBQzVEO0FBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL21vZHVsZXMvYnVyZ2VyLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/modules/burger.js\n");

/***/ }),

/***/ "./resources/js/modules/dropdownFilter.js":
/*!************************************************!*\
  !*** ./resources/js/modules/dropdownFilter.js ***!
  \************************************************/
/***/ (() => {

eval("var openFilter = document.querySelectorAll('.dropdown__filter');\nopenFilter.forEach(function (item) {\n  item.addEventListener('click', function () {\n    if (item.classList.contains('active')) {\n      item.classList.remove('active');\n    } else {\n      item.classList.add('active');\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcGVuRmlsdGVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsIml0ZW0iLCJhZGRFdmVudExpc3RlbmVyIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJyZW1vdmUiLCJhZGQiXSwic291cmNlcyI6WyJ3ZWJwYWNrOi8vNGNhZ29fYmFjay8uL3Jlc291cmNlcy9qcy9tb2R1bGVzL2Ryb3Bkb3duRmlsdGVyLmpzP2NiMzUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgb3BlbkZpbHRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kcm9wZG93bl9fZmlsdGVyJylcclxub3BlbkZpbHRlci5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgIGlmIChpdGVtLmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJykpIHtcclxuICAgICAgaXRlbS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKVxyXG4gICAgfVxyXG4gIH0pXHJcbn0pXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBTUEsVUFBVSxHQUFHQyxRQUFRLENBQUNDLGdCQUFnQixDQUFDLG1CQUFtQixDQUFDO0FBQ2pFRixVQUFVLENBQUNHLE9BQU8sQ0FBQyxVQUFDQyxJQUFJLEVBQUs7RUFDM0JBLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQVk7SUFDekMsSUFBSUQsSUFBSSxDQUFDRSxTQUFTLENBQUNDLFFBQVEsQ0FBQyxRQUFRLENBQUMsRUFBRTtNQUNyQ0gsSUFBSSxDQUFDRSxTQUFTLENBQUNFLE1BQU0sQ0FBQyxRQUFRLENBQUM7SUFDakMsQ0FBQyxNQUFNO01BQ0xKLElBQUksQ0FBQ0UsU0FBUyxDQUFDRyxHQUFHLENBQUMsUUFBUSxDQUFDO0lBQzlCO0VBQ0YsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL21vZHVsZXMvZHJvcGRvd25GaWx0ZXIuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/modules/dropdownFilter.js\n");

/***/ }),

/***/ "./resources/js/modules/loginDrop.js":
/*!*******************************************!*\
  !*** ./resources/js/modules/loginDrop.js ***!
  \*******************************************/
/***/ (() => {

eval("var menu = document.querySelector(\".profile__menu\");\nif (menu) {\n  var openDrop = document.querySelector(\".login__block\");\n  openDrop.addEventListener(\"click\", function (e) {\n    var openItem = document.querySelector(\".create\");\n    var target = e.target.classList;\n    if (openDrop.classList.contains(\"open\")) {\n      openDrop.classList.remove(\"open\");\n      menu.classList.remove(\"active\");\n    } else {\n      openDrop.classList.add(\"open\");\n      menu.classList.add(\"active\");\n    }\n    openItem.addEventListener(\"click\", function () {\n      openItem.classList.toggle(\"active\");\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZW51IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwib3BlbkRyb3AiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsIm9wZW5JdGVtIiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJyZW1vdmUiLCJhZGQiLCJ0b2dnbGUiXSwic291cmNlcyI6WyJ3ZWJwYWNrOi8vNGNhZ29fYmFjay8uL3Jlc291cmNlcy9qcy9tb2R1bGVzL2xvZ2luRHJvcC5qcz82ZTMyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX21lbnVcIik7XHJcbmlmIChtZW51KSB7XHJcbiAgICBjb25zdCBvcGVuRHJvcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubG9naW5fX2Jsb2NrXCIpO1xyXG4gICAgb3BlbkRyb3AuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcbiAgICAgICAgY29uc3Qgb3Blbkl0ZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNyZWF0ZVwiKTtcclxuICAgICAgICBjb25zdCB0YXJnZXQgPSBlLnRhcmdldC5jbGFzc0xpc3Q7XHJcbiAgICAgICAgaWYgKG9wZW5Ecm9wLmNsYXNzTGlzdC5jb250YWlucyhcIm9wZW5cIikpIHtcclxuICAgICAgICAgICAgb3BlbkRyb3AuY2xhc3NMaXN0LnJlbW92ZShcIm9wZW5cIik7XHJcbiAgICAgICAgICAgIG1lbnUuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBvcGVuRHJvcC5jbGFzc0xpc3QuYWRkKFwib3BlblwiKTtcclxuICAgICAgICAgICAgbWVudS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgb3Blbkl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICAgICAgb3Blbkl0ZW0uY2xhc3NMaXN0LnRvZ2dsZShcImFjdGl2ZVwiKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBTUEsSUFBSSxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQztBQUNyRCxJQUFJRixJQUFJLEVBQUU7RUFDTixJQUFNRyxRQUFRLEdBQUdGLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLGVBQWUsQ0FBQztFQUN4REMsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsVUFBQ0MsQ0FBQyxFQUFLO0lBQ3RDLElBQU1DLFFBQVEsR0FBR0wsUUFBUSxDQUFDQyxhQUFhLENBQUMsU0FBUyxDQUFDO0lBQ2xELElBQU1LLE1BQU0sR0FBR0YsQ0FBQyxDQUFDRSxNQUFNLENBQUNDLFNBQVM7SUFDakMsSUFBSUwsUUFBUSxDQUFDSyxTQUFTLENBQUNDLFFBQVEsQ0FBQyxNQUFNLENBQUMsRUFBRTtNQUNyQ04sUUFBUSxDQUFDSyxTQUFTLENBQUNFLE1BQU0sQ0FBQyxNQUFNLENBQUM7TUFDakNWLElBQUksQ0FBQ1EsU0FBUyxDQUFDRSxNQUFNLENBQUMsUUFBUSxDQUFDO0lBQ25DLENBQUMsTUFBTTtNQUNIUCxRQUFRLENBQUNLLFNBQVMsQ0FBQ0csR0FBRyxDQUFDLE1BQU0sQ0FBQztNQUM5QlgsSUFBSSxDQUFDUSxTQUFTLENBQUNHLEdBQUcsQ0FBQyxRQUFRLENBQUM7SUFDaEM7SUFFQUwsUUFBUSxDQUFDRixnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsWUFBTTtNQUNyQ0UsUUFBUSxDQUFDRSxTQUFTLENBQUNJLE1BQU0sQ0FBQyxRQUFRLENBQUM7SUFDdkMsQ0FBQyxDQUFDO0VBQ04sQ0FBQyxDQUFDO0FBQ04iLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvbW9kdWxlcy9sb2dpbkRyb3AuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/modules/loginDrop.js\n");

/***/ }),

/***/ "./resources/js/modules/meatballs.js":
/*!*******************************************!*\
  !*** ./resources/js/modules/meatballs.js ***!
  \*******************************************/
/***/ (() => {

eval("var openMeat = document.querySelectorAll(\".post__drop\");\nopenMeat.forEach(function (item) {\n  var menuBtn = item.querySelector(\".meatballs\");\n  var menu = item.querySelector(\".dropdown\");\n  item.addEventListener(\"click\", function () {\n    if (menuBtn.classList.contains(\"active\") && menu.classList.contains(\"active\")) {\n      menuBtn.classList.remove(\"active\");\n      menu.classList.remove(\"active\");\n    } else {\n      menuBtn.classList.add(\"active\");\n      menu.classList.add(\"active\");\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcGVuTWVhdCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJpdGVtIiwibWVudUJ0biIsInF1ZXJ5U2VsZWN0b3IiLCJtZW51IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwicmVtb3ZlIiwiYWRkIl0sInNvdXJjZXMiOlsid2VicGFjazovLzRjYWdvX2JhY2svLi9yZXNvdXJjZXMvanMvbW9kdWxlcy9tZWF0YmFsbHMuanM/ZGJjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBvcGVuTWVhdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9zdF9fZHJvcFwiKTtcclxub3Blbk1lYXQuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgY29uc3QgbWVudUJ0biA9IGl0ZW0ucXVlcnlTZWxlY3RvcihcIi5tZWF0YmFsbHNcIik7XHJcbiAgICBjb25zdCBtZW51ID0gaXRlbS5xdWVyeVNlbGVjdG9yKFwiLmRyb3Bkb3duXCIpO1xyXG5cclxuICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgIG1lbnVCdG4uY2xhc3NMaXN0LmNvbnRhaW5zKFwiYWN0aXZlXCIpICYmXHJcbiAgICAgICAgICAgIG1lbnUuY2xhc3NMaXN0LmNvbnRhaW5zKFwiYWN0aXZlXCIpXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIG1lbnVCdG4uY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgbWVudS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG1lbnVCdG4uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgbWVudS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFNQSxRQUFRLEdBQUdDLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsYUFBYSxDQUFDO0FBQ3pERixRQUFRLENBQUNHLE9BQU8sQ0FBQyxVQUFDQyxJQUFJLEVBQUs7RUFDdkIsSUFBTUMsT0FBTyxHQUFHRCxJQUFJLENBQUNFLGFBQWEsQ0FBQyxZQUFZLENBQUM7RUFDaEQsSUFBTUMsSUFBSSxHQUFHSCxJQUFJLENBQUNFLGFBQWEsQ0FBQyxXQUFXLENBQUM7RUFFNUNGLElBQUksQ0FBQ0ksZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQVk7SUFDdkMsSUFDSUgsT0FBTyxDQUFDSSxTQUFTLENBQUNDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFDcENILElBQUksQ0FBQ0UsU0FBUyxDQUFDQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQ25DO01BQ0VMLE9BQU8sQ0FBQ0ksU0FBUyxDQUFDRSxNQUFNLENBQUMsUUFBUSxDQUFDO01BQ2xDSixJQUFJLENBQUNFLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDLFFBQVEsQ0FBQztJQUNuQyxDQUFDLE1BQU07TUFDSE4sT0FBTyxDQUFDSSxTQUFTLENBQUNHLEdBQUcsQ0FBQyxRQUFRLENBQUM7TUFDL0JMLElBQUksQ0FBQ0UsU0FBUyxDQUFDRyxHQUFHLENBQUMsUUFBUSxDQUFDO0lBQ2hDO0VBQ0osQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL21vZHVsZXMvbWVhdGJhbGxzLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/modules/meatballs.js\n");

/***/ }),

/***/ "./resources/js/modules/notifications.js":
/*!***********************************************!*\
  !*** ./resources/js/modules/notifications.js ***!
  \***********************************************/
/***/ (() => {

eval("var openNotif = document.querySelector(\".notifications__block\");\nif (openNotif) {\n  document.addEventListener(\"click\", function (e) {\n    if (!openNotif.contains(e.target)) {\n      openNotif.classList.remove(\"open\");\n    } else {\n      openNotif.classList.add(\"open\");\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcGVuTm90aWYiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsImNvbnRhaW5zIiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiYWRkIl0sInNvdXJjZXMiOlsid2VicGFjazovLzRjYWdvX2JhY2svLi9yZXNvdXJjZXMvanMvbW9kdWxlcy9ub3RpZmljYXRpb25zLmpzP2M0ZGUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgb3Blbk5vdGlmID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5ub3RpZmljYXRpb25zX19ibG9ja1wiKTtcclxuXHJcbmlmIChvcGVuTm90aWYpIHtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgICAgIGlmICghb3Blbk5vdGlmLmNvbnRhaW5zKGUudGFyZ2V0KSkge1xyXG4gICAgICAgICAgICBvcGVuTm90aWYuY2xhc3NMaXN0LnJlbW92ZShcIm9wZW5cIik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgb3Blbk5vdGlmLmNsYXNzTGlzdC5hZGQoXCJvcGVuXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBTUEsU0FBUyxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyx1QkFBdUIsQ0FBQztBQUVqRSxJQUFJRixTQUFTLEVBQUU7RUFDWEMsUUFBUSxDQUFDRSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsVUFBQ0MsQ0FBQyxFQUFLO0lBQ3RDLElBQUksQ0FBQ0osU0FBUyxDQUFDSyxRQUFRLENBQUNELENBQUMsQ0FBQ0UsTUFBTSxDQUFDLEVBQUU7TUFDL0JOLFNBQVMsQ0FBQ08sU0FBUyxDQUFDQyxNQUFNLENBQUMsTUFBTSxDQUFDO0lBQ3RDLENBQUMsTUFBTTtNQUNIUixTQUFTLENBQUNPLFNBQVMsQ0FBQ0UsR0FBRyxDQUFDLE1BQU0sQ0FBQztJQUNuQztFQUNKLENBQUMsQ0FBQztBQUNOIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL21vZHVsZXMvbm90aWZpY2F0aW9ucy5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/modules/notifications.js\n");

/***/ }),

/***/ "./resources/js/modules/openCloseItem.js":
/*!***********************************************!*\
  !*** ./resources/js/modules/openCloseItem.js ***!
  \***********************************************/
/***/ (() => {

eval("// const openItem = document.querySelector('.create')\n// if (openItem) {\n//   const menu = document.querySelector('.profile__item')\n//   openItem.addEventListener('click', () => {\n//     if (menu.classList.contains('active')) {\n//       menu.classList.remove('active')\n//     } else {\n//       menu.classList.add('active')\n//     }\n//   })\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sInNvdXJjZXMiOlsid2VicGFjazovLzRjYWdvX2JhY2svLi9yZXNvdXJjZXMvanMvbW9kdWxlcy9vcGVuQ2xvc2VJdGVtLmpzPzJhNjciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29uc3Qgb3Blbkl0ZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY3JlYXRlJylcclxuLy8gaWYgKG9wZW5JdGVtKSB7XHJcbi8vICAgY29uc3QgbWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19pdGVtJylcclxuLy8gICBvcGVuSXRlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuLy8gICAgIGlmIChtZW51LmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJykpIHtcclxuLy8gICAgICAgbWVudS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxyXG4vLyAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgbWVudS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKVxyXG4vLyAgICAgfVxyXG4vLyAgIH0pXHJcbi8vIH1cclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL21vZHVsZXMvb3BlbkNsb3NlSXRlbS5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/modules/openCloseItem.js\n");

/***/ }),

/***/ "./resources/js/modules/tab.js":
/*!*************************************!*\
  !*** ./resources/js/modules/tab.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tab\": () => (/* binding */ tab)\n/* harmony export */ });\nvar tab = function tab() {\n  var container = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.tabs';\n  var tab__btn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '.tab__btn';\n  var tab__content = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.tab';\n  var tab__content__wrap = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.tabs__content';\n  if (container) {\n    var tabContainer = document.querySelectorAll(container);\n    tabContainer.forEach(function (tabItem) {\n      var tabBtn = document.querySelectorAll(tab__btn);\n      var tabContentWrap = tabItem.querySelector(tab__content__wrap);\n      var tabContent = tabContentWrap.querySelectorAll(tab__content);\n      tabBtn.forEach(function (btn, idx) {\n        btn.addEventListener('click', function () {\n          hideTabsBtns();\n          hideTabs(idx);\n          if (btn.classList.contains('active')) {\n            btn.classList.remove('active');\n          } else {\n            btn.classList.add('active');\n          }\n        });\n      });\n      function hideTabs(idx) {\n        tabContent.forEach(function (item, i) {\n          if (i === idx) {\n            item.classList.add('active');\n          } else {\n            item.classList.remove('active');\n          }\n        });\n      }\n      function hideTabsBtns() {\n        tabBtn.forEach(function (item) {\n          item.classList.remove('active');\n        });\n      }\n    });\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvbW9kdWxlcy90YWIuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLElBQU1BLEdBQUcsR0FBRyxTQUFOQSxHQUFHLEdBS1g7RUFBQSxJQUpIQyxTQUFTLHVFQUFHLE9BQU87RUFBQSxJQUNuQkMsUUFBUSx1RUFBRyxXQUFXO0VBQUEsSUFDdEJDLFlBQVksdUVBQUcsTUFBTTtFQUFBLElBQ3JCQyxrQkFBa0IsdUVBQUcsZ0JBQWdCO0VBRXJDLElBQUlILFNBQVMsRUFBRTtJQUNiLElBQU1JLFlBQVksR0FBR0MsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQ04sU0FBUyxDQUFDO0lBRXpESSxZQUFZLENBQUNHLE9BQU8sQ0FBQyxVQUFDQyxPQUFPLEVBQUs7TUFDaEMsSUFBTUMsTUFBTSxHQUFHSixRQUFRLENBQUNDLGdCQUFnQixDQUFDTCxRQUFRLENBQUM7TUFDbEQsSUFBTVMsY0FBYyxHQUFHRixPQUFPLENBQUNHLGFBQWEsQ0FBQ1Isa0JBQWtCLENBQUM7TUFDaEUsSUFBTVMsVUFBVSxHQUFHRixjQUFjLENBQUNKLGdCQUFnQixDQUFDSixZQUFZLENBQUM7TUFFaEVPLE1BQU0sQ0FBQ0YsT0FBTyxDQUFDLFVBQUNNLEdBQUcsRUFBRUMsR0FBRyxFQUFLO1FBQzNCRCxHQUFHLENBQUNFLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxZQUFNO1VBQ2xDQyxZQUFZLEVBQUU7VUFDZEMsUUFBUSxDQUFDSCxHQUFHLENBQUM7VUFFYixJQUFJRCxHQUFHLENBQUNLLFNBQVMsQ0FBQ0MsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQ3BDTixHQUFHLENBQUNLLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDLFFBQVEsQ0FBQztVQUNoQyxDQUFDLE1BQU07WUFDTFAsR0FBRyxDQUFDSyxTQUFTLENBQUNHLEdBQUcsQ0FBQyxRQUFRLENBQUM7VUFDN0I7UUFDRixDQUFDLENBQUM7TUFDSixDQUFDLENBQUM7TUFFRixTQUFTSixRQUFRLENBQUNILEdBQUcsRUFBRTtRQUNyQkYsVUFBVSxDQUFDTCxPQUFPLENBQUMsVUFBQ2UsSUFBSSxFQUFFQyxDQUFDLEVBQUs7VUFDOUIsSUFBSUEsQ0FBQyxLQUFLVCxHQUFHLEVBQUU7WUFDYlEsSUFBSSxDQUFDSixTQUFTLENBQUNHLEdBQUcsQ0FBQyxRQUFRLENBQUM7VUFDOUIsQ0FBQyxNQUFNO1lBQ0xDLElBQUksQ0FBQ0osU0FBUyxDQUFDRSxNQUFNLENBQUMsUUFBUSxDQUFDO1VBQ2pDO1FBQ0YsQ0FBQyxDQUFDO01BQ0o7TUFFQSxTQUFTSixZQUFZLEdBQUc7UUFDdEJQLE1BQU0sQ0FBQ0YsT0FBTyxDQUFDLFVBQUNlLElBQUksRUFBSztVQUN2QkEsSUFBSSxDQUFDSixTQUFTLENBQUNFLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDakMsQ0FBQyxDQUFDO01BQ0o7SUFDRixDQUFDLENBQUM7RUFDSjtBQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly80Y2Fnb19iYWNrLy4vcmVzb3VyY2VzL2pzL21vZHVsZXMvdGFiLmpzPzE4YmQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHRhYiA9IChcclxuICBjb250YWluZXIgPSAnLnRhYnMnLFxyXG4gIHRhYl9fYnRuID0gJy50YWJfX2J0bicsXHJcbiAgdGFiX19jb250ZW50ID0gJy50YWInLFxyXG4gIHRhYl9fY29udGVudF9fd3JhcCA9ICcudGFic19fY29udGVudCdcclxuKSA9PiB7XHJcbiAgaWYgKGNvbnRhaW5lcikge1xyXG4gICAgY29uc3QgdGFiQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChjb250YWluZXIpXHJcblxyXG4gICAgdGFiQ29udGFpbmVyLmZvckVhY2goKHRhYkl0ZW0pID0+IHtcclxuICAgICAgY29uc3QgdGFiQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0YWJfX2J0bilcclxuICAgICAgY29uc3QgdGFiQ29udGVudFdyYXAgPSB0YWJJdGVtLnF1ZXJ5U2VsZWN0b3IodGFiX19jb250ZW50X193cmFwKVxyXG4gICAgICBjb25zdCB0YWJDb250ZW50ID0gdGFiQ29udGVudFdyYXAucXVlcnlTZWxlY3RvckFsbCh0YWJfX2NvbnRlbnQpXHJcblxyXG4gICAgICB0YWJCdG4uZm9yRWFjaCgoYnRuLCBpZHgpID0+IHtcclxuICAgICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICBoaWRlVGFic0J0bnMoKVxyXG4gICAgICAgICAgaGlkZVRhYnMoaWR4KVxyXG5cclxuICAgICAgICAgIGlmIChidG4uY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSkge1xyXG4gICAgICAgICAgICBidG4uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJylcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGJ0bi5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgIH0pXHJcblxyXG4gICAgICBmdW5jdGlvbiBoaWRlVGFicyhpZHgpIHtcclxuICAgICAgICB0YWJDb250ZW50LmZvckVhY2goKGl0ZW0sIGkpID0+IHtcclxuICAgICAgICAgIGlmIChpID09PSBpZHgpIHtcclxuICAgICAgICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKVxyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaXRlbS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGZ1bmN0aW9uIGhpZGVUYWJzQnRucygpIHtcclxuICAgICAgICB0YWJCdG4uZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgaXRlbS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxyXG4gICAgICAgIH0pXHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJ0YWIiLCJjb250YWluZXIiLCJ0YWJfX2J0biIsInRhYl9fY29udGVudCIsInRhYl9fY29udGVudF9fd3JhcCIsInRhYkNvbnRhaW5lciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJ0YWJJdGVtIiwidGFiQnRuIiwidGFiQ29udGVudFdyYXAiLCJxdWVyeVNlbGVjdG9yIiwidGFiQ29udGVudCIsImJ0biIsImlkeCIsImFkZEV2ZW50TGlzdGVuZXIiLCJoaWRlVGFic0J0bnMiLCJoaWRlVGFicyIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwicmVtb3ZlIiwiYWRkIiwiaXRlbSIsImkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/modules/tab.js\n");

/***/ }),

/***/ "./resources/js/modules/tags.js":
/*!**************************************!*\
  !*** ./resources/js/modules/tags.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tags\": () => (/* binding */ tags)\n/* harmony export */ });\nvar tags = document.querySelector('jsuites-tags');\n//   .addEventListener('onblur', function () {})//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvbW9kdWxlcy90YWdzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxJQUFNQSxJQUFJLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLGNBQWMsQ0FBQztBQUMxRCIsInNvdXJjZXMiOlsid2VicGFjazovLzRjYWdvX2JhY2svLi9yZXNvdXJjZXMvanMvbW9kdWxlcy90YWdzLmpzPzJhY2QiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHRhZ3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdqc3VpdGVzLXRhZ3MnKVxyXG4vLyAgIC5hZGRFdmVudExpc3RlbmVyKCdvbmJsdXInLCBmdW5jdGlvbiAoKSB7fSlcclxuIl0sIm5hbWVzIjpbInRhZ3MiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/modules/tags.js\n");

/***/ }),

/***/ "./node_modules/micromodal/dist/micromodal.es.js":
/*!*******************************************************!*\
  !*** ./node_modules/micromodal/dist/micromodal.es.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction e(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function t(e){return function(e){if(Array.isArray(e))return o(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if(\"string\"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(e,t)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var o=0,n=new Array(t);o<t;o++)n[o]=e[o];return n}var n,i,a,r,s,l=(n=[\"a[href]\",\"area[href]\",'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\"select:not([disabled]):not([aria-hidden])\",\"textarea:not([disabled]):not([aria-hidden])\",\"button:not([disabled]):not([aria-hidden])\",\"iframe\",\"object\",\"embed\",\"[contenteditable]\",'[tabindex]:not([tabindex^=\"-\"])'],i=function(){function o(e){var n=e.targetModal,i=e.triggers,a=void 0===i?[]:i,r=e.onShow,s=void 0===r?function(){}:r,l=e.onClose,c=void 0===l?function(){}:l,d=e.openTrigger,u=void 0===d?\"data-micromodal-trigger\":d,f=e.closeTrigger,h=void 0===f?\"data-micromodal-close\":f,v=e.openClass,g=void 0===v?\"is-open\":v,m=e.disableScroll,b=void 0!==m&&m,y=e.disableFocus,p=void 0!==y&&y,w=e.awaitCloseAnimation,E=void 0!==w&&w,k=e.awaitOpenAnimation,M=void 0!==k&&k,A=e.debugMode,C=void 0!==A&&A;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,o),this.modal=document.getElementById(n),this.config={debugMode:C,disableScroll:b,openTrigger:u,closeTrigger:h,openClass:g,onShow:s,onClose:c,awaitCloseAnimation:E,awaitOpenAnimation:M,disableFocus:p},a.length>0&&this.registerTriggers.apply(this,t(a)),this.onClick=this.onClick.bind(this),this.onKeydown=this.onKeydown.bind(this)}var i,a,r;return i=o,(a=[{key:\"registerTriggers\",value:function(){for(var e=this,t=arguments.length,o=new Array(t),n=0;n<t;n++)o[n]=arguments[n];o.filter(Boolean).forEach((function(t){t.addEventListener(\"click\",(function(t){return e.showModal(t)}))}))}},{key:\"showModal\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this.activeElement=document.activeElement,this.modal.setAttribute(\"aria-hidden\",\"false\"),this.modal.classList.add(this.config.openClass),this.scrollBehaviour(\"disable\"),this.addEventListeners(),this.config.awaitOpenAnimation){var o=function t(){e.modal.removeEventListener(\"animationend\",t,!1),e.setFocusToFirstNode()};this.modal.addEventListener(\"animationend\",o,!1)}else this.setFocusToFirstNode();this.config.onShow(this.modal,this.activeElement,t)}},{key:\"closeModal\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=this.modal;if(this.modal.setAttribute(\"aria-hidden\",\"true\"),this.removeEventListeners(),this.scrollBehaviour(\"enable\"),this.activeElement&&this.activeElement.focus&&this.activeElement.focus(),this.config.onClose(this.modal,this.activeElement,e),this.config.awaitCloseAnimation){var o=this.config.openClass;this.modal.addEventListener(\"animationend\",(function e(){t.classList.remove(o),t.removeEventListener(\"animationend\",e,!1)}),!1)}else t.classList.remove(this.config.openClass)}},{key:\"closeModalById\",value:function(e){this.modal=document.getElementById(e),this.modal&&this.closeModal()}},{key:\"scrollBehaviour\",value:function(e){if(this.config.disableScroll){var t=document.querySelector(\"body\");switch(e){case\"enable\":Object.assign(t.style,{overflow:\"\"});break;case\"disable\":Object.assign(t.style,{overflow:\"hidden\"})}}}},{key:\"addEventListeners\",value:function(){this.modal.addEventListener(\"touchstart\",this.onClick),this.modal.addEventListener(\"click\",this.onClick),document.addEventListener(\"keydown\",this.onKeydown)}},{key:\"removeEventListeners\",value:function(){this.modal.removeEventListener(\"touchstart\",this.onClick),this.modal.removeEventListener(\"click\",this.onClick),document.removeEventListener(\"keydown\",this.onKeydown)}},{key:\"onClick\",value:function(e){(e.target.hasAttribute(this.config.closeTrigger)||e.target.parentNode.hasAttribute(this.config.closeTrigger))&&(e.preventDefault(),e.stopPropagation(),this.closeModal(e))}},{key:\"onKeydown\",value:function(e){27===e.keyCode&&this.closeModal(e),9===e.keyCode&&this.retainFocus(e)}},{key:\"getFocusableNodes\",value:function(){var e=this.modal.querySelectorAll(n);return Array.apply(void 0,t(e))}},{key:\"setFocusToFirstNode\",value:function(){var e=this;if(!this.config.disableFocus){var t=this.getFocusableNodes();if(0!==t.length){var o=t.filter((function(t){return!t.hasAttribute(e.config.closeTrigger)}));o.length>0&&o[0].focus(),0===o.length&&t[0].focus()}}}},{key:\"retainFocus\",value:function(e){var t=this.getFocusableNodes();if(0!==t.length)if(t=t.filter((function(e){return null!==e.offsetParent})),this.modal.contains(document.activeElement)){var o=t.indexOf(document.activeElement);e.shiftKey&&0===o&&(t[t.length-1].focus(),e.preventDefault()),!e.shiftKey&&t.length>0&&o===t.length-1&&(t[0].focus(),e.preventDefault())}else t[0].focus()}}])&&e(i.prototype,a),r&&e(i,r),o}(),a=null,r=function(e){if(!document.getElementById(e))return console.warn(\"MicroModal: ❗Seems like you have missed %c'\".concat(e,\"'\"),\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",\"ID somewhere in your code. Refer example below to resolve it.\"),console.warn(\"%cExample:\",\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",'<div class=\"modal\" id=\"'.concat(e,'\"></div>')),!1},s=function(e,t){if(function(e){e.length<=0&&(console.warn(\"MicroModal: ❗Please specify at least one %c'micromodal-trigger'\",\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",\"data attribute.\"),console.warn(\"%cExample:\",\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",'<a href=\"#\" data-micromodal-trigger=\"my-modal\"></a>'))}(e),!t)return!0;for(var o in t)r(o);return!0},{init:function(e){var o=Object.assign({},{openTrigger:\"data-micromodal-trigger\"},e),n=t(document.querySelectorAll(\"[\".concat(o.openTrigger,\"]\"))),r=function(e,t){var o=[];return e.forEach((function(e){var n=e.attributes[t].value;void 0===o[n]&&(o[n]=[]),o[n].push(e)})),o}(n,o.openTrigger);if(!0!==o.debugMode||!1!==s(n,r))for(var l in r){var c=r[l];o.targetModal=l,o.triggers=t(c),a=new i(o)}},show:function(e,t){var o=t||{};o.targetModal=e,!0===o.debugMode&&!1===r(e)||(a&&a.removeEventListeners(),(a=new i(o)).showModal())},close:function(e){e?a.closeModalById(e):a.closeModal()}});\"undefined\"!=typeof window&&(window.MicroModal=l);/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (l);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/micromodal/dist/micromodal.es.js\n");

/***/ }),

/***/ "./resources/scss/main.scss":
/*!**********************************!*\
  !*** ./resources/scss/main.scss ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc2Nzcy9tYWluLnNjc3MuanMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vNGNhZ29fYmFjay8uL3Jlc291cmNlcy9zY3NzL21haW4uc2Nzcz85Y2Q2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/scss/main.scss\n");

/***/ }),

/***/ "./node_modules/read-smore/dist/index.js":
/*!***********************************************!*\
  !*** ./node_modules/read-smore/dist/index.js ***!
  \***********************************************/
/***/ ((module) => {

eval("var e={blockClassName:\"read-smore\",wordsCount:30,charsCount:null,moreText:\"Read More\",lessText:\"Read Less\",isInline:!1};function n(n,r){r=Object.assign({},e,r);var t={originalContentArr:[],truncatedContentArr:[]};function a(e){return void 0!==e.dataset.readSmoreChars||null!==r.charsCount}return{init:function(){for(var e=0,o=n.length;e<o;++e)l=e,void 0,void 0,void 0,void 0,c=function(e){return void 0!==e.dataset.readSmoreChars?parseInt(e.dataset.readSmoreChars):null!==r.charsCount?parseInt(r.charsCount):void 0!==e.dataset.readSmoreWords?parseInt(e.dataset.readSmoreWords):null!==r.wordsCount?parseInt(r.wordsCount):void 0}(i=n[e]),u=function(e,n,r){void 0===r&&(r=!1);var t=function(e){return e.replace(/(^\\s*)|(\\s*$)/gi,\"\")}(e);return r?t.split(\"\").slice(0,n-1).join(\"\")+\"...\":t.split(/\\s+/).slice(0,n-1).join(\" \")+\"...\"}(d=i.innerHTML,c,a(i)),C=a(i)?d.length:(s=d,null!==s&&\"\"!==s&&s.replace(/<[^>]+>/g,\"\")).split(\" \").filter(function(e){return\"\"!==e.trim()}).length,t.originalContentArr.push(d),t.truncatedContentArr.push(u),c<C&&(i.innerHTML=t.truncatedContentArr[l],function(e){var a=document.createElement(\"span\");a.className=r.blockClassName+\"__link-wrap\",a.innerHTML=function(e){return'\\n      <a id=\"'+r.blockClassName+\"_\"+e+'\"\\n        class=\"'+r.blockClassName+'__link\"\\n        style=\"cursor:pointer\">\\n          '+r.moreText+\"\\n      </a>\\n    \"}(e),n[e].after(a),function(e){document.querySelector(\"#\"+r.blockClassName+\"_\"+e).addEventListener(\"click\",function(a){n[e].classList.toggle(\"is-expanded\");var o=a.currentTarget;\"true\"!==o.dataset.clicked?(n[e].innerHTML=t.originalContentArr[e],o.innerHTML=r.lessText,o.dataset.clicked=!0):(n[e].innerHTML=t.truncatedContentArr[e],o.innerHTML=r.moreText,o.dataset.clicked=!1)})}(e)}(l));var s,i,l,c,d,u,C}}}n.options=e,module.exports=n;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZC1zbW9yZS9kaXN0L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLE9BQU8saUhBQWlILGdCQUFnQixrQkFBa0IsTUFBTSxPQUFPLDhDQUE4QyxjQUFjLDhEQUE4RCxPQUFPLGdCQUFnQix1QkFBdUIsSUFBSSxrREFBa0QsOE9BQThPLDJCQUEyQixtQkFBbUIsa0JBQWtCLHVDQUF1QyxJQUFJLDZGQUE2RixzSEFBc0gsb0JBQW9CLDJIQUEySCxxQ0FBcUMsbUVBQW1FLDRLQUE0Syw4QkFBOEIsd0ZBQXdGLHFDQUFxQyxzQkFBc0Isc01BQXNNLEVBQUUsSUFBSSxLQUFLLG9CQUFvQjtBQUMxdUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly80Y2Fnb19iYWNrLy4vbm9kZV9tb2R1bGVzL3JlYWQtc21vcmUvZGlzdC9pbmRleC5qcz83YjViIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBlPXtibG9ja0NsYXNzTmFtZTpcInJlYWQtc21vcmVcIix3b3Jkc0NvdW50OjMwLGNoYXJzQ291bnQ6bnVsbCxtb3JlVGV4dDpcIlJlYWQgTW9yZVwiLGxlc3NUZXh0OlwiUmVhZCBMZXNzXCIsaXNJbmxpbmU6ITF9O2Z1bmN0aW9uIG4obixyKXtyPU9iamVjdC5hc3NpZ24oe30sZSxyKTt2YXIgdD17b3JpZ2luYWxDb250ZW50QXJyOltdLHRydW5jYXRlZENvbnRlbnRBcnI6W119O2Z1bmN0aW9uIGEoZSl7cmV0dXJuIHZvaWQgMCE9PWUuZGF0YXNldC5yZWFkU21vcmVDaGFyc3x8bnVsbCE9PXIuY2hhcnNDb3VudH1yZXR1cm57aW5pdDpmdW5jdGlvbigpe2Zvcih2YXIgZT0wLG89bi5sZW5ndGg7ZTxvOysrZSlsPWUsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLGM9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9PWUuZGF0YXNldC5yZWFkU21vcmVDaGFycz9wYXJzZUludChlLmRhdGFzZXQucmVhZFNtb3JlQ2hhcnMpOm51bGwhPT1yLmNoYXJzQ291bnQ/cGFyc2VJbnQoci5jaGFyc0NvdW50KTp2b2lkIDAhPT1lLmRhdGFzZXQucmVhZFNtb3JlV29yZHM/cGFyc2VJbnQoZS5kYXRhc2V0LnJlYWRTbW9yZVdvcmRzKTpudWxsIT09ci53b3Jkc0NvdW50P3BhcnNlSW50KHIud29yZHNDb3VudCk6dm9pZCAwfShpPW5bZV0pLHU9ZnVuY3Rpb24oZSxuLHIpe3ZvaWQgMD09PXImJihyPSExKTt2YXIgdD1mdW5jdGlvbihlKXtyZXR1cm4gZS5yZXBsYWNlKC8oXlxccyopfChcXHMqJCkvZ2ksXCJcIil9KGUpO3JldHVybiByP3Quc3BsaXQoXCJcIikuc2xpY2UoMCxuLTEpLmpvaW4oXCJcIikrXCIuLi5cIjp0LnNwbGl0KC9cXHMrLykuc2xpY2UoMCxuLTEpLmpvaW4oXCIgXCIpK1wiLi4uXCJ9KGQ9aS5pbm5lckhUTUwsYyxhKGkpKSxDPWEoaSk/ZC5sZW5ndGg6KHM9ZCxudWxsIT09cyYmXCJcIiE9PXMmJnMucmVwbGFjZSgvPFtePl0rPi9nLFwiXCIpKS5zcGxpdChcIiBcIikuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVyblwiXCIhPT1lLnRyaW0oKX0pLmxlbmd0aCx0Lm9yaWdpbmFsQ29udGVudEFyci5wdXNoKGQpLHQudHJ1bmNhdGVkQ29udGVudEFyci5wdXNoKHUpLGM8QyYmKGkuaW5uZXJIVE1MPXQudHJ1bmNhdGVkQ29udGVudEFycltsXSxmdW5jdGlvbihlKXt2YXIgYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTthLmNsYXNzTmFtZT1yLmJsb2NrQ2xhc3NOYW1lK1wiX19saW5rLXdyYXBcIixhLmlubmVySFRNTD1mdW5jdGlvbihlKXtyZXR1cm4nXFxuICAgICAgPGEgaWQ9XCInK3IuYmxvY2tDbGFzc05hbWUrXCJfXCIrZSsnXCJcXG4gICAgICAgIGNsYXNzPVwiJytyLmJsb2NrQ2xhc3NOYW1lKydfX2xpbmtcIlxcbiAgICAgICAgc3R5bGU9XCJjdXJzb3I6cG9pbnRlclwiPlxcbiAgICAgICAgICAnK3IubW9yZVRleHQrXCJcXG4gICAgICA8L2E+XFxuICAgIFwifShlKSxuW2VdLmFmdGVyKGEpLGZ1bmN0aW9uKGUpe2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIrci5ibG9ja0NsYXNzTmFtZStcIl9cIitlKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixmdW5jdGlvbihhKXtuW2VdLmNsYXNzTGlzdC50b2dnbGUoXCJpcy1leHBhbmRlZFwiKTt2YXIgbz1hLmN1cnJlbnRUYXJnZXQ7XCJ0cnVlXCIhPT1vLmRhdGFzZXQuY2xpY2tlZD8obltlXS5pbm5lckhUTUw9dC5vcmlnaW5hbENvbnRlbnRBcnJbZV0sby5pbm5lckhUTUw9ci5sZXNzVGV4dCxvLmRhdGFzZXQuY2xpY2tlZD0hMCk6KG5bZV0uaW5uZXJIVE1MPXQudHJ1bmNhdGVkQ29udGVudEFycltlXSxvLmlubmVySFRNTD1yLm1vcmVUZXh0LG8uZGF0YXNldC5jbGlja2VkPSExKX0pfShlKX0obCkpO3ZhciBzLGksbCxjLGQsdSxDfX19bi5vcHRpb25zPWUsbW9kdWxlLmV4cG9ydHM9bjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/read-smore/dist/index.js\n");

/***/ }),

/***/ "./node_modules/slim-select/dist/slimselect.umd.js":
/*!*********************************************************!*\
  !*** ./node_modules/slim-select/dist/slimselect.umd.js ***!
  \*********************************************************/
/***/ (function(module) {

eval("(function (global, factory) {\n     true ? module.exports = factory() :\n    0;\n})(this, (function () { 'use strict';\n\n    function generateID() {\n        return Math.random().toString(36).substring(2, 10);\n    }\n    function hasClassInTree(element, className) {\n        function hasClass(e, c) {\n            if (c && e && e.classList && e.classList.contains(c)) {\n                return e;\n            }\n            if (c && e && e.dataset && e.dataset.id && e.dataset.id === className) {\n                return e;\n            }\n            return null;\n        }\n        function parentByClass(e, c) {\n            if (!e || e === document) {\n                return null;\n            }\n            else if (hasClass(e, c)) {\n                return e;\n            }\n            else {\n                return parentByClass(e.parentNode, c);\n            }\n        }\n        return hasClass(element, className) || parentByClass(element, className);\n    }\n    function debounce(func, wait = 50, immediate = false) {\n        let timeout;\n        return function (...args) {\n            const context = self;\n            const later = () => {\n                timeout = null;\n                if (!immediate) {\n                    func.apply(context, args);\n                }\n            };\n            const callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) {\n                func.apply(context, args);\n            }\n        };\n    }\n    function isEqual(a, b) {\n        return JSON.stringify(a) === JSON.stringify(b);\n    }\n    function kebabCase(str) {\n        const result = str.replace(/[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g, (match) => '-' + match.toLowerCase());\n        return str[0] === str[0].toUpperCase() ? result.substring(1) : result;\n    }\n\n    class Settings {\n        constructor(settings) {\n            this.id = '';\n            this.style = '';\n            this.class = [];\n            this.isMultiple = false;\n            this.isOpen = false;\n            this.triggerFocus = true;\n            this.intervalMove = null;\n            if (!settings) {\n                settings = {};\n            }\n            this.id = 'ss-' + generateID();\n            this.style = settings.style || '';\n            this.class = settings.class || [];\n            this.disabled = settings.disabled !== undefined ? settings.disabled : false;\n            this.alwaysOpen = settings.alwaysOpen !== undefined ? settings.alwaysOpen : false;\n            this.showSearch = settings.showSearch !== undefined ? settings.showSearch : true;\n            this.searchPlaceholder = settings.searchPlaceholder || 'Search';\n            this.searchText = settings.searchText || 'No Results';\n            this.searchingText = settings.searchingText || 'Searching...';\n            this.searchHighlight = settings.searchHighlight !== undefined ? settings.searchHighlight : false;\n            this.closeOnSelect = settings.closeOnSelect !== undefined ? settings.closeOnSelect : true;\n            this.contentLocation = settings.contentLocation || document.body;\n            this.contentPosition = settings.contentPosition || 'absolute';\n            this.openPosition = settings.openPosition || 'auto';\n            this.placeholderText = settings.placeholderText || 'Select Value';\n            this.allowDeselect = settings.allowDeselect !== undefined ? settings.allowDeselect : false;\n            this.hideSelected = settings.hideSelected !== undefined ? settings.hideSelected : false;\n            this.showOptionTooltips = settings.showOptionTooltips !== undefined ? settings.showOptionTooltips : false;\n            this.minSelected = settings.minSelected || 0;\n            this.maxSelected = settings.maxSelected || 1000;\n            this.timeoutDelay = settings.timeoutDelay || 200;\n            this.maxValuesShown = settings.maxValuesShown || 20;\n            this.maxValuesMessage = settings.maxValuesMessage || '{number} selected';\n        }\n    }\n\n    class Optgroup {\n        constructor(optgroup) {\n            this.id = !optgroup.id || optgroup.id === '' ? generateID() : optgroup.id;\n            this.label = optgroup.label || '';\n            this.selectAll = optgroup.selectAll === undefined ? false : optgroup.selectAll;\n            this.closable = optgroup.closable || 'off';\n            this.options = [];\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    this.options.push(new Option(o));\n                }\n            }\n        }\n    }\n    class Option {\n        constructor(option) {\n            this.id = !option.id || option.id === '' ? generateID() : option.id;\n            this.value = option.value === undefined ? option.text : option.value;\n            this.text = option.text || '';\n            this.html = option.html || '';\n            this.selected = option.selected !== undefined ? option.selected : false;\n            this.display = option.display !== undefined ? option.display : true;\n            this.disabled = option.disabled !== undefined ? option.disabled : false;\n            this.mandatory = option.mandatory !== undefined ? option.mandatory : false;\n            this.placeholder = option.placeholder !== undefined ? option.placeholder : false;\n            this.class = option.class || '';\n            this.style = option.style || '';\n            this.data = option.data || {};\n        }\n    }\n    class Store {\n        constructor(type, data) {\n            this.selectType = 'single';\n            this.data = [];\n            this.selectType = type;\n            this.setData(data);\n        }\n        validateDataArray(data) {\n            if (!Array.isArray(data)) {\n                return new Error('Data must be an array');\n            }\n            for (let dataObj of data) {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    if (!('label' in dataObj)) {\n                        return new Error('Optgroup must have a label');\n                    }\n                    if ('options' in dataObj && dataObj.options) {\n                        for (let option of dataObj.options) {\n                            return this.validateOption(option);\n                        }\n                    }\n                }\n                else if (dataObj instanceof Option || 'text' in dataObj) {\n                    return this.validateOption(dataObj);\n                }\n                else {\n                    return new Error('Data object must be a valid optgroup or option');\n                }\n            }\n            return null;\n        }\n        validateOption(option) {\n            if (!('text' in option)) {\n                return new Error('Option must have a text');\n            }\n            return null;\n        }\n        partialToFullData(data) {\n            let dataFinal = [];\n            data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    let optOptions = [];\n                    if ('options' in dataObj && dataObj.options) {\n                        dataObj.options.forEach((option) => {\n                            optOptions.push(new Option(option));\n                        });\n                    }\n                    if (optOptions.length > 0) {\n                        dataFinal.push(new Optgroup(dataObj));\n                    }\n                }\n                if (dataObj instanceof Option || 'text' in dataObj) {\n                    dataFinal.push(new Option(dataObj));\n                }\n            });\n            return dataFinal;\n        }\n        setData(data) {\n            this.data = this.partialToFullData(data);\n            if (this.selectType === 'single') {\n                this.setSelectedBy('value', this.getSelected());\n            }\n        }\n        getData() {\n            return this.filter(null, true);\n        }\n        getDataOptions() {\n            return this.filter(null, false);\n        }\n        addOption(option) {\n            this.setData(this.getData().concat(new Option(option)));\n        }\n        setSelectedBy(selectedType, selectedValues) {\n            let firstOption = null;\n            let hasSelected = false;\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup) {\n                    for (let option of dataObj.options) {\n                        if (!firstOption) {\n                            firstOption = option;\n                        }\n                        option.selected = hasSelected ? false : selectedValues.includes(option[selectedType]);\n                        if (option.selected && this.selectType === 'single') {\n                            hasSelected = true;\n                        }\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!firstOption) {\n                        firstOption = dataObj;\n                    }\n                    dataObj.selected = hasSelected ? false : selectedValues.includes(dataObj[selectedType]);\n                    if (dataObj.selected && this.selectType === 'single') {\n                        hasSelected = true;\n                    }\n                }\n            }\n            if (this.selectType === 'single' && firstOption && !hasSelected) {\n                firstOption.selected = true;\n            }\n        }\n        getSelected() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedValues = [];\n            selectedOptions.forEach((option) => {\n                selectedValues.push(option.value);\n            });\n            return selectedValues;\n        }\n        getSelectedOptions() {\n            return this.filter((opt) => {\n                return opt.selected;\n            }, false);\n        }\n        getSelectedIDs() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedIDs = [];\n            selectedOptions.forEach((op) => {\n                selectedIDs.push(op.id);\n            });\n            return selectedIDs;\n        }\n        getOptgroupByID(id) {\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup && dataObj.id === id) {\n                    return dataObj;\n                }\n            }\n            return null;\n        }\n        getOptionByID(id) {\n            let options = this.filter((opt) => {\n                return opt.id === id;\n            }, false);\n            return options.length ? options[0] : null;\n        }\n        search(search, searchFilter) {\n            search = search.trim();\n            if (search === '') {\n                return this.getData();\n            }\n            return this.filter((opt) => {\n                return searchFilter(opt, search);\n            }, true);\n        }\n        filter(filter, includeOptgroup) {\n            const dataSearch = [];\n            this.data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup) {\n                    let optOptions = [];\n                    dataObj.options.forEach((option) => {\n                        if (!filter || filter(option)) {\n                            if (!includeOptgroup) {\n                                dataSearch.push(new Option(option));\n                            }\n                            else {\n                                optOptions.push(new Option(option));\n                            }\n                        }\n                    });\n                    if (optOptions.length > 0) {\n                        let optgroup = new Optgroup(dataObj);\n                        optgroup.options = optOptions;\n                        dataSearch.push(optgroup);\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!filter || filter(dataObj)) {\n                        dataSearch.push(new Option(dataObj));\n                    }\n                }\n            });\n            return dataSearch;\n        }\n    }\n\n    class Render {\n        constructor(settings, store, callbacks) {\n            this.classes = {\n                main: 'ss-main',\n                placeholder: 'ss-placeholder',\n                values: 'ss-values',\n                single: 'ss-single',\n                max: 'ss-max',\n                value: 'ss-value',\n                valueText: 'ss-value-text',\n                valueDelete: 'ss-value-delete',\n                valueOut: 'ss-value-out',\n                deselect: 'ss-deselect',\n                deselectPath: 'M10,10 L90,90 M10,90 L90,10',\n                arrow: 'ss-arrow',\n                arrowClose: 'M10,30 L50,70 L90,30',\n                arrowOpen: 'M10,70 L50,30 L90,70',\n                content: 'ss-content',\n                openAbove: 'ss-open-above',\n                openBelow: 'ss-open-below',\n                search: 'ss-search',\n                searchHighlighter: 'ss-search-highlight',\n                searching: 'ss-searching',\n                addable: 'ss-addable',\n                addablePath: 'M50,10 L50,90 M10,50 L90,50',\n                list: 'ss-list',\n                optgroup: 'ss-optgroup',\n                optgroupLabel: 'ss-optgroup-label',\n                optgroupLabelText: 'ss-optgroup-label-text',\n                optgroupActions: 'ss-optgroup-actions',\n                optgroupSelectAll: 'ss-selectall',\n                optgroupSelectAllBox: 'M60,10 L10,10 L10,90 L90,90 L90,50',\n                optgroupSelectAllCheck: 'M30,45 L50,70 L90,10',\n                optgroupClosable: 'ss-closable',\n                option: 'ss-option',\n                optionDelete: 'M10,10 L90,90 M10,90 L90,10',\n                highlighted: 'ss-highlighted',\n                open: 'ss-open',\n                close: 'ss-close',\n                selected: 'ss-selected',\n                error: 'ss-error',\n                disabled: 'ss-disabled',\n                hide: 'ss-hide',\n            };\n            this.store = store;\n            this.settings = settings;\n            this.callbacks = callbacks;\n            this.main = this.mainDiv();\n            this.content = this.contentDiv();\n            this.settings.contentLocation.appendChild(this.content.main);\n        }\n        enable() {\n            this.main.main.classList.remove(this.classes.disabled);\n            this.content.search.input.disabled = false;\n        }\n        disable() {\n            this.main.main.classList.add(this.classes.disabled);\n            this.content.search.input.disabled = true;\n        }\n        open() {\n            this.main.arrow.path.setAttribute('d', this.classes.arrowOpen);\n            this.main.main.classList.add(this.settings.openPosition === 'up' ? this.classes.openAbove : this.classes.openBelow);\n            this.moveContent();\n            this.renderOptions(this.store.getData());\n            this.moveContent();\n            const selectedOptions = this.store.getSelectedOptions();\n            if (selectedOptions.length) {\n                const selectedId = selectedOptions[selectedOptions.length - 1].id;\n                const selectedOption = this.content.list.querySelector('[data-id=\"' + selectedId + '\"]');\n                if (selectedOption) {\n                    this.ensureElementInView(this.content.list, selectedOption);\n                }\n            }\n        }\n        close() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.main.arrow.path.setAttribute('d', this.classes.arrowClose);\n        }\n        mainDiv() {\n            const main = document.createElement('div');\n            main.tabIndex = 0;\n            main.style.cssText = this.settings.style !== '' ? this.settings.style : '';\n            main.className = '';\n            main.classList.add(this.settings.id);\n            main.classList.add(this.classes.main);\n            if (this.settings.class) {\n                for (const c of this.settings.class) {\n                    if (c.trim() !== '') {\n                        main.classList.add(c.trim());\n                    }\n                }\n            }\n            main.onfocus = () => {\n                if (this.settings.triggerFocus) {\n                    this.callbacks.open();\n                }\n            };\n            main.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        this.callbacks.open();\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Enter':\n                        const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                        if (highlighted) {\n                            highlighted.click();\n                        }\n                        return false;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                }\n            };\n            main.onclick = (e) => {\n                if (this.settings.disabled) {\n                    return;\n                }\n                this.settings.isOpen ? this.callbacks.close() : this.callbacks.open();\n            };\n            const values = document.createElement('div');\n            values.classList.add(this.classes.values);\n            main.appendChild(values);\n            const deselect = document.createElement('div');\n            deselect.classList.add(this.classes.deselect);\n            if (!this.settings.allowDeselect || this.settings.isMultiple) {\n                deselect.classList.add(this.classes.hide);\n            }\n            deselect.onclick = (e) => {\n                e.stopPropagation();\n                if (this.settings.disabled) {\n                    return;\n                }\n                let shouldDelete = true;\n                const before = this.store.getSelectedOptions();\n                const after = [];\n                if (this.callbacks.beforeChange) {\n                    shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                }\n                if (shouldDelete) {\n                    this.callbacks.setSelected(['']);\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            };\n            const deselectSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            deselectSvg.setAttribute('viewBox', '0 0 100 100');\n            const deselectPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            deselectPath.setAttribute('d', this.classes.deselectPath);\n            deselectSvg.appendChild(deselectPath);\n            deselect.appendChild(deselectSvg);\n            main.appendChild(deselect);\n            const arrow = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            arrow.classList.add(this.classes.arrow);\n            arrow.setAttribute('viewBox', '0 0 100 100');\n            const arrowPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            arrowPath.setAttribute('d', this.classes.arrowClose);\n            if (this.settings.alwaysOpen) {\n                arrow.classList.add(this.classes.hide);\n            }\n            arrow.appendChild(arrowPath);\n            main.appendChild(arrow);\n            return {\n                main: main,\n                values: values,\n                deselect: {\n                    main: deselect,\n                    svg: deselectSvg,\n                    path: deselectPath,\n                },\n                arrow: {\n                    main: arrow,\n                    path: arrowPath,\n                },\n            };\n        }\n        mainFocus(trigger) {\n            if (!trigger) {\n                this.settings.triggerFocus = false;\n            }\n            this.main.main.focus({ preventScroll: true });\n            this.settings.triggerFocus = true;\n        }\n        placeholder() {\n            const placeholderOption = this.store.filter((o) => o.placeholder, false);\n            let placeholderText = this.settings.placeholderText;\n            if (placeholderOption.length) {\n                if (placeholderOption[0].html !== '') {\n                    placeholderText = placeholderOption[0].html;\n                }\n                else if (placeholderOption[0].text !== '') {\n                    placeholderText = placeholderOption[0].text;\n                }\n            }\n            const placeholder = document.createElement('div');\n            placeholder.classList.add(this.classes.placeholder);\n            placeholder.innerHTML = placeholderText;\n            return placeholder;\n        }\n        renderValues() {\n            if (!this.settings.isMultiple) {\n                this.renderSingleValue();\n                return;\n            }\n            this.renderMultipleValues();\n        }\n        renderSingleValue() {\n            const selected = this.store.filter((o) => {\n                return o.selected && !o.placeholder;\n            }, false);\n            const selectedSingle = selected.length > 0 ? selected[0] : null;\n            if (!selectedSingle) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n            }\n            else {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.single);\n                singleValue.innerHTML = selectedSingle.html ? selectedSingle.html : selectedSingle.text;\n                this.main.values.innerHTML = singleValue.outerHTML;\n            }\n            if (!this.settings.allowDeselect || !selected.length) {\n                this.main.deselect.main.classList.add(this.classes.hide);\n            }\n            else {\n                this.main.deselect.main.classList.remove(this.classes.hide);\n            }\n        }\n        renderMultipleValues() {\n            let currentNodes = this.main.values.childNodes;\n            let selectedOptions = this.store.filter((opt) => {\n                return opt.selected && opt.display;\n            }, false);\n            if (selectedOptions.length === 0) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n                return;\n            }\n            else {\n                const placeholder = this.main.values.querySelector('.' + this.classes.placeholder);\n                if (placeholder) {\n                    placeholder.remove();\n                }\n            }\n            if (selectedOptions.length > this.settings.maxValuesShown) {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.max);\n                singleValue.textContent = this.settings.maxValuesMessage.replace('{number}', selectedOptions.length.toString());\n                this.main.values.innerHTML = singleValue.outerHTML;\n                return;\n            }\n            else {\n                const maxValuesMessage = this.main.values.querySelector('.' + this.classes.max);\n                if (maxValuesMessage) {\n                    maxValuesMessage.remove();\n                }\n            }\n            let removeNodes = [];\n            for (let i = 0; i < currentNodes.length; i++) {\n                const node = currentNodes[i];\n                const id = node.getAttribute('data-id');\n                if (id) {\n                    const found = selectedOptions.filter((opt) => {\n                        return opt.id === id;\n                    }, false);\n                    if (!found.length) {\n                        removeNodes.push(node);\n                    }\n                }\n            }\n            for (const n of removeNodes) {\n                n.classList.add(this.classes.valueOut);\n                setTimeout(() => {\n                    this.main.values.removeChild(n);\n                }, 100);\n            }\n            currentNodes = this.main.values.childNodes;\n            for (let d = 0; d < selectedOptions.length; d++) {\n                let shouldAdd = true;\n                for (let i = 0; i < currentNodes.length; i++) {\n                    if (selectedOptions[d].id === String(currentNodes[i].dataset.id)) {\n                        shouldAdd = false;\n                    }\n                }\n                if (shouldAdd) {\n                    if (currentNodes.length === 0) {\n                        this.main.values.appendChild(this.multipleValue(selectedOptions[d]));\n                    }\n                    else if (d === 0) {\n                        this.main.values.insertBefore(this.multipleValue(selectedOptions[d]), currentNodes[d]);\n                    }\n                    else {\n                        currentNodes[d - 1].insertAdjacentElement('afterend', this.multipleValue(selectedOptions[d]));\n                    }\n                }\n            }\n        }\n        multipleValue(option) {\n            const value = document.createElement('div');\n            value.classList.add(this.classes.value);\n            value.dataset.id = option.id;\n            const text = document.createElement('div');\n            text.classList.add(this.classes.valueText);\n            text.innerHTML = option.text;\n            value.appendChild(text);\n            if (!option.mandatory) {\n                const deleteDiv = document.createElement('div');\n                deleteDiv.classList.add(this.classes.valueDelete);\n                deleteDiv.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (this.settings.disabled) {\n                        return;\n                    }\n                    let shouldDelete = true;\n                    const before = this.store.getSelectedOptions();\n                    const after = before.filter((o) => {\n                        return o.selected && o.id !== option.id;\n                    }, true);\n                    if (this.settings.minSelected && after.length < this.settings.minSelected) {\n                        return;\n                    }\n                    if (this.callbacks.beforeChange) {\n                        shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                    }\n                    if (shouldDelete) {\n                        let selectedValues = [];\n                        for (const o of after) {\n                            if (o instanceof Optgroup) {\n                                for (const c of o.options) {\n                                    selectedValues.push(c.value);\n                                }\n                            }\n                            if (o instanceof Option) {\n                                selectedValues.push(o.value);\n                            }\n                        }\n                        this.callbacks.setSelected(selectedValues);\n                        if (this.settings.closeOnSelect) {\n                            this.callbacks.close();\n                        }\n                        if (this.callbacks.afterChange) {\n                            this.callbacks.afterChange(after);\n                        }\n                    }\n                };\n                const deleteSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                deleteSvg.setAttribute('viewBox', '0 0 100 100');\n                const deletePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                deletePath.setAttribute('d', this.classes.optionDelete);\n                deleteSvg.appendChild(deletePath);\n                deleteDiv.appendChild(deleteSvg);\n                value.appendChild(deleteDiv);\n            }\n            return value;\n        }\n        contentDiv() {\n            const main = document.createElement('div');\n            main.classList.add(this.classes.content);\n            main.dataset.id = this.settings.id;\n            if (this.settings.style !== '') {\n                main.style.cssText = this.settings.style;\n            }\n            if (this.settings.contentPosition === 'relative') {\n                main.classList.add('ss-' + this.settings.contentPosition);\n            }\n            if (this.settings.class.length) {\n                for (const c of this.settings.class) {\n                    if (c.trim() !== '') {\n                        main.classList.add(c.trim());\n                    }\n                }\n            }\n            const search = this.searchDiv();\n            main.appendChild(search.main);\n            const list = this.listDiv();\n            main.appendChild(list);\n            return {\n                main: main,\n                search: search,\n                list: list,\n            };\n        }\n        moveContent() {\n            if (this.settings.contentPosition === 'relative') {\n                this.moveContentBelow();\n                return;\n            }\n            if (this.settings.openPosition === 'down') {\n                this.moveContentBelow();\n                return;\n            }\n            else if (this.settings.openPosition === 'up') {\n                this.moveContentAbove();\n                return;\n            }\n            if (this.putContent() === 'up') {\n                this.moveContentAbove();\n            }\n            else {\n                this.moveContentBelow();\n            }\n        }\n        searchDiv() {\n            const main = document.createElement('div');\n            const input = document.createElement('input');\n            const addable = document.createElement('div');\n            main.classList.add(this.classes.search);\n            const searchReturn = {\n                main,\n                input,\n            };\n            if (!this.settings.showSearch) {\n                main.classList.add(this.classes.hide);\n                input.readOnly = true;\n            }\n            input.type = 'search';\n            input.placeholder = this.settings.searchPlaceholder;\n            input.tabIndex = -1;\n            input.setAttribute('aria-label', this.settings.searchPlaceholder);\n            input.setAttribute('autocapitalize', 'off');\n            input.setAttribute('autocomplete', 'off');\n            input.setAttribute('autocorrect', 'off');\n            input.oninput = debounce((e) => {\n                this.callbacks.search(e.target.value);\n            }, 100);\n            input.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        this.callbacks.open();\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                    case 'Enter':\n                        if (this.callbacks.addable && e.ctrlKey) {\n                            addable.click();\n                        }\n                        else {\n                            const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                            if (highlighted) {\n                                highlighted.click();\n                            }\n                        }\n                        return false;\n                }\n            };\n            input.onfocus = () => {\n                if (this.settings.isOpen) {\n                    return;\n                }\n                this.callbacks.open();\n            };\n            main.appendChild(input);\n            if (this.callbacks.addable) {\n                addable.classList.add(this.classes.addable);\n                const plus = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                plus.setAttribute('viewBox', '0 0 100 100');\n                const plusPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                plusPath.setAttribute('d', this.classes.addablePath);\n                plus.appendChild(plusPath);\n                addable.appendChild(plus);\n                addable.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (!this.callbacks.addable) {\n                        return;\n                    }\n                    const inputValue = this.content.search.input.value.trim();\n                    if (inputValue === '') {\n                        this.content.search.input.focus();\n                        return;\n                    }\n                    const runFinish = (oo) => {\n                        let newOption = new Option(oo);\n                        this.callbacks.addOption(newOption);\n                        if (this.settings.isMultiple) {\n                            let values = this.store.getSelected();\n                            values.push(newOption.value);\n                            this.callbacks.setSelected(values);\n                        }\n                        else {\n                            this.callbacks.setSelected([newOption.value]);\n                        }\n                        this.callbacks.search('');\n                        if (this.settings.closeOnSelect) {\n                            setTimeout(() => {\n                                this.callbacks.close();\n                            }, 100);\n                        }\n                    };\n                    const addableValue = this.callbacks.addable(inputValue);\n                    if (addableValue instanceof Promise) {\n                        addableValue.then((value) => {\n                            if (typeof value === 'string') {\n                                runFinish({\n                                    text: value,\n                                    value: value,\n                                });\n                            }\n                            else {\n                                runFinish(value);\n                            }\n                        });\n                    }\n                    else if (typeof addableValue === 'string') {\n                        runFinish({\n                            text: addableValue,\n                            value: addableValue,\n                        });\n                    }\n                    else {\n                        runFinish(addableValue);\n                    }\n                    return;\n                };\n                main.appendChild(addable);\n                searchReturn.addable = {\n                    main: addable,\n                    svg: plus,\n                    path: plusPath,\n                };\n            }\n            return searchReturn;\n        }\n        searchFocus(trigger) {\n            if (!trigger) {\n                this.settings.triggerFocus = false;\n            }\n            this.content.search.input.focus();\n            this.settings.triggerFocus = true;\n        }\n        getOptions(notPlaceholder = false, notDisabled = false, notHidden = false) {\n            let query = '.' + this.classes.option;\n            if (notPlaceholder) {\n                query += ':not(.' + this.classes.placeholder + ')';\n            }\n            if (notDisabled) {\n                query += ':not(.' + this.classes.disabled + ')';\n            }\n            if (notHidden) {\n                query += ':not(.' + this.classes.hide + ')';\n            }\n            return Array.from(this.content.list.querySelectorAll(query));\n        }\n        highlight(dir) {\n            const options = this.getOptions(true, true, true);\n            if (options.length === 0) {\n                return;\n            }\n            if (options.length === 1) {\n                if (!options[0].classList.contains(this.classes.highlighted)) {\n                    options[0].classList.add(this.classes.highlighted);\n                    return;\n                }\n            }\n            for (let i = 0; i < options.length; i++) {\n                if (options[i].classList.contains(this.classes.highlighted)) {\n                    const prevOption = options[i];\n                    prevOption.classList.remove(this.classes.highlighted);\n                    const prevParent = prevOption.parentElement;\n                    if (prevParent && prevParent.classList.contains(this.classes.open)) {\n                        const optgroupLabel = prevParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    let selectOption = options[dir === 'down' ? (i + 1 < options.length ? i + 1 : 0) : i - 1 >= 0 ? i - 1 : options.length - 1];\n                    selectOption.classList.add(this.classes.highlighted);\n                    this.ensureElementInView(this.content.list, selectOption);\n                    const selectParent = selectOption.parentElement;\n                    if (selectParent && selectParent.classList.contains(this.classes.close)) {\n                        const optgroupLabel = selectParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    return;\n                }\n            }\n            options[dir === 'down' ? 0 : options.length - 1].classList.add(this.classes.highlighted);\n            this.ensureElementInView(this.content.list, options[dir === 'down' ? 0 : options.length - 1]);\n        }\n        listDiv() {\n            const options = document.createElement('div');\n            options.classList.add(this.classes.list);\n            options.setAttribute('role', 'listbox');\n            return options;\n        }\n        renderError(error) {\n            this.content.list.innerHTML = '';\n            const errorDiv = document.createElement('div');\n            errorDiv.classList.add(this.classes.error);\n            errorDiv.textContent = error;\n            this.content.list.appendChild(errorDiv);\n        }\n        renderSearching() {\n            this.content.list.innerHTML = '';\n            const searchingDiv = document.createElement('div');\n            searchingDiv.classList.add(this.classes.searching);\n            searchingDiv.textContent = this.settings.searchingText;\n            this.content.list.appendChild(searchingDiv);\n        }\n        renderOptions(data) {\n            this.content.list.innerHTML = '';\n            if (data.length === 0) {\n                const noResults = document.createElement('div');\n                noResults.classList.add(this.classes.search);\n                noResults.innerHTML = this.settings.searchText;\n                this.content.list.appendChild(noResults);\n                return;\n            }\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    const optgroupEl = document.createElement('div');\n                    optgroupEl.classList.add(this.classes.optgroup);\n                    const optgroupLabel = document.createElement('div');\n                    optgroupLabel.classList.add(this.classes.optgroupLabel);\n                    optgroupEl.appendChild(optgroupLabel);\n                    const optgroupLabelText = document.createElement('div');\n                    optgroupLabelText.classList.add(this.classes.optgroupLabelText);\n                    optgroupLabelText.textContent = d.label;\n                    optgroupLabel.appendChild(optgroupLabelText);\n                    const optgroupActions = document.createElement('div');\n                    optgroupActions.classList.add(this.classes.optgroupActions);\n                    optgroupLabel.appendChild(optgroupActions);\n                    if (this.settings.isMultiple && d.selectAll) {\n                        const selectAll = document.createElement('div');\n                        selectAll.classList.add(this.classes.optgroupSelectAll);\n                        let allSelected = true;\n                        for (const o of d.options) {\n                            if (!o.selected) {\n                                allSelected = false;\n                                break;\n                            }\n                        }\n                        if (allSelected) {\n                            selectAll.classList.add(this.classes.selected);\n                        }\n                        const selectAllText = document.createElement('span');\n                        selectAllText.textContent = 'Select All';\n                        selectAll.appendChild(selectAllText);\n                        const selectAllSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        selectAllSvg.setAttribute('viewBox', '0 0 100 100');\n                        selectAll.appendChild(selectAllSvg);\n                        const selectAllBox = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllBox.setAttribute('d', this.classes.optgroupSelectAllBox);\n                        selectAllSvg.appendChild(selectAllBox);\n                        const selectAllCheck = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllCheck.setAttribute('d', this.classes.optgroupSelectAllCheck);\n                        selectAllSvg.appendChild(selectAllCheck);\n                        selectAll.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            const currentSelected = this.store.getSelected();\n                            if (allSelected) {\n                                const newSelected = currentSelected.filter((s) => {\n                                    for (const o of d.options) {\n                                        if (s === o.value) {\n                                            return false;\n                                        }\n                                    }\n                                    return true;\n                                });\n                                this.callbacks.setSelected(newSelected);\n                                return;\n                            }\n                            else {\n                                const newSelected = currentSelected.concat(d.options.map((o) => o.value));\n                                this.callbacks.setSelected(newSelected);\n                            }\n                        });\n                        optgroupActions.appendChild(selectAll);\n                    }\n                    if (d.closable !== 'off') {\n                        const optgroupClosable = document.createElement('div');\n                        optgroupClosable.classList.add(this.classes.optgroupClosable);\n                        const optgroupClosableSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        optgroupClosableSvg.setAttribute('viewBox', '0 0 100 100');\n                        optgroupClosableSvg.classList.add(this.classes.arrow);\n                        optgroupClosable.appendChild(optgroupClosableSvg);\n                        const optgroupClosableArrow = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        optgroupClosableSvg.appendChild(optgroupClosableArrow);\n                        if (d.options.some((o) => o.selected) || this.content.search.input.value.trim() !== '') {\n                            optgroupClosable.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'open') {\n                            optgroupEl.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'close') {\n                            optgroupEl.classList.add(this.classes.close);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                        }\n                        optgroupLabel.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            if (optgroupEl.classList.contains(this.classes.close)) {\n                                optgroupEl.classList.remove(this.classes.close);\n                                optgroupEl.classList.add(this.classes.open);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                            }\n                            else {\n                                optgroupEl.classList.remove(this.classes.open);\n                                optgroupEl.classList.add(this.classes.close);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                            }\n                        });\n                        optgroupActions.appendChild(optgroupClosable);\n                    }\n                    optgroupEl.appendChild(optgroupLabel);\n                    for (const o of d.options) {\n                        optgroupEl.appendChild(this.option(o));\n                    }\n                    this.content.list.appendChild(optgroupEl);\n                }\n                if (d instanceof Option) {\n                    this.content.list.appendChild(this.option(d));\n                }\n            }\n        }\n        option(option) {\n            if (option.placeholder) {\n                const placeholder = document.createElement('div');\n                placeholder.classList.add(this.classes.option);\n                placeholder.classList.add(this.classes.hide);\n                return placeholder;\n            }\n            const optionEl = document.createElement('div');\n            optionEl.dataset.id = option.id;\n            optionEl.classList.add(this.classes.option);\n            optionEl.setAttribute('role', 'option');\n            if (option.class) {\n                option.class.split(' ').forEach((dataClass) => {\n                    optionEl.classList.add(dataClass);\n                });\n            }\n            if (option.style) {\n                optionEl.style.cssText = option.style;\n            }\n            if (this.settings.searchHighlight && this.content.search.input.value.trim() !== '') {\n                optionEl.innerHTML = this.highlightText(option.html !== '' ? option.html : option.text, this.content.search.input.value, this.classes.searchHighlighter);\n            }\n            else if (option.html !== '') {\n                optionEl.innerHTML = option.html;\n            }\n            else {\n                optionEl.textContent = option.text;\n            }\n            if (this.settings.showOptionTooltips && optionEl.textContent) {\n                optionEl.setAttribute('title', optionEl.textContent);\n            }\n            if (option.disabled) {\n                optionEl.classList.add(this.classes.disabled);\n            }\n            if (option.selected && this.settings.hideSelected) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.selected) {\n                optionEl.classList.add(this.classes.selected);\n            }\n            else {\n                optionEl.classList.remove(this.classes.selected);\n            }\n            optionEl.addEventListener('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const selectedOptions = this.store.getSelected();\n                const element = e.currentTarget;\n                const elementID = String(element.dataset.id);\n                if (option.disabled || (option.selected && !this.settings.allowDeselect)) {\n                    return;\n                }\n                if ((this.settings.isMultiple && this.settings.maxSelected <= selectedOptions.length && !option.selected) ||\n                    (this.settings.isMultiple && this.settings.minSelected >= selectedOptions.length && option.selected)) {\n                    return;\n                }\n                let shouldUpdate = false;\n                const before = this.store.getSelectedOptions();\n                let after = [];\n                if (this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = before.filter((o) => o.id !== elementID);\n                    }\n                    else {\n                        after = before.concat(option);\n                    }\n                }\n                if (!this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = [];\n                    }\n                    else {\n                        after = [option];\n                    }\n                }\n                if (!this.callbacks.beforeChange) {\n                    shouldUpdate = true;\n                }\n                if (this.callbacks.beforeChange) {\n                    if (this.callbacks.beforeChange(after, before) === false) {\n                        shouldUpdate = false;\n                    }\n                    else {\n                        shouldUpdate = true;\n                    }\n                }\n                if (shouldUpdate) {\n                    if (!this.store.getOptionByID(elementID)) {\n                        this.callbacks.addOption(option);\n                    }\n                    this.callbacks.setSelected(after.map((o) => o.value));\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            });\n            return optionEl;\n        }\n        destroy() {\n            this.main.main.remove();\n            this.content.main.remove();\n        }\n        highlightText(str, search, className) {\n            let completedString = str;\n            const regex = new RegExp('(' + search.trim() + ')(?![^<]*>[^<>]*</)', 'i');\n            if (!str.match(regex)) {\n                return str;\n            }\n            const matchStartPosition = str.match(regex).index;\n            const matchEndPosition = matchStartPosition + str.match(regex)[0].toString().length;\n            const originalTextFoundByRegex = str.substring(matchStartPosition, matchEndPosition);\n            completedString = completedString.replace(regex, `<mark class=\"${className}\">${originalTextFoundByRegex}</mark>`);\n            return completedString;\n        }\n        moveContentAbove() {\n            const mainHeight = this.main.main.offsetHeight;\n            const contentHeight = this.content.main.offsetHeight;\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.classList.add(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.content.main.classList.add(this.classes.openAbove);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-' + (mainHeight + contentHeight - 1) + 'px 0px 0px 0px';\n            this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n            this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n            this.content.main.style.width = containerRect.width + 'px';\n        }\n        moveContentBelow() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.add(this.classes.openBelow);\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.add(this.classes.openBelow);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-1px 0px 0px 0px';\n            if (this.settings.contentPosition !== 'relative') {\n                this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n                this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n                this.content.main.style.width = containerRect.width + 'px';\n            }\n        }\n        ensureElementInView(container, element) {\n            const cTop = container.scrollTop + container.offsetTop;\n            const cBottom = cTop + container.clientHeight;\n            const eTop = element.offsetTop;\n            const eBottom = eTop + element.clientHeight;\n            if (eTop < cTop) {\n                container.scrollTop -= cTop - eTop;\n            }\n            else if (eBottom > cBottom) {\n                container.scrollTop += eBottom - cBottom;\n            }\n        }\n        putContent() {\n            const mainHeight = this.main.main.offsetHeight;\n            const mainRect = this.main.main.getBoundingClientRect();\n            const contentHeight = this.content.main.offsetHeight;\n            const spaceBelow = window.innerHeight - (mainRect.top + mainHeight);\n            if (spaceBelow <= contentHeight) {\n                if (mainRect.top > contentHeight) {\n                    return 'up';\n                }\n                else {\n                    return 'down';\n                }\n            }\n            return 'down';\n        }\n    }\n\n    class Select {\n        constructor(select) {\n            this.listen = false;\n            this.observer = null;\n            this.select = select;\n            this.select.addEventListener('change', this.valueChange.bind(this), {\n                passive: true,\n            });\n            this.observer = new MutationObserver(this.observeCall.bind(this));\n            this.changeListen(true);\n        }\n        enable() {\n            this.select.disabled = false;\n        }\n        disable() {\n            this.select.disabled = true;\n        }\n        hideUI() {\n            this.select.tabIndex = -1;\n            this.select.style.display = 'none';\n            this.select.setAttribute('aria-hidden', 'true');\n        }\n        showUI() {\n            this.select.removeAttribute('tabindex');\n            this.select.style.display = '';\n            this.select.removeAttribute('aria-hidden');\n        }\n        changeListen(listen) {\n            this.listen = listen;\n            if (listen) {\n                if (this.observer) {\n                    this.observer.observe(this.select, {\n                        subtree: true,\n                        childList: true,\n                        attributes: true,\n                    });\n                }\n            }\n            if (!listen) {\n                if (this.observer) {\n                    this.observer.disconnect();\n                }\n            }\n        }\n        valueChange(ev) {\n            if (this.listen && this.onValueChange) {\n                this.onValueChange(this.getSelectedValues());\n            }\n            return true;\n        }\n        observeCall(mutations) {\n            if (!this.listen) {\n                return;\n            }\n            let disabledChanged = false;\n            let optgroupOptionChanged = false;\n            for (const m of mutations) {\n                if (m.target === this.select) {\n                    if (m.attributeName === 'disabled') {\n                        disabledChanged = true;\n                    }\n                }\n                if (m.target.nodeName === 'OPTGROUP' || m.target.nodeName === 'OPTION') {\n                    optgroupOptionChanged = true;\n                }\n            }\n            if (disabledChanged && this.onDisabledChange) {\n                this.changeListen(false);\n                this.onDisabledChange(this.select.disabled);\n                this.changeListen(true);\n            }\n            if (optgroupOptionChanged && this.onOptionsChange) {\n                this.changeListen(false);\n                this.onOptionsChange(this.getData());\n                this.changeListen(true);\n            }\n        }\n        getData() {\n            let data = [];\n            const nodes = this.select.childNodes;\n            for (const n of nodes) {\n                if (n.nodeName === 'OPTGROUP') {\n                    data.push(this.getDataFromOptgroup(n));\n                }\n                if (n.nodeName === 'OPTION') {\n                    data.push(this.getDataFromOption(n));\n                }\n            }\n            return data;\n        }\n        getDataFromOptgroup(optgroup) {\n            let data = {\n                id: optgroup.id,\n                label: optgroup.label,\n                selectAll: optgroup.dataset ? optgroup.dataset.selectall === 'true' : false,\n                closable: optgroup.dataset ? optgroup.dataset.closable : 'off',\n                options: [],\n            };\n            const options = optgroup.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTION') {\n                    data.options.push(this.getDataFromOption(o));\n                }\n            }\n            return data;\n        }\n        getDataFromOption(option) {\n            return {\n                id: option.id,\n                value: option.value,\n                text: option.text,\n                html: option.dataset && option.dataset.html ? option.dataset.html : '',\n                selected: option.selected,\n                display: option.style.display === 'none' ? false : true,\n                disabled: option.disabled,\n                mandatory: option.dataset ? option.dataset.mandatory === 'true' : false,\n                placeholder: option.dataset.placeholder === 'true',\n                class: option.className,\n                style: option.style.cssText,\n                data: option.dataset,\n            };\n        }\n        getSelectedValues() {\n            let values = [];\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroupOptions = o.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            if (option.selected) {\n                                values.push(option.value);\n                            }\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    if (option.selected) {\n                        values.push(option.value);\n                    }\n                }\n            }\n            return values;\n        }\n        setSelected(value) {\n            this.changeListen(false);\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroup = o;\n                    const optgroupOptions = optgroup.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            option.selected = value.includes(option.value);\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    option.selected = value.includes(option.value);\n                }\n            }\n            this.changeListen(true);\n        }\n        updateSelect(id, style, classes) {\n            this.changeListen(false);\n            if (id) {\n                this.select.id = id;\n            }\n            if (style) {\n                this.select.style.cssText = style;\n            }\n            if (classes) {\n                this.select.className = '';\n                classes.forEach((c) => {\n                    if (c.trim() !== '') {\n                        this.select.classList.add(c.trim());\n                    }\n                });\n            }\n            this.changeListen(true);\n        }\n        updateOptions(data) {\n            this.changeListen(false);\n            this.select.innerHTML = '';\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    this.select.appendChild(this.createOptgroup(d));\n                }\n                if (d instanceof Option) {\n                    this.select.appendChild(this.createOption(d));\n                }\n            }\n            this.select.dispatchEvent(new Event('change'));\n            this.changeListen(true);\n        }\n        createOptgroup(optgroup) {\n            const optgroupEl = document.createElement('optgroup');\n            optgroupEl.id = optgroup.id;\n            optgroupEl.label = optgroup.label;\n            if (optgroup.selectAll) {\n                optgroupEl.dataset.selectAll = 'true';\n            }\n            if (optgroup.closable !== 'off') {\n                optgroupEl.dataset.closable = optgroup.closable;\n            }\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    optgroupEl.appendChild(this.createOption(o));\n                }\n            }\n            return optgroupEl;\n        }\n        createOption(info) {\n            const optionEl = document.createElement('option');\n            optionEl.id = info.id;\n            optionEl.value = info.value;\n            optionEl.innerHTML = info.text;\n            if (info.html !== '') {\n                optionEl.setAttribute('data-html', info.html);\n            }\n            if (info.selected) {\n                optionEl.selected = info.selected;\n            }\n            if (info.disabled) {\n                optionEl.disabled = true;\n            }\n            if (info.display === false) {\n                optionEl.style.display = 'none';\n            }\n            if (info.placeholder) {\n                optionEl.setAttribute('data-placeholder', 'true');\n            }\n            if (info.mandatory) {\n                optionEl.setAttribute('data-mandatory', 'true');\n            }\n            if (info.class) {\n                info.class.split(' ').forEach((optionClass) => {\n                    optionEl.classList.add(optionClass);\n                });\n            }\n            if (info.data && typeof info.data === 'object') {\n                Object.keys(info.data).forEach((key) => {\n                    optionEl.setAttribute('data-' + kebabCase(key), info.data[key]);\n                });\n            }\n            return optionEl;\n        }\n        destroy() {\n            this.changeListen(false);\n            this.select.removeEventListener('change', this.valueChange.bind(this));\n            if (this.observer) {\n                this.observer.disconnect();\n                this.observer = null;\n            }\n            this.showUI();\n        }\n    }\n\n    class SlimSelect {\n        constructor(config) {\n            var _a;\n            this.events = {\n                search: undefined,\n                searchFilter: (opt, search) => {\n                    return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n                },\n                addable: undefined,\n                beforeChange: undefined,\n                afterChange: undefined,\n                beforeOpen: undefined,\n                afterOpen: undefined,\n                beforeClose: undefined,\n                afterClose: undefined,\n            };\n            this.windowResize = debounce(() => {\n                if (!this.settings.isOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.windowScroll = debounce(() => {\n                if (!this.settings.isOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.documentClick = (e) => {\n                if (!this.settings.isOpen) {\n                    return;\n                }\n                if (e.target && !hasClassInTree(e.target, this.settings.id)) {\n                    this.close();\n                }\n            };\n            this.selectEl = (typeof config.select === 'string' ? document.querySelector(config.select) : config.select);\n            if (!this.selectEl) {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Could not find select element'));\n                }\n                return;\n            }\n            if (this.selectEl.tagName !== 'SELECT') {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Element isnt of type select'));\n                }\n                return;\n            }\n            if (this.selectEl.dataset.ssid) {\n                this.destroy();\n            }\n            this.settings = new Settings(config.settings);\n            for (const key in config.events) {\n                if (config.events.hasOwnProperty(key)) {\n                    this.events[key] = config.events[key];\n                }\n            }\n            this.settings.disabled = ((_a = config.settings) === null || _a === void 0 ? void 0 : _a.disabled) ? config.settings.disabled : this.selectEl.disabled;\n            this.settings.isMultiple = this.selectEl.multiple;\n            this.settings.style = this.selectEl.style.cssText;\n            this.settings.class = this.selectEl.className.split(' ');\n            this.select = new Select(this.selectEl);\n            this.select.updateSelect(this.settings.id, this.settings.style, this.settings.class);\n            this.select.hideUI();\n            this.select.onValueChange = (values) => {\n                this.setSelected(values);\n            };\n            this.select.onDisabledChange = (disabled) => {\n                if (disabled) {\n                    this.disable();\n                }\n                else {\n                    this.enable();\n                }\n            };\n            this.select.onOptionsChange = (data) => {\n                this.setData(data);\n            };\n            this.store = new Store(this.settings.isMultiple ? 'multiple' : 'single', config.data ? config.data : this.select.getData());\n            if (config.data) {\n                this.select.updateOptions(this.store.getData());\n            }\n            const callbacks = {\n                open: this.open.bind(this),\n                close: this.close.bind(this),\n                addable: this.events.addable ? this.events.addable : undefined,\n                setSelected: this.setSelected.bind(this),\n                addOption: this.addOption.bind(this),\n                search: this.search.bind(this),\n                beforeChange: this.events.beforeChange,\n                afterChange: this.events.afterChange,\n            };\n            this.render = new Render(this.settings, this.store, callbacks);\n            this.render.renderValues();\n            this.render.renderOptions(this.store.getData());\n            if (this.selectEl.parentNode) {\n                this.selectEl.parentNode.insertBefore(this.render.main.main, this.selectEl.nextSibling);\n            }\n            document.addEventListener('click', this.documentClick);\n            window.addEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.addEventListener('scroll', this.windowScroll, false);\n            }\n            if (this.settings.disabled) {\n                this.disable();\n            }\n            if (this.settings.alwaysOpen) {\n                this.open();\n            }\n            this.selectEl.slim = this;\n        }\n        enable() {\n            this.settings.disabled = false;\n            this.select.enable();\n            this.render.enable();\n        }\n        disable() {\n            this.settings.disabled = true;\n            this.select.disable();\n            this.render.disable();\n        }\n        getData() {\n            return this.store.getData();\n        }\n        setData(data) {\n            const selected = this.store.getSelected();\n            const err = this.store.validateDataArray(data);\n            if (err) {\n                if (this.events.error) {\n                    this.events.error(err);\n                }\n                return;\n            }\n            this.store.setData(data);\n            const dataClean = this.store.getData();\n            this.select.updateOptions(dataClean);\n            this.render.renderValues();\n            this.render.renderOptions(dataClean);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        getSelected() {\n            return this.store.getSelected();\n        }\n        setSelected(value) {\n            const selected = this.store.getSelected();\n            this.store.setSelectedBy('value', Array.isArray(value) ? value : [value]);\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            if (this.render.content.search.input.value !== '') {\n                this.search(this.render.content.search.input.value);\n            }\n            else {\n                this.render.renderOptions(data);\n            }\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        addOption(option) {\n            const selected = this.store.getSelected();\n            this.store.addOption(option);\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            this.render.renderOptions(data);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        open() {\n            if (this.settings.disabled || this.settings.isOpen) {\n                return;\n            }\n            if (this.events.beforeOpen) {\n                this.events.beforeOpen();\n            }\n            this.render.open();\n            if (this.settings.showSearch) {\n                this.render.searchFocus(false);\n            }\n            setTimeout(() => {\n                if (this.events.afterOpen) {\n                    this.events.afterOpen();\n                }\n                this.settings.isOpen = true;\n            }, this.settings.timeoutDelay);\n            if (this.settings.contentPosition === 'absolute') {\n                if (this.settings.intervalMove) {\n                    clearInterval(this.settings.intervalMove);\n                }\n                this.settings.intervalMove = setInterval(this.render.moveContent.bind(this.render), 500);\n            }\n        }\n        close() {\n            if (!this.settings.isOpen || this.settings.alwaysOpen) {\n                return;\n            }\n            if (this.events.beforeClose) {\n                this.events.beforeClose();\n            }\n            this.render.close();\n            this.search('');\n            this.render.mainFocus(false);\n            setTimeout(() => {\n                if (this.events.afterClose) {\n                    this.events.afterClose();\n                }\n                this.settings.isOpen = false;\n            }, this.settings.timeoutDelay);\n            if (this.settings.intervalMove) {\n                clearInterval(this.settings.intervalMove);\n            }\n        }\n        search(value) {\n            if (this.render.content.search.input.value !== value) {\n                this.render.content.search.input.value = value;\n            }\n            if (!this.events.search) {\n                this.render.renderOptions(value === '' ? this.store.getData() : this.store.search(value, this.events.searchFilter));\n                return;\n            }\n            this.render.renderSearching();\n            const searchResp = this.events.search(value, this.store.getSelectedOptions());\n            if (searchResp instanceof Promise) {\n                searchResp\n                    .then((data) => {\n                    this.render.renderOptions(this.store.partialToFullData(data));\n                })\n                    .catch((err) => {\n                    this.render.renderError(typeof err === 'string' ? err : err.message);\n                });\n                return;\n            }\n            else if (Array.isArray(searchResp)) {\n                this.render.renderOptions(this.store.partialToFullData(searchResp));\n            }\n            else {\n                this.render.renderError('Search event must return a promise or an array of data');\n            }\n        }\n        destroy() {\n            document.removeEventListener('click', this.documentClick);\n            window.removeEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.removeEventListener('scroll', this.windowScroll, false);\n            }\n            this.store.setData([]);\n            this.render.destroy();\n            this.select.destroy();\n        }\n    }\n\n    return SlimSelect;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2xpbS1zZWxlY3QvZGlzdC9zbGltc2VsZWN0LnVtZC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUksS0FBNEQ7QUFDaEUsSUFBSSxDQUN5RztBQUM3RyxDQUFDLHVCQUF1Qjs7QUFFeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLFFBQVE7QUFDM0U7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxxQkFBcUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUZBQW1GLE9BQU87QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIseUJBQXlCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSw0QkFBNEIsNEJBQTRCO0FBQ3hEO0FBQ0EsZ0NBQWdDLHlCQUF5QjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG9CQUFvQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLFVBQVUsSUFBSSx5QkFBeUI7QUFDcEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly80Y2Fnb19iYWNrLy4vbm9kZV9tb2R1bGVzL3NsaW0tc2VsZWN0L2Rpc3Qvc2xpbXNlbGVjdC51bWQuanM/ODkzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuICAgIHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyA/IG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpIDpcbiAgICB0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgPyBkZWZpbmUoZmFjdG9yeSkgOlxuICAgIChnbG9iYWwgPSB0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWxUaGlzIDogZ2xvYmFsIHx8IHNlbGYsIGdsb2JhbC5TbGltU2VsZWN0ID0gZmFjdG9yeSgpKTtcbn0pKHRoaXMsIChmdW5jdGlvbiAoKSB7ICd1c2Ugc3RyaWN0JztcblxuICAgIGZ1bmN0aW9uIGdlbmVyYXRlSUQoKSB7XG4gICAgICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgMTApO1xuICAgIH1cbiAgICBmdW5jdGlvbiBoYXNDbGFzc0luVHJlZShlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgICAgICAgZnVuY3Rpb24gaGFzQ2xhc3MoZSwgYykge1xuICAgICAgICAgICAgaWYgKGMgJiYgZSAmJiBlLmNsYXNzTGlzdCAmJiBlLmNsYXNzTGlzdC5jb250YWlucyhjKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGMgJiYgZSAmJiBlLmRhdGFzZXQgJiYgZS5kYXRhc2V0LmlkICYmIGUuZGF0YXNldC5pZCA9PT0gY2xhc3NOYW1lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBwYXJlbnRCeUNsYXNzKGUsIGMpIHtcbiAgICAgICAgICAgIGlmICghZSB8fCBlID09PSBkb2N1bWVudCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaGFzQ2xhc3MoZSwgYykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBwYXJlbnRCeUNsYXNzKGUucGFyZW50Tm9kZSwgYyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhhc0NsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSkgfHwgcGFyZW50QnlDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkZWJvdW5jZShmdW5jLCB3YWl0ID0gNTAsIGltbWVkaWF0ZSA9IGZhbHNlKSB7XG4gICAgICAgIGxldCB0aW1lb3V0O1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRleHQgPSBzZWxmO1xuICAgICAgICAgICAgY29uc3QgbGF0ZXIgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGltZW91dCA9IG51bGw7XG4gICAgICAgICAgICAgICAgaWYgKCFpbW1lZGlhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3QgY2FsbE5vdyA9IGltbWVkaWF0ZSAmJiAhdGltZW91dDtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgICAgICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KGxhdGVyLCB3YWl0KTtcbiAgICAgICAgICAgIGlmIChjYWxsTm93KSB7XG4gICAgICAgICAgICAgICAgZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNFcXVhbChhLCBiKSB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShhKSA9PT0gSlNPTi5zdHJpbmdpZnkoYik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGtlYmFiQ2FzZShzdHIpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3RyLnJlcGxhY2UoL1tBLVpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwREVdL2csIChtYXRjaCkgPT4gJy0nICsgbWF0Y2gudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgIHJldHVybiBzdHJbMF0gPT09IHN0clswXS50b1VwcGVyQ2FzZSgpID8gcmVzdWx0LnN1YnN0cmluZygxKSA6IHJlc3VsdDtcbiAgICB9XG5cbiAgICBjbGFzcyBTZXR0aW5ncyB7XG4gICAgICAgIGNvbnN0cnVjdG9yKHNldHRpbmdzKSB7XG4gICAgICAgICAgICB0aGlzLmlkID0gJyc7XG4gICAgICAgICAgICB0aGlzLnN0eWxlID0gJyc7XG4gICAgICAgICAgICB0aGlzLmNsYXNzID0gW107XG4gICAgICAgICAgICB0aGlzLmlzTXVsdGlwbGUgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuaXNPcGVuID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnRyaWdnZXJGb2N1cyA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLmludGVydmFsTW92ZSA9IG51bGw7XG4gICAgICAgICAgICBpZiAoIXNldHRpbmdzKSB7XG4gICAgICAgICAgICAgICAgc2V0dGluZ3MgPSB7fTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuaWQgPSAnc3MtJyArIGdlbmVyYXRlSUQoKTtcbiAgICAgICAgICAgIHRoaXMuc3R5bGUgPSBzZXR0aW5ncy5zdHlsZSB8fCAnJztcbiAgICAgICAgICAgIHRoaXMuY2xhc3MgPSBzZXR0aW5ncy5jbGFzcyB8fCBbXTtcbiAgICAgICAgICAgIHRoaXMuZGlzYWJsZWQgPSBzZXR0aW5ncy5kaXNhYmxlZCAhPT0gdW5kZWZpbmVkID8gc2V0dGluZ3MuZGlzYWJsZWQgOiBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuYWx3YXlzT3BlbiA9IHNldHRpbmdzLmFsd2F5c09wZW4gIT09IHVuZGVmaW5lZCA/IHNldHRpbmdzLmFsd2F5c09wZW4gOiBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuc2hvd1NlYXJjaCA9IHNldHRpbmdzLnNob3dTZWFyY2ggIT09IHVuZGVmaW5lZCA/IHNldHRpbmdzLnNob3dTZWFyY2ggOiB0cnVlO1xuICAgICAgICAgICAgdGhpcy5zZWFyY2hQbGFjZWhvbGRlciA9IHNldHRpbmdzLnNlYXJjaFBsYWNlaG9sZGVyIHx8ICdTZWFyY2gnO1xuICAgICAgICAgICAgdGhpcy5zZWFyY2hUZXh0ID0gc2V0dGluZ3Muc2VhcmNoVGV4dCB8fCAnTm8gUmVzdWx0cyc7XG4gICAgICAgICAgICB0aGlzLnNlYXJjaGluZ1RleHQgPSBzZXR0aW5ncy5zZWFyY2hpbmdUZXh0IHx8ICdTZWFyY2hpbmcuLi4nO1xuICAgICAgICAgICAgdGhpcy5zZWFyY2hIaWdobGlnaHQgPSBzZXR0aW5ncy5zZWFyY2hIaWdobGlnaHQgIT09IHVuZGVmaW5lZCA/IHNldHRpbmdzLnNlYXJjaEhpZ2hsaWdodCA6IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5jbG9zZU9uU2VsZWN0ID0gc2V0dGluZ3MuY2xvc2VPblNlbGVjdCAhPT0gdW5kZWZpbmVkID8gc2V0dGluZ3MuY2xvc2VPblNlbGVjdCA6IHRydWU7XG4gICAgICAgICAgICB0aGlzLmNvbnRlbnRMb2NhdGlvbiA9IHNldHRpbmdzLmNvbnRlbnRMb2NhdGlvbiB8fCBkb2N1bWVudC5ib2R5O1xuICAgICAgICAgICAgdGhpcy5jb250ZW50UG9zaXRpb24gPSBzZXR0aW5ncy5jb250ZW50UG9zaXRpb24gfHwgJ2Fic29sdXRlJztcbiAgICAgICAgICAgIHRoaXMub3BlblBvc2l0aW9uID0gc2V0dGluZ3Mub3BlblBvc2l0aW9uIHx8ICdhdXRvJztcbiAgICAgICAgICAgIHRoaXMucGxhY2Vob2xkZXJUZXh0ID0gc2V0dGluZ3MucGxhY2Vob2xkZXJUZXh0IHx8ICdTZWxlY3QgVmFsdWUnO1xuICAgICAgICAgICAgdGhpcy5hbGxvd0Rlc2VsZWN0ID0gc2V0dGluZ3MuYWxsb3dEZXNlbGVjdCAhPT0gdW5kZWZpbmVkID8gc2V0dGluZ3MuYWxsb3dEZXNlbGVjdCA6IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5oaWRlU2VsZWN0ZWQgPSBzZXR0aW5ncy5oaWRlU2VsZWN0ZWQgIT09IHVuZGVmaW5lZCA/IHNldHRpbmdzLmhpZGVTZWxlY3RlZCA6IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5zaG93T3B0aW9uVG9vbHRpcHMgPSBzZXR0aW5ncy5zaG93T3B0aW9uVG9vbHRpcHMgIT09IHVuZGVmaW5lZCA/IHNldHRpbmdzLnNob3dPcHRpb25Ub29sdGlwcyA6IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5taW5TZWxlY3RlZCA9IHNldHRpbmdzLm1pblNlbGVjdGVkIHx8IDA7XG4gICAgICAgICAgICB0aGlzLm1heFNlbGVjdGVkID0gc2V0dGluZ3MubWF4U2VsZWN0ZWQgfHwgMTAwMDtcbiAgICAgICAgICAgIHRoaXMudGltZW91dERlbGF5ID0gc2V0dGluZ3MudGltZW91dERlbGF5IHx8IDIwMDtcbiAgICAgICAgICAgIHRoaXMubWF4VmFsdWVzU2hvd24gPSBzZXR0aW5ncy5tYXhWYWx1ZXNTaG93biB8fCAyMDtcbiAgICAgICAgICAgIHRoaXMubWF4VmFsdWVzTWVzc2FnZSA9IHNldHRpbmdzLm1heFZhbHVlc01lc3NhZ2UgfHwgJ3tudW1iZXJ9IHNlbGVjdGVkJztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNsYXNzIE9wdGdyb3VwIHtcbiAgICAgICAgY29uc3RydWN0b3Iob3B0Z3JvdXApIHtcbiAgICAgICAgICAgIHRoaXMuaWQgPSAhb3B0Z3JvdXAuaWQgfHwgb3B0Z3JvdXAuaWQgPT09ICcnID8gZ2VuZXJhdGVJRCgpIDogb3B0Z3JvdXAuaWQ7XG4gICAgICAgICAgICB0aGlzLmxhYmVsID0gb3B0Z3JvdXAubGFiZWwgfHwgJyc7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdEFsbCA9IG9wdGdyb3VwLnNlbGVjdEFsbCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBvcHRncm91cC5zZWxlY3RBbGw7XG4gICAgICAgICAgICB0aGlzLmNsb3NhYmxlID0gb3B0Z3JvdXAuY2xvc2FibGUgfHwgJ29mZic7XG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMgPSBbXTtcbiAgICAgICAgICAgIGlmIChvcHRncm91cC5vcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBvIG9mIG9wdGdyb3VwLm9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLnB1c2gobmV3IE9wdGlvbihvKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNsYXNzIE9wdGlvbiB7XG4gICAgICAgIGNvbnN0cnVjdG9yKG9wdGlvbikge1xuICAgICAgICAgICAgdGhpcy5pZCA9ICFvcHRpb24uaWQgfHwgb3B0aW9uLmlkID09PSAnJyA/IGdlbmVyYXRlSUQoKSA6IG9wdGlvbi5pZDtcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSBvcHRpb24udmFsdWUgPT09IHVuZGVmaW5lZCA/IG9wdGlvbi50ZXh0IDogb3B0aW9uLnZhbHVlO1xuICAgICAgICAgICAgdGhpcy50ZXh0ID0gb3B0aW9uLnRleHQgfHwgJyc7XG4gICAgICAgICAgICB0aGlzLmh0bWwgPSBvcHRpb24uaHRtbCB8fCAnJztcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWQgPSBvcHRpb24uc2VsZWN0ZWQgIT09IHVuZGVmaW5lZCA/IG9wdGlvbi5zZWxlY3RlZCA6IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5kaXNwbGF5ID0gb3B0aW9uLmRpc3BsYXkgIT09IHVuZGVmaW5lZCA/IG9wdGlvbi5kaXNwbGF5IDogdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuZGlzYWJsZWQgPSBvcHRpb24uZGlzYWJsZWQgIT09IHVuZGVmaW5lZCA/IG9wdGlvbi5kaXNhYmxlZCA6IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5tYW5kYXRvcnkgPSBvcHRpb24ubWFuZGF0b3J5ICE9PSB1bmRlZmluZWQgPyBvcHRpb24ubWFuZGF0b3J5IDogZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnBsYWNlaG9sZGVyID0gb3B0aW9uLnBsYWNlaG9sZGVyICE9PSB1bmRlZmluZWQgPyBvcHRpb24ucGxhY2Vob2xkZXIgOiBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuY2xhc3MgPSBvcHRpb24uY2xhc3MgfHwgJyc7XG4gICAgICAgICAgICB0aGlzLnN0eWxlID0gb3B0aW9uLnN0eWxlIHx8ICcnO1xuICAgICAgICAgICAgdGhpcy5kYXRhID0gb3B0aW9uLmRhdGEgfHwge307XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2xhc3MgU3RvcmUge1xuICAgICAgICBjb25zdHJ1Y3Rvcih0eXBlLCBkYXRhKSB7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdFR5cGUgPSAnc2luZ2xlJztcbiAgICAgICAgICAgIHRoaXMuZGF0YSA9IFtdO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RUeXBlID0gdHlwZTtcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YShkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICB2YWxpZGF0ZURhdGFBcnJheShkYXRhKSB7XG4gICAgICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IEVycm9yKCdEYXRhIG11c3QgYmUgYW4gYXJyYXknKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAobGV0IGRhdGFPYmogb2YgZGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhT2JqIGluc3RhbmNlb2YgT3B0Z3JvdXAgfHwgJ2xhYmVsJyBpbiBkYXRhT2JqKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghKCdsYWJlbCcgaW4gZGF0YU9iaikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoJ09wdGdyb3VwIG11c3QgaGF2ZSBhIGxhYmVsJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKCdvcHRpb25zJyBpbiBkYXRhT2JqICYmIGRhdGFPYmoub3B0aW9ucykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgb3B0aW9uIG9mIGRhdGFPYmoub3B0aW9ucykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnZhbGlkYXRlT3B0aW9uKG9wdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoZGF0YU9iaiBpbnN0YW5jZW9mIE9wdGlvbiB8fCAndGV4dCcgaW4gZGF0YU9iaikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52YWxpZGF0ZU9wdGlvbihkYXRhT2JqKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoJ0RhdGEgb2JqZWN0IG11c3QgYmUgYSB2YWxpZCBvcHRncm91cCBvciBvcHRpb24nKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICB2YWxpZGF0ZU9wdGlvbihvcHRpb24pIHtcbiAgICAgICAgICAgIGlmICghKCd0ZXh0JyBpbiBvcHRpb24pKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcignT3B0aW9uIG11c3QgaGF2ZSBhIHRleHQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHBhcnRpYWxUb0Z1bGxEYXRhKGRhdGEpIHtcbiAgICAgICAgICAgIGxldCBkYXRhRmluYWwgPSBbXTtcbiAgICAgICAgICAgIGRhdGEuZm9yRWFjaCgoZGF0YU9iaikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhT2JqIGluc3RhbmNlb2YgT3B0Z3JvdXAgfHwgJ2xhYmVsJyBpbiBkYXRhT2JqKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBvcHRPcHRpb25zID0gW107XG4gICAgICAgICAgICAgICAgICAgIGlmICgnb3B0aW9ucycgaW4gZGF0YU9iaiAmJiBkYXRhT2JqLm9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFPYmoub3B0aW9ucy5mb3JFYWNoKChvcHRpb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRPcHRpb25zLnB1c2gobmV3IE9wdGlvbihvcHRpb24pKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcHRPcHRpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFGaW5hbC5wdXNoKG5ldyBPcHRncm91cChkYXRhT2JqKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGRhdGFPYmogaW5zdGFuY2VvZiBPcHRpb24gfHwgJ3RleHQnIGluIGRhdGFPYmopIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YUZpbmFsLnB1c2gobmV3IE9wdGlvbihkYXRhT2JqKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gZGF0YUZpbmFsO1xuICAgICAgICB9XG4gICAgICAgIHNldERhdGEoZGF0YSkge1xuICAgICAgICAgICAgdGhpcy5kYXRhID0gdGhpcy5wYXJ0aWFsVG9GdWxsRGF0YShkYXRhKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnNlbGVjdFR5cGUgPT09ICdzaW5nbGUnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTZWxlY3RlZEJ5KCd2YWx1ZScsIHRoaXMuZ2V0U2VsZWN0ZWQoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZ2V0RGF0YSgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbHRlcihudWxsLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBnZXREYXRhT3B0aW9ucygpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbHRlcihudWxsLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgYWRkT3B0aW9uKG9wdGlvbikge1xuICAgICAgICAgICAgdGhpcy5zZXREYXRhKHRoaXMuZ2V0RGF0YSgpLmNvbmNhdChuZXcgT3B0aW9uKG9wdGlvbikpKTtcbiAgICAgICAgfVxuICAgICAgICBzZXRTZWxlY3RlZEJ5KHNlbGVjdGVkVHlwZSwgc2VsZWN0ZWRWYWx1ZXMpIHtcbiAgICAgICAgICAgIGxldCBmaXJzdE9wdGlvbiA9IG51bGw7XG4gICAgICAgICAgICBsZXQgaGFzU2VsZWN0ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIGZvciAobGV0IGRhdGFPYmogb2YgdGhpcy5kYXRhKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGFPYmogaW5zdGFuY2VvZiBPcHRncm91cCkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBvcHRpb24gb2YgZGF0YU9iai5vcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWZpcnN0T3B0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3RPcHRpb24gPSBvcHRpb247XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRpb24uc2VsZWN0ZWQgPSBoYXNTZWxlY3RlZCA/IGZhbHNlIDogc2VsZWN0ZWRWYWx1ZXMuaW5jbHVkZXMob3B0aW9uW3NlbGVjdGVkVHlwZV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wdGlvbi5zZWxlY3RlZCAmJiB0aGlzLnNlbGVjdFR5cGUgPT09ICdzaW5nbGUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzU2VsZWN0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChkYXRhT2JqIGluc3RhbmNlb2YgT3B0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghZmlyc3RPcHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0T3B0aW9uID0gZGF0YU9iajtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBkYXRhT2JqLnNlbGVjdGVkID0gaGFzU2VsZWN0ZWQgPyBmYWxzZSA6IHNlbGVjdGVkVmFsdWVzLmluY2x1ZGVzKGRhdGFPYmpbc2VsZWN0ZWRUeXBlXSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhT2JqLnNlbGVjdGVkICYmIHRoaXMuc2VsZWN0VHlwZSA9PT0gJ3NpbmdsZScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc1NlbGVjdGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLnNlbGVjdFR5cGUgPT09ICdzaW5nbGUnICYmIGZpcnN0T3B0aW9uICYmICFoYXNTZWxlY3RlZCkge1xuICAgICAgICAgICAgICAgIGZpcnN0T3B0aW9uLnNlbGVjdGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBnZXRTZWxlY3RlZCgpIHtcbiAgICAgICAgICAgIGxldCBzZWxlY3RlZE9wdGlvbnMgPSB0aGlzLmdldFNlbGVjdGVkT3B0aW9ucygpO1xuICAgICAgICAgICAgbGV0IHNlbGVjdGVkVmFsdWVzID0gW107XG4gICAgICAgICAgICBzZWxlY3RlZE9wdGlvbnMuZm9yRWFjaCgob3B0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgc2VsZWN0ZWRWYWx1ZXMucHVzaChvcHRpb24udmFsdWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gc2VsZWN0ZWRWYWx1ZXM7XG4gICAgICAgIH1cbiAgICAgICAgZ2V0U2VsZWN0ZWRPcHRpb25zKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyKChvcHQpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gb3B0LnNlbGVjdGVkO1xuICAgICAgICAgICAgfSwgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIGdldFNlbGVjdGVkSURzKCkge1xuICAgICAgICAgICAgbGV0IHNlbGVjdGVkT3B0aW9ucyA9IHRoaXMuZ2V0U2VsZWN0ZWRPcHRpb25zKCk7XG4gICAgICAgICAgICBsZXQgc2VsZWN0ZWRJRHMgPSBbXTtcbiAgICAgICAgICAgIHNlbGVjdGVkT3B0aW9ucy5mb3JFYWNoKChvcCkgPT4ge1xuICAgICAgICAgICAgICAgIHNlbGVjdGVkSURzLnB1c2gob3AuaWQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gc2VsZWN0ZWRJRHM7XG4gICAgICAgIH1cbiAgICAgICAgZ2V0T3B0Z3JvdXBCeUlEKGlkKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBkYXRhT2JqIG9mIHRoaXMuZGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhT2JqIGluc3RhbmNlb2YgT3B0Z3JvdXAgJiYgZGF0YU9iai5pZCA9PT0gaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGFPYmo7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgZ2V0T3B0aW9uQnlJRChpZCkge1xuICAgICAgICAgICAgbGV0IG9wdGlvbnMgPSB0aGlzLmZpbHRlcigob3B0KSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG9wdC5pZCA9PT0gaWQ7XG4gICAgICAgICAgICB9LCBmYWxzZSk7XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9ucy5sZW5ndGggPyBvcHRpb25zWzBdIDogbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBzZWFyY2goc2VhcmNoLCBzZWFyY2hGaWx0ZXIpIHtcbiAgICAgICAgICAgIHNlYXJjaCA9IHNlYXJjaC50cmltKCk7XG4gICAgICAgICAgICBpZiAoc2VhcmNoID09PSAnJykge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldERhdGEoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbHRlcigob3B0KSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlYXJjaEZpbHRlcihvcHQsIHNlYXJjaCk7XG4gICAgICAgICAgICB9LCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBmaWx0ZXIoZmlsdGVyLCBpbmNsdWRlT3B0Z3JvdXApIHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGFTZWFyY2ggPSBbXTtcbiAgICAgICAgICAgIHRoaXMuZGF0YS5mb3JFYWNoKChkYXRhT2JqKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGFPYmogaW5zdGFuY2VvZiBPcHRncm91cCkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgb3B0T3B0aW9ucyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBkYXRhT2JqLm9wdGlvbnMuZm9yRWFjaCgob3B0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWZpbHRlciB8fCBmaWx0ZXIob3B0aW9uKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaW5jbHVkZU9wdGdyb3VwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFTZWFyY2gucHVzaChuZXcgT3B0aW9uKG9wdGlvbikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0T3B0aW9ucy5wdXNoKG5ldyBPcHRpb24ob3B0aW9uKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wdE9wdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG9wdGdyb3VwID0gbmV3IE9wdGdyb3VwKGRhdGFPYmopO1xuICAgICAgICAgICAgICAgICAgICAgICAgb3B0Z3JvdXAub3B0aW9ucyA9IG9wdE9wdGlvbnM7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhU2VhcmNoLnB1c2gob3B0Z3JvdXApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChkYXRhT2JqIGluc3RhbmNlb2YgT3B0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghZmlsdGVyIHx8IGZpbHRlcihkYXRhT2JqKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVNlYXJjaC5wdXNoKG5ldyBPcHRpb24oZGF0YU9iaikpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gZGF0YVNlYXJjaDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNsYXNzIFJlbmRlciB7XG4gICAgICAgIGNvbnN0cnVjdG9yKHNldHRpbmdzLCBzdG9yZSwgY2FsbGJhY2tzKSB7XG4gICAgICAgICAgICB0aGlzLmNsYXNzZXMgPSB7XG4gICAgICAgICAgICAgICAgbWFpbjogJ3NzLW1haW4nLFxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAnc3MtcGxhY2Vob2xkZXInLFxuICAgICAgICAgICAgICAgIHZhbHVlczogJ3NzLXZhbHVlcycsXG4gICAgICAgICAgICAgICAgc2luZ2xlOiAnc3Mtc2luZ2xlJyxcbiAgICAgICAgICAgICAgICBtYXg6ICdzcy1tYXgnLFxuICAgICAgICAgICAgICAgIHZhbHVlOiAnc3MtdmFsdWUnLFxuICAgICAgICAgICAgICAgIHZhbHVlVGV4dDogJ3NzLXZhbHVlLXRleHQnLFxuICAgICAgICAgICAgICAgIHZhbHVlRGVsZXRlOiAnc3MtdmFsdWUtZGVsZXRlJyxcbiAgICAgICAgICAgICAgICB2YWx1ZU91dDogJ3NzLXZhbHVlLW91dCcsXG4gICAgICAgICAgICAgICAgZGVzZWxlY3Q6ICdzcy1kZXNlbGVjdCcsXG4gICAgICAgICAgICAgICAgZGVzZWxlY3RQYXRoOiAnTTEwLDEwIEw5MCw5MCBNMTAsOTAgTDkwLDEwJyxcbiAgICAgICAgICAgICAgICBhcnJvdzogJ3NzLWFycm93JyxcbiAgICAgICAgICAgICAgICBhcnJvd0Nsb3NlOiAnTTEwLDMwIEw1MCw3MCBMOTAsMzAnLFxuICAgICAgICAgICAgICAgIGFycm93T3BlbjogJ00xMCw3MCBMNTAsMzAgTDkwLDcwJyxcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnc3MtY29udGVudCcsXG4gICAgICAgICAgICAgICAgb3BlbkFib3ZlOiAnc3Mtb3Blbi1hYm92ZScsXG4gICAgICAgICAgICAgICAgb3BlbkJlbG93OiAnc3Mtb3Blbi1iZWxvdycsXG4gICAgICAgICAgICAgICAgc2VhcmNoOiAnc3Mtc2VhcmNoJyxcbiAgICAgICAgICAgICAgICBzZWFyY2hIaWdobGlnaHRlcjogJ3NzLXNlYXJjaC1oaWdobGlnaHQnLFxuICAgICAgICAgICAgICAgIHNlYXJjaGluZzogJ3NzLXNlYXJjaGluZycsXG4gICAgICAgICAgICAgICAgYWRkYWJsZTogJ3NzLWFkZGFibGUnLFxuICAgICAgICAgICAgICAgIGFkZGFibGVQYXRoOiAnTTUwLDEwIEw1MCw5MCBNMTAsNTAgTDkwLDUwJyxcbiAgICAgICAgICAgICAgICBsaXN0OiAnc3MtbGlzdCcsXG4gICAgICAgICAgICAgICAgb3B0Z3JvdXA6ICdzcy1vcHRncm91cCcsXG4gICAgICAgICAgICAgICAgb3B0Z3JvdXBMYWJlbDogJ3NzLW9wdGdyb3VwLWxhYmVsJyxcbiAgICAgICAgICAgICAgICBvcHRncm91cExhYmVsVGV4dDogJ3NzLW9wdGdyb3VwLWxhYmVsLXRleHQnLFxuICAgICAgICAgICAgICAgIG9wdGdyb3VwQWN0aW9uczogJ3NzLW9wdGdyb3VwLWFjdGlvbnMnLFxuICAgICAgICAgICAgICAgIG9wdGdyb3VwU2VsZWN0QWxsOiAnc3Mtc2VsZWN0YWxsJyxcbiAgICAgICAgICAgICAgICBvcHRncm91cFNlbGVjdEFsbEJveDogJ002MCwxMCBMMTAsMTAgTDEwLDkwIEw5MCw5MCBMOTAsNTAnLFxuICAgICAgICAgICAgICAgIG9wdGdyb3VwU2VsZWN0QWxsQ2hlY2s6ICdNMzAsNDUgTDUwLDcwIEw5MCwxMCcsXG4gICAgICAgICAgICAgICAgb3B0Z3JvdXBDbG9zYWJsZTogJ3NzLWNsb3NhYmxlJyxcbiAgICAgICAgICAgICAgICBvcHRpb246ICdzcy1vcHRpb24nLFxuICAgICAgICAgICAgICAgIG9wdGlvbkRlbGV0ZTogJ00xMCwxMCBMOTAsOTAgTTEwLDkwIEw5MCwxMCcsXG4gICAgICAgICAgICAgICAgaGlnaGxpZ2h0ZWQ6ICdzcy1oaWdobGlnaHRlZCcsXG4gICAgICAgICAgICAgICAgb3BlbjogJ3NzLW9wZW4nLFxuICAgICAgICAgICAgICAgIGNsb3NlOiAnc3MtY2xvc2UnLFxuICAgICAgICAgICAgICAgIHNlbGVjdGVkOiAnc3Mtc2VsZWN0ZWQnLFxuICAgICAgICAgICAgICAgIGVycm9yOiAnc3MtZXJyb3InLFxuICAgICAgICAgICAgICAgIGRpc2FibGVkOiAnc3MtZGlzYWJsZWQnLFxuICAgICAgICAgICAgICAgIGhpZGU6ICdzcy1oaWRlJyxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLnN0b3JlID0gc3RvcmU7XG4gICAgICAgICAgICB0aGlzLnNldHRpbmdzID0gc2V0dGluZ3M7XG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrcyA9IGNhbGxiYWNrcztcbiAgICAgICAgICAgIHRoaXMubWFpbiA9IHRoaXMubWFpbkRpdigpO1xuICAgICAgICAgICAgdGhpcy5jb250ZW50ID0gdGhpcy5jb250ZW50RGl2KCk7XG4gICAgICAgICAgICB0aGlzLnNldHRpbmdzLmNvbnRlbnRMb2NhdGlvbi5hcHBlbmRDaGlsZCh0aGlzLmNvbnRlbnQubWFpbik7XG4gICAgICAgIH1cbiAgICAgICAgZW5hYmxlKCkge1xuICAgICAgICAgICAgdGhpcy5tYWluLm1haW4uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmNsYXNzZXMuZGlzYWJsZWQpO1xuICAgICAgICAgICAgdGhpcy5jb250ZW50LnNlYXJjaC5pbnB1dC5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGRpc2FibGUoKSB7XG4gICAgICAgICAgICB0aGlzLm1haW4ubWFpbi5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3Nlcy5kaXNhYmxlZCk7XG4gICAgICAgICAgICB0aGlzLmNvbnRlbnQuc2VhcmNoLmlucHV0LmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBvcGVuKCkge1xuICAgICAgICAgICAgdGhpcy5tYWluLmFycm93LnBhdGguc2V0QXR0cmlidXRlKCdkJywgdGhpcy5jbGFzc2VzLmFycm93T3Blbik7XG4gICAgICAgICAgICB0aGlzLm1haW4ubWFpbi5jbGFzc0xpc3QuYWRkKHRoaXMuc2V0dGluZ3Mub3BlblBvc2l0aW9uID09PSAndXAnID8gdGhpcy5jbGFzc2VzLm9wZW5BYm92ZSA6IHRoaXMuY2xhc3Nlcy5vcGVuQmVsb3cpO1xuICAgICAgICAgICAgdGhpcy5tb3ZlQ29udGVudCgpO1xuICAgICAgICAgICAgdGhpcy5yZW5kZXJPcHRpb25zKHRoaXMuc3RvcmUuZ2V0RGF0YSgpKTtcbiAgICAgICAgICAgIHRoaXMubW92ZUNvbnRlbnQoKTtcbiAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkT3B0aW9ucyA9IHRoaXMuc3RvcmUuZ2V0U2VsZWN0ZWRPcHRpb25zKCk7XG4gICAgICAgICAgICBpZiAoc2VsZWN0ZWRPcHRpb25zLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkSWQgPSBzZWxlY3RlZE9wdGlvbnNbc2VsZWN0ZWRPcHRpb25zLmxlbmd0aCAtIDFdLmlkO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkT3B0aW9uID0gdGhpcy5jb250ZW50Lmxpc3QucXVlcnlTZWxlY3RvcignW2RhdGEtaWQ9XCInICsgc2VsZWN0ZWRJZCArICdcIl0nKTtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWRPcHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbnN1cmVFbGVtZW50SW5WaWV3KHRoaXMuY29udGVudC5saXN0LCBzZWxlY3RlZE9wdGlvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNsb3NlKCkge1xuICAgICAgICAgICAgdGhpcy5tYWluLm1haW4uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmNsYXNzZXMub3BlbkFib3ZlKTtcbiAgICAgICAgICAgIHRoaXMubWFpbi5tYWluLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5jbGFzc2VzLm9wZW5CZWxvdyk7XG4gICAgICAgICAgICB0aGlzLmNvbnRlbnQubWFpbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuY2xhc3Nlcy5vcGVuQWJvdmUpO1xuICAgICAgICAgICAgdGhpcy5jb250ZW50Lm1haW4uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmNsYXNzZXMub3BlbkJlbG93KTtcbiAgICAgICAgICAgIHRoaXMubWFpbi5hcnJvdy5wYXRoLnNldEF0dHJpYnV0ZSgnZCcsIHRoaXMuY2xhc3Nlcy5hcnJvd0Nsb3NlKTtcbiAgICAgICAgfVxuICAgICAgICBtYWluRGl2KCkge1xuICAgICAgICAgICAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgbWFpbi50YWJJbmRleCA9IDA7XG4gICAgICAgICAgICBtYWluLnN0eWxlLmNzc1RleHQgPSB0aGlzLnNldHRpbmdzLnN0eWxlICE9PSAnJyA/IHRoaXMuc2V0dGluZ3Muc3R5bGUgOiAnJztcbiAgICAgICAgICAgIG1haW4uY2xhc3NOYW1lID0gJyc7XG4gICAgICAgICAgICBtYWluLmNsYXNzTGlzdC5hZGQodGhpcy5zZXR0aW5ncy5pZCk7XG4gICAgICAgICAgICBtYWluLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLm1haW4pO1xuICAgICAgICAgICAgaWYgKHRoaXMuc2V0dGluZ3MuY2xhc3MpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGMgb2YgdGhpcy5zZXR0aW5ncy5jbGFzcykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYy50cmltKCkgIT09ICcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYWluLmNsYXNzTGlzdC5hZGQoYy50cmltKCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbWFpbi5vbmZvY3VzID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLnRyaWdnZXJGb2N1cykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrcy5vcGVuKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIG1haW4ub25rZXlkb3duID0gKGUpID0+IHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGUua2V5KSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ0Fycm93VXAnOlxuICAgICAgICAgICAgICAgICAgICBjYXNlICdBcnJvd0Rvd24nOlxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxsYmFja3Mub3BlbigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZS5rZXkgPT09ICdBcnJvd0Rvd24nID8gdGhpcy5oaWdobGlnaHQoJ2Rvd24nKSA6IHRoaXMuaGlnaGxpZ2h0KCd1cCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBjYXNlICdUYWInOlxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxsYmFja3MuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBjYXNlICdFbnRlcic6XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBoaWdobGlnaHRlZCA9IHRoaXMuY29udGVudC5saXN0LnF1ZXJ5U2VsZWN0b3IoJy4nICsgdGhpcy5jbGFzc2VzLmhpZ2hsaWdodGVkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChoaWdobGlnaHRlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpZ2hsaWdodGVkLmNsaWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ0VzY2FwZSc6XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrcy5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBtYWluLm9uY2xpY2sgPSAoZSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmRpc2FibGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5zZXR0aW5ncy5pc09wZW4gPyB0aGlzLmNhbGxiYWNrcy5jbG9zZSgpIDogdGhpcy5jYWxsYmFja3Mub3BlbigpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgdmFsdWVzLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLnZhbHVlcyk7XG4gICAgICAgICAgICBtYWluLmFwcGVuZENoaWxkKHZhbHVlcyk7XG4gICAgICAgICAgICBjb25zdCBkZXNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgZGVzZWxlY3QuY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMuZGVzZWxlY3QpO1xuICAgICAgICAgICAgaWYgKCF0aGlzLnNldHRpbmdzLmFsbG93RGVzZWxlY3QgfHwgdGhpcy5zZXR0aW5ncy5pc011bHRpcGxlKSB7XG4gICAgICAgICAgICAgICAgZGVzZWxlY3QuY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMuaGlkZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZXNlbGVjdC5vbmNsaWNrID0gKGUpID0+IHtcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmRpc2FibGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IHNob3VsZERlbGV0ZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgY29uc3QgYmVmb3JlID0gdGhpcy5zdG9yZS5nZXRTZWxlY3RlZE9wdGlvbnMoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBhZnRlciA9IFtdO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNhbGxiYWNrcy5iZWZvcmVDaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgc2hvdWxkRGVsZXRlID0gdGhpcy5jYWxsYmFja3MuYmVmb3JlQ2hhbmdlKGFmdGVyLCBiZWZvcmUpID09PSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc2hvdWxkRGVsZXRlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLnNldFNlbGVjdGVkKFsnJ10pO1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5jbG9zZU9uU2VsZWN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrcy5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmNhbGxiYWNrcy5hZnRlckNoYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxsYmFja3MuYWZ0ZXJDaGFuZ2UoYWZ0ZXIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNvbnN0IGRlc2VsZWN0U3ZnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICdzdmcnKTtcbiAgICAgICAgICAgIGRlc2VsZWN0U3ZnLnNldEF0dHJpYnV0ZSgndmlld0JveCcsICcwIDAgMTAwIDEwMCcpO1xuICAgICAgICAgICAgY29uc3QgZGVzZWxlY3RQYXRoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICdwYXRoJyk7XG4gICAgICAgICAgICBkZXNlbGVjdFBhdGguc2V0QXR0cmlidXRlKCdkJywgdGhpcy5jbGFzc2VzLmRlc2VsZWN0UGF0aCk7XG4gICAgICAgICAgICBkZXNlbGVjdFN2Zy5hcHBlbmRDaGlsZChkZXNlbGVjdFBhdGgpO1xuICAgICAgICAgICAgZGVzZWxlY3QuYXBwZW5kQ2hpbGQoZGVzZWxlY3RTdmcpO1xuICAgICAgICAgICAgbWFpbi5hcHBlbmRDaGlsZChkZXNlbGVjdCk7XG4gICAgICAgICAgICBjb25zdCBhcnJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCAnc3ZnJyk7XG4gICAgICAgICAgICBhcnJvdy5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3Nlcy5hcnJvdyk7XG4gICAgICAgICAgICBhcnJvdy5zZXRBdHRyaWJ1dGUoJ3ZpZXdCb3gnLCAnMCAwIDEwMCAxMDAnKTtcbiAgICAgICAgICAgIGNvbnN0IGFycm93UGF0aCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCAncGF0aCcpO1xuICAgICAgICAgICAgYXJyb3dQYXRoLnNldEF0dHJpYnV0ZSgnZCcsIHRoaXMuY2xhc3Nlcy5hcnJvd0Nsb3NlKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmFsd2F5c09wZW4pIHtcbiAgICAgICAgICAgICAgICBhcnJvdy5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3Nlcy5oaWRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFycm93LmFwcGVuZENoaWxkKGFycm93UGF0aCk7XG4gICAgICAgICAgICBtYWluLmFwcGVuZENoaWxkKGFycm93KTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbWFpbjogbWFpbixcbiAgICAgICAgICAgICAgICB2YWx1ZXM6IHZhbHVlcyxcbiAgICAgICAgICAgICAgICBkZXNlbGVjdDoge1xuICAgICAgICAgICAgICAgICAgICBtYWluOiBkZXNlbGVjdCxcbiAgICAgICAgICAgICAgICAgICAgc3ZnOiBkZXNlbGVjdFN2ZyxcbiAgICAgICAgICAgICAgICAgICAgcGF0aDogZGVzZWxlY3RQYXRoLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYXJyb3c6IHtcbiAgICAgICAgICAgICAgICAgICAgbWFpbjogYXJyb3csXG4gICAgICAgICAgICAgICAgICAgIHBhdGg6IGFycm93UGF0aCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBtYWluRm9jdXModHJpZ2dlcikge1xuICAgICAgICAgICAgaWYgKCF0cmlnZ2VyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXR0aW5ncy50cmlnZ2VyRm9jdXMgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMubWFpbi5tYWluLmZvY3VzKHsgcHJldmVudFNjcm9sbDogdHJ1ZSB9KTtcbiAgICAgICAgICAgIHRoaXMuc2V0dGluZ3MudHJpZ2dlckZvY3VzID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBwbGFjZWhvbGRlcigpIHtcbiAgICAgICAgICAgIGNvbnN0IHBsYWNlaG9sZGVyT3B0aW9uID0gdGhpcy5zdG9yZS5maWx0ZXIoKG8pID0+IG8ucGxhY2Vob2xkZXIsIGZhbHNlKTtcbiAgICAgICAgICAgIGxldCBwbGFjZWhvbGRlclRleHQgPSB0aGlzLnNldHRpbmdzLnBsYWNlaG9sZGVyVGV4dDtcbiAgICAgICAgICAgIGlmIChwbGFjZWhvbGRlck9wdGlvbi5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBpZiAocGxhY2Vob2xkZXJPcHRpb25bMF0uaHRtbCAhPT0gJycpIHtcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXJUZXh0ID0gcGxhY2Vob2xkZXJPcHRpb25bMF0uaHRtbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAocGxhY2Vob2xkZXJPcHRpb25bMF0udGV4dCAhPT0gJycpIHtcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXJUZXh0ID0gcGxhY2Vob2xkZXJPcHRpb25bMF0udGV4dDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwbGFjZWhvbGRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgcGxhY2Vob2xkZXIuY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMucGxhY2Vob2xkZXIpO1xuICAgICAgICAgICAgcGxhY2Vob2xkZXIuaW5uZXJIVE1MID0gcGxhY2Vob2xkZXJUZXh0O1xuICAgICAgICAgICAgcmV0dXJuIHBsYWNlaG9sZGVyO1xuICAgICAgICB9XG4gICAgICAgIHJlbmRlclZhbHVlcygpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5zZXR0aW5ncy5pc011bHRpcGxlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJTaW5nbGVWYWx1ZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMucmVuZGVyTXVsdGlwbGVWYWx1ZXMoKTtcbiAgICAgICAgfVxuICAgICAgICByZW5kZXJTaW5nbGVWYWx1ZSgpIHtcbiAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkID0gdGhpcy5zdG9yZS5maWx0ZXIoKG8pID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gby5zZWxlY3RlZCAmJiAhby5wbGFjZWhvbGRlcjtcbiAgICAgICAgICAgIH0sIGZhbHNlKTtcbiAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkU2luZ2xlID0gc2VsZWN0ZWQubGVuZ3RoID4gMCA/IHNlbGVjdGVkWzBdIDogbnVsbDtcbiAgICAgICAgICAgIGlmICghc2VsZWN0ZWRTaW5nbGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1haW4udmFsdWVzLmlubmVySFRNTCA9IHRoaXMucGxhY2Vob2xkZXIoKS5vdXRlckhUTUw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBzaW5nbGVWYWx1ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgIHNpbmdsZVZhbHVlLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLnNpbmdsZSk7XG4gICAgICAgICAgICAgICAgc2luZ2xlVmFsdWUuaW5uZXJIVE1MID0gc2VsZWN0ZWRTaW5nbGUuaHRtbCA/IHNlbGVjdGVkU2luZ2xlLmh0bWwgOiBzZWxlY3RlZFNpbmdsZS50ZXh0O1xuICAgICAgICAgICAgICAgIHRoaXMubWFpbi52YWx1ZXMuaW5uZXJIVE1MID0gc2luZ2xlVmFsdWUub3V0ZXJIVE1MO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCF0aGlzLnNldHRpbmdzLmFsbG93RGVzZWxlY3QgfHwgIXNlbGVjdGVkLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRoaXMubWFpbi5kZXNlbGVjdC5tYWluLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLmhpZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5tYWluLmRlc2VsZWN0Lm1haW4uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmNsYXNzZXMuaGlkZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmVuZGVyTXVsdGlwbGVWYWx1ZXMoKSB7XG4gICAgICAgICAgICBsZXQgY3VycmVudE5vZGVzID0gdGhpcy5tYWluLnZhbHVlcy5jaGlsZE5vZGVzO1xuICAgICAgICAgICAgbGV0IHNlbGVjdGVkT3B0aW9ucyA9IHRoaXMuc3RvcmUuZmlsdGVyKChvcHQpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gb3B0LnNlbGVjdGVkICYmIG9wdC5kaXNwbGF5O1xuICAgICAgICAgICAgfSwgZmFsc2UpO1xuICAgICAgICAgICAgaWYgKHNlbGVjdGVkT3B0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1haW4udmFsdWVzLmlubmVySFRNTCA9IHRoaXMucGxhY2Vob2xkZXIoKS5vdXRlckhUTUw7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGxhY2Vob2xkZXIgPSB0aGlzLm1haW4udmFsdWVzLnF1ZXJ5U2VsZWN0b3IoJy4nICsgdGhpcy5jbGFzc2VzLnBsYWNlaG9sZGVyKTtcbiAgICAgICAgICAgICAgICBpZiAocGxhY2Vob2xkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXIucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHNlbGVjdGVkT3B0aW9ucy5sZW5ndGggPiB0aGlzLnNldHRpbmdzLm1heFZhbHVlc1Nob3duKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2luZ2xlVmFsdWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgICAgICBzaW5nbGVWYWx1ZS5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3Nlcy5tYXgpO1xuICAgICAgICAgICAgICAgIHNpbmdsZVZhbHVlLnRleHRDb250ZW50ID0gdGhpcy5zZXR0aW5ncy5tYXhWYWx1ZXNNZXNzYWdlLnJlcGxhY2UoJ3tudW1iZXJ9Jywgc2VsZWN0ZWRPcHRpb25zLmxlbmd0aC50b1N0cmluZygpKTtcbiAgICAgICAgICAgICAgICB0aGlzLm1haW4udmFsdWVzLmlubmVySFRNTCA9IHNpbmdsZVZhbHVlLm91dGVySFRNTDtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBtYXhWYWx1ZXNNZXNzYWdlID0gdGhpcy5tYWluLnZhbHVlcy5xdWVyeVNlbGVjdG9yKCcuJyArIHRoaXMuY2xhc3Nlcy5tYXgpO1xuICAgICAgICAgICAgICAgIGlmIChtYXhWYWx1ZXNNZXNzYWdlKSB7XG4gICAgICAgICAgICAgICAgICAgIG1heFZhbHVlc01lc3NhZ2UucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IHJlbW92ZU5vZGVzID0gW107XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGN1cnJlbnROb2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5vZGUgPSBjdXJyZW50Tm9kZXNbaV07XG4gICAgICAgICAgICAgICAgY29uc3QgaWQgPSBub2RlLmdldEF0dHJpYnV0ZSgnZGF0YS1pZCcpO1xuICAgICAgICAgICAgICAgIGlmIChpZCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmb3VuZCA9IHNlbGVjdGVkT3B0aW9ucy5maWx0ZXIoKG9wdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wdC5pZCA9PT0gaWQ7XG4gICAgICAgICAgICAgICAgICAgIH0sIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFmb3VuZC5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZU5vZGVzLnB1c2gobm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKGNvbnN0IG4gb2YgcmVtb3ZlTm9kZXMpIHtcbiAgICAgICAgICAgICAgICBuLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLnZhbHVlT3V0KTtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tYWluLnZhbHVlcy5yZW1vdmVDaGlsZChuKTtcbiAgICAgICAgICAgICAgICB9LCAxMDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY3VycmVudE5vZGVzID0gdGhpcy5tYWluLnZhbHVlcy5jaGlsZE5vZGVzO1xuICAgICAgICAgICAgZm9yIChsZXQgZCA9IDA7IGQgPCBzZWxlY3RlZE9wdGlvbnMubGVuZ3RoOyBkKyspIHtcbiAgICAgICAgICAgICAgICBsZXQgc2hvdWxkQWRkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGN1cnJlbnROb2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWRPcHRpb25zW2RdLmlkID09PSBTdHJpbmcoY3VycmVudE5vZGVzW2ldLmRhdGFzZXQuaWQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzaG91bGRBZGQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc2hvdWxkQWRkKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50Tm9kZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1haW4udmFsdWVzLmFwcGVuZENoaWxkKHRoaXMubXVsdGlwbGVWYWx1ZShzZWxlY3RlZE9wdGlvbnNbZF0pKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChkID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1haW4udmFsdWVzLmluc2VydEJlZm9yZSh0aGlzLm11bHRpcGxlVmFsdWUoc2VsZWN0ZWRPcHRpb25zW2RdKSwgY3VycmVudE5vZGVzW2RdKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnROb2Rlc1tkIC0gMV0uaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCdhZnRlcmVuZCcsIHRoaXMubXVsdGlwbGVWYWx1ZShzZWxlY3RlZE9wdGlvbnNbZF0pKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBtdWx0aXBsZVZhbHVlKG9wdGlvbikge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIHZhbHVlLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLnZhbHVlKTtcbiAgICAgICAgICAgIHZhbHVlLmRhdGFzZXQuaWQgPSBvcHRpb24uaWQ7XG4gICAgICAgICAgICBjb25zdCB0ZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICB0ZXh0LmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLnZhbHVlVGV4dCk7XG4gICAgICAgICAgICB0ZXh0LmlubmVySFRNTCA9IG9wdGlvbi50ZXh0O1xuICAgICAgICAgICAgdmFsdWUuYXBwZW5kQ2hpbGQodGV4dCk7XG4gICAgICAgICAgICBpZiAoIW9wdGlvbi5tYW5kYXRvcnkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkZWxldGVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgICAgICBkZWxldGVEaXYuY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMudmFsdWVEZWxldGUpO1xuICAgICAgICAgICAgICAgIGRlbGV0ZURpdi5vbmNsaWNrID0gKGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5kaXNhYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGxldCBzaG91bGREZWxldGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBiZWZvcmUgPSB0aGlzLnN0b3JlLmdldFNlbGVjdGVkT3B0aW9ucygpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBhZnRlciA9IGJlZm9yZS5maWx0ZXIoKG8pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvLnNlbGVjdGVkICYmIG8uaWQgIT09IG9wdGlvbi5pZDtcbiAgICAgICAgICAgICAgICAgICAgfSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLm1pblNlbGVjdGVkICYmIGFmdGVyLmxlbmd0aCA8IHRoaXMuc2V0dGluZ3MubWluU2VsZWN0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5jYWxsYmFja3MuYmVmb3JlQ2hhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzaG91bGREZWxldGUgPSB0aGlzLmNhbGxiYWNrcy5iZWZvcmVDaGFuZ2UoYWZ0ZXIsIGJlZm9yZSkgPT09IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHNob3VsZERlbGV0ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHNlbGVjdGVkVmFsdWVzID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IG8gb2YgYWZ0ZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobyBpbnN0YW5jZW9mIE9wdGdyb3VwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgYyBvZiBvLm9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkVmFsdWVzLnB1c2goYy52YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG8gaW5zdGFuY2VvZiBPcHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRWYWx1ZXMucHVzaChvLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrcy5zZXRTZWxlY3RlZChzZWxlY3RlZFZhbHVlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5jbG9zZU9uU2VsZWN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxsYmFja3MuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmNhbGxiYWNrcy5hZnRlckNoYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLmFmdGVyQ2hhbmdlKGFmdGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgY29uc3QgZGVsZXRlU3ZnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICdzdmcnKTtcbiAgICAgICAgICAgICAgICBkZWxldGVTdmcuc2V0QXR0cmlidXRlKCd2aWV3Qm94JywgJzAgMCAxMDAgMTAwJyk7XG4gICAgICAgICAgICAgICAgY29uc3QgZGVsZXRlUGF0aCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCAncGF0aCcpO1xuICAgICAgICAgICAgICAgIGRlbGV0ZVBhdGguc2V0QXR0cmlidXRlKCdkJywgdGhpcy5jbGFzc2VzLm9wdGlvbkRlbGV0ZSk7XG4gICAgICAgICAgICAgICAgZGVsZXRlU3ZnLmFwcGVuZENoaWxkKGRlbGV0ZVBhdGgpO1xuICAgICAgICAgICAgICAgIGRlbGV0ZURpdi5hcHBlbmRDaGlsZChkZWxldGVTdmcpO1xuICAgICAgICAgICAgICAgIHZhbHVlLmFwcGVuZENoaWxkKGRlbGV0ZURpdik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgY29udGVudERpdigpIHtcbiAgICAgICAgICAgIGNvbnN0IG1haW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIG1haW4uY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMuY29udGVudCk7XG4gICAgICAgICAgICBtYWluLmRhdGFzZXQuaWQgPSB0aGlzLnNldHRpbmdzLmlkO1xuICAgICAgICAgICAgaWYgKHRoaXMuc2V0dGluZ3Muc3R5bGUgIT09ICcnKSB7XG4gICAgICAgICAgICAgICAgbWFpbi5zdHlsZS5jc3NUZXh0ID0gdGhpcy5zZXR0aW5ncy5zdHlsZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmNvbnRlbnRQb3NpdGlvbiA9PT0gJ3JlbGF0aXZlJykge1xuICAgICAgICAgICAgICAgIG1haW4uY2xhc3NMaXN0LmFkZCgnc3MtJyArIHRoaXMuc2V0dGluZ3MuY29udGVudFBvc2l0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmNsYXNzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgYyBvZiB0aGlzLnNldHRpbmdzLmNsYXNzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjLnRyaW0oKSAhPT0gJycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1haW4uY2xhc3NMaXN0LmFkZChjLnRyaW0oKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBzZWFyY2ggPSB0aGlzLnNlYXJjaERpdigpO1xuICAgICAgICAgICAgbWFpbi5hcHBlbmRDaGlsZChzZWFyY2gubWFpbik7XG4gICAgICAgICAgICBjb25zdCBsaXN0ID0gdGhpcy5saXN0RGl2KCk7XG4gICAgICAgICAgICBtYWluLmFwcGVuZENoaWxkKGxpc3QpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBtYWluOiBtYWluLFxuICAgICAgICAgICAgICAgIHNlYXJjaDogc2VhcmNoLFxuICAgICAgICAgICAgICAgIGxpc3Q6IGxpc3QsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIG1vdmVDb250ZW50KCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuc2V0dGluZ3MuY29udGVudFBvc2l0aW9uID09PSAncmVsYXRpdmUnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5tb3ZlQ29udGVudEJlbG93KCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuc2V0dGluZ3Mub3BlblBvc2l0aW9uID09PSAnZG93bicpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1vdmVDb250ZW50QmVsb3coKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLnNldHRpbmdzLm9wZW5Qb3NpdGlvbiA9PT0gJ3VwJykge1xuICAgICAgICAgICAgICAgIHRoaXMubW92ZUNvbnRlbnRBYm92ZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLnB1dENvbnRlbnQoKSA9PT0gJ3VwJykge1xuICAgICAgICAgICAgICAgIHRoaXMubW92ZUNvbnRlbnRBYm92ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5tb3ZlQ29udGVudEJlbG93KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc2VhcmNoRGl2KCkge1xuICAgICAgICAgICAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICAgICAgY29uc3QgYWRkYWJsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgbWFpbi5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3Nlcy5zZWFyY2gpO1xuICAgICAgICAgICAgY29uc3Qgc2VhcmNoUmV0dXJuID0ge1xuICAgICAgICAgICAgICAgIG1haW4sXG4gICAgICAgICAgICAgICAgaW5wdXQsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKCF0aGlzLnNldHRpbmdzLnNob3dTZWFyY2gpIHtcbiAgICAgICAgICAgICAgICBtYWluLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLmhpZGUpO1xuICAgICAgICAgICAgICAgIGlucHV0LnJlYWRPbmx5ID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlucHV0LnR5cGUgPSAnc2VhcmNoJztcbiAgICAgICAgICAgIGlucHV0LnBsYWNlaG9sZGVyID0gdGhpcy5zZXR0aW5ncy5zZWFyY2hQbGFjZWhvbGRlcjtcbiAgICAgICAgICAgIGlucHV0LnRhYkluZGV4ID0gLTE7XG4gICAgICAgICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCB0aGlzLnNldHRpbmdzLnNlYXJjaFBsYWNlaG9sZGVyKTtcbiAgICAgICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgnYXV0b2NhcGl0YWxpemUnLCAnb2ZmJyk7XG4gICAgICAgICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoJ2F1dG9jb21wbGV0ZScsICdvZmYnKTtcbiAgICAgICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgnYXV0b2NvcnJlY3QnLCAnb2ZmJyk7XG4gICAgICAgICAgICBpbnB1dC5vbmlucHV0ID0gZGVib3VuY2UoKGUpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrcy5zZWFyY2goZS50YXJnZXQudmFsdWUpO1xuICAgICAgICAgICAgfSwgMTAwKTtcbiAgICAgICAgICAgIGlucHV0Lm9ua2V5ZG93biA9IChlKSA9PiB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChlLmtleSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlICdBcnJvd1VwJzpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnQXJyb3dEb3duJzpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLm9wZW4oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUua2V5ID09PSAnQXJyb3dEb3duJyA/IHRoaXMuaGlnaGxpZ2h0KCdkb3duJykgOiB0aGlzLmhpZ2hsaWdodCgndXAnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnVGFiJzpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnRXNjYXBlJzpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ0VudGVyJzpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmNhbGxiYWNrcy5hZGRhYmxlICYmIGUuY3RybEtleSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZGFibGUuY2xpY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhpZ2hsaWdodGVkID0gdGhpcy5jb250ZW50Lmxpc3QucXVlcnlTZWxlY3RvcignLicgKyB0aGlzLmNsYXNzZXMuaGlnaGxpZ2h0ZWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChoaWdobGlnaHRlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaWdobGlnaHRlZC5jbGljaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaW5wdXQub25mb2N1cyA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5pc09wZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrcy5vcGVuKCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgbWFpbi5hcHBlbmRDaGlsZChpbnB1dCk7XG4gICAgICAgICAgICBpZiAodGhpcy5jYWxsYmFja3MuYWRkYWJsZSkge1xuICAgICAgICAgICAgICAgIGFkZGFibGUuY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMuYWRkYWJsZSk7XG4gICAgICAgICAgICAgICAgY29uc3QgcGx1cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCAnc3ZnJyk7XG4gICAgICAgICAgICAgICAgcGx1cy5zZXRBdHRyaWJ1dGUoJ3ZpZXdCb3gnLCAnMCAwIDEwMCAxMDAnKTtcbiAgICAgICAgICAgICAgICBjb25zdCBwbHVzUGF0aCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCAncGF0aCcpO1xuICAgICAgICAgICAgICAgIHBsdXNQYXRoLnNldEF0dHJpYnV0ZSgnZCcsIHRoaXMuY2xhc3Nlcy5hZGRhYmxlUGF0aCk7XG4gICAgICAgICAgICAgICAgcGx1cy5hcHBlbmRDaGlsZChwbHVzUGF0aCk7XG4gICAgICAgICAgICAgICAgYWRkYWJsZS5hcHBlbmRDaGlsZChwbHVzKTtcbiAgICAgICAgICAgICAgICBhZGRhYmxlLm9uY2xpY2sgPSAoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5jYWxsYmFja3MuYWRkYWJsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGlucHV0VmFsdWUgPSB0aGlzLmNvbnRlbnQuc2VhcmNoLmlucHV0LnZhbHVlLnRyaW0oKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0VmFsdWUgPT09ICcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnQuc2VhcmNoLmlucHV0LmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcnVuRmluaXNoID0gKG9vKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbmV3T3B0aW9uID0gbmV3IE9wdGlvbihvbyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrcy5hZGRPcHRpb24obmV3T3B0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmlzTXVsdGlwbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWVzID0gdGhpcy5zdG9yZS5nZXRTZWxlY3RlZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlcy5wdXNoKG5ld09wdGlvbi52YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxsYmFja3Muc2V0U2VsZWN0ZWQodmFsdWVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLnNldFNlbGVjdGVkKFtuZXdPcHRpb24udmFsdWVdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLnNlYXJjaCgnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5jbG9zZU9uU2VsZWN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgMTAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYWRkYWJsZVZhbHVlID0gdGhpcy5jYWxsYmFja3MuYWRkYWJsZShpbnB1dFZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFkZGFibGVWYWx1ZSBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZGFibGVWYWx1ZS50aGVuKCh2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJ1bkZpbmlzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBydW5GaW5pc2godmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBhZGRhYmxlVmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBydW5GaW5pc2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IGFkZGFibGVWYWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogYWRkYWJsZVZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBydW5GaW5pc2goYWRkYWJsZVZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBtYWluLmFwcGVuZENoaWxkKGFkZGFibGUpO1xuICAgICAgICAgICAgICAgIHNlYXJjaFJldHVybi5hZGRhYmxlID0ge1xuICAgICAgICAgICAgICAgICAgICBtYWluOiBhZGRhYmxlLFxuICAgICAgICAgICAgICAgICAgICBzdmc6IHBsdXMsXG4gICAgICAgICAgICAgICAgICAgIHBhdGg6IHBsdXNQYXRoLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc2VhcmNoUmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHNlYXJjaEZvY3VzKHRyaWdnZXIpIHtcbiAgICAgICAgICAgIGlmICghdHJpZ2dlcikge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0dGluZ3MudHJpZ2dlckZvY3VzID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmNvbnRlbnQuc2VhcmNoLmlucHV0LmZvY3VzKCk7XG4gICAgICAgICAgICB0aGlzLnNldHRpbmdzLnRyaWdnZXJGb2N1cyA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZ2V0T3B0aW9ucyhub3RQbGFjZWhvbGRlciA9IGZhbHNlLCBub3REaXNhYmxlZCA9IGZhbHNlLCBub3RIaWRkZW4gPSBmYWxzZSkge1xuICAgICAgICAgICAgbGV0IHF1ZXJ5ID0gJy4nICsgdGhpcy5jbGFzc2VzLm9wdGlvbjtcbiAgICAgICAgICAgIGlmIChub3RQbGFjZWhvbGRlcikge1xuICAgICAgICAgICAgICAgIHF1ZXJ5ICs9ICc6bm90KC4nICsgdGhpcy5jbGFzc2VzLnBsYWNlaG9sZGVyICsgJyknO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG5vdERpc2FibGVkKSB7XG4gICAgICAgICAgICAgICAgcXVlcnkgKz0gJzpub3QoLicgKyB0aGlzLmNsYXNzZXMuZGlzYWJsZWQgKyAnKSc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobm90SGlkZGVuKSB7XG4gICAgICAgICAgICAgICAgcXVlcnkgKz0gJzpub3QoLicgKyB0aGlzLmNsYXNzZXMuaGlkZSArICcpJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuY29udGVudC5saXN0LnF1ZXJ5U2VsZWN0b3JBbGwocXVlcnkpKTtcbiAgICAgICAgfVxuICAgICAgICBoaWdobGlnaHQoZGlyKSB7XG4gICAgICAgICAgICBjb25zdCBvcHRpb25zID0gdGhpcy5nZXRPcHRpb25zKHRydWUsIHRydWUsIHRydWUpO1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG9wdGlvbnMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFvcHRpb25zWzBdLmNsYXNzTGlzdC5jb250YWlucyh0aGlzLmNsYXNzZXMuaGlnaGxpZ2h0ZWQpKSB7XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnNbMF0uY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMuaGlnaGxpZ2h0ZWQpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBvcHRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnNbaV0uY2xhc3NMaXN0LmNvbnRhaW5zKHRoaXMuY2xhc3Nlcy5oaWdobGlnaHRlZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJldk9wdGlvbiA9IG9wdGlvbnNbaV07XG4gICAgICAgICAgICAgICAgICAgIHByZXZPcHRpb24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmNsYXNzZXMuaGlnaGxpZ2h0ZWQpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBwcmV2UGFyZW50ID0gcHJldk9wdGlvbi5wYXJlbnRFbGVtZW50O1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJldlBhcmVudCAmJiBwcmV2UGFyZW50LmNsYXNzTGlzdC5jb250YWlucyh0aGlzLmNsYXNzZXMub3BlbikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG9wdGdyb3VwTGFiZWwgPSBwcmV2UGFyZW50LnF1ZXJ5U2VsZWN0b3IoJy4nICsgdGhpcy5jbGFzc2VzLm9wdGdyb3VwTGFiZWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wdGdyb3VwTGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRncm91cExhYmVsLmNsaWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbGV0IHNlbGVjdE9wdGlvbiA9IG9wdGlvbnNbZGlyID09PSAnZG93bicgPyAoaSArIDEgPCBvcHRpb25zLmxlbmd0aCA/IGkgKyAxIDogMCkgOiBpIC0gMSA+PSAwID8gaSAtIDEgOiBvcHRpb25zLmxlbmd0aCAtIDFdO1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RPcHRpb24uY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMuaGlnaGxpZ2h0ZWQpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVuc3VyZUVsZW1lbnRJblZpZXcodGhpcy5jb250ZW50Lmxpc3QsIHNlbGVjdE9wdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdFBhcmVudCA9IHNlbGVjdE9wdGlvbi5wYXJlbnRFbGVtZW50O1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZWN0UGFyZW50ICYmIHNlbGVjdFBhcmVudC5jbGFzc0xpc3QuY29udGFpbnModGhpcy5jbGFzc2VzLmNsb3NlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3B0Z3JvdXBMYWJlbCA9IHNlbGVjdFBhcmVudC5xdWVyeVNlbGVjdG9yKCcuJyArIHRoaXMuY2xhc3Nlcy5vcHRncm91cExhYmVsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcHRncm91cExhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0Z3JvdXBMYWJlbC5jbGljaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcHRpb25zW2RpciA9PT0gJ2Rvd24nID8gMCA6IG9wdGlvbnMubGVuZ3RoIC0gMV0uY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMuaGlnaGxpZ2h0ZWQpO1xuICAgICAgICAgICAgdGhpcy5lbnN1cmVFbGVtZW50SW5WaWV3KHRoaXMuY29udGVudC5saXN0LCBvcHRpb25zW2RpciA9PT0gJ2Rvd24nID8gMCA6IG9wdGlvbnMubGVuZ3RoIC0gMV0pO1xuICAgICAgICB9XG4gICAgICAgIGxpc3REaXYoKSB7XG4gICAgICAgICAgICBjb25zdCBvcHRpb25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICBvcHRpb25zLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLmxpc3QpO1xuICAgICAgICAgICAgb3B0aW9ucy5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCAnbGlzdGJveCcpO1xuICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnM7XG4gICAgICAgIH1cbiAgICAgICAgcmVuZGVyRXJyb3IoZXJyb3IpIHtcbiAgICAgICAgICAgIHRoaXMuY29udGVudC5saXN0LmlubmVySFRNTCA9ICcnO1xuICAgICAgICAgICAgY29uc3QgZXJyb3JEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIGVycm9yRGl2LmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLmVycm9yKTtcbiAgICAgICAgICAgIGVycm9yRGl2LnRleHRDb250ZW50ID0gZXJyb3I7XG4gICAgICAgICAgICB0aGlzLmNvbnRlbnQubGlzdC5hcHBlbmRDaGlsZChlcnJvckRpdik7XG4gICAgICAgIH1cbiAgICAgICAgcmVuZGVyU2VhcmNoaW5nKCkge1xuICAgICAgICAgICAgdGhpcy5jb250ZW50Lmxpc3QuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgICAgICBjb25zdCBzZWFyY2hpbmdEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIHNlYXJjaGluZ0Rpdi5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3Nlcy5zZWFyY2hpbmcpO1xuICAgICAgICAgICAgc2VhcmNoaW5nRGl2LnRleHRDb250ZW50ID0gdGhpcy5zZXR0aW5ncy5zZWFyY2hpbmdUZXh0O1xuICAgICAgICAgICAgdGhpcy5jb250ZW50Lmxpc3QuYXBwZW5kQ2hpbGQoc2VhcmNoaW5nRGl2KTtcbiAgICAgICAgfVxuICAgICAgICByZW5kZXJPcHRpb25zKGRhdGEpIHtcbiAgICAgICAgICAgIHRoaXMuY29udGVudC5saXN0LmlubmVySFRNTCA9ICcnO1xuICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgbm9SZXN1bHRzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgbm9SZXN1bHRzLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLnNlYXJjaCk7XG4gICAgICAgICAgICAgICAgbm9SZXN1bHRzLmlubmVySFRNTCA9IHRoaXMuc2V0dGluZ3Muc2VhcmNoVGV4dDtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnQubGlzdC5hcHBlbmRDaGlsZChub1Jlc3VsdHMpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoY29uc3QgZCBvZiBkYXRhKSB7XG4gICAgICAgICAgICAgICAgaWYgKGQgaW5zdGFuY2VvZiBPcHRncm91cCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBvcHRncm91cEVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgICAgIG9wdGdyb3VwRWwuY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMub3B0Z3JvdXApO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBvcHRncm91cExhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgICAgIG9wdGdyb3VwTGFiZWwuY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMub3B0Z3JvdXBMYWJlbCk7XG4gICAgICAgICAgICAgICAgICAgIG9wdGdyb3VwRWwuYXBwZW5kQ2hpbGQob3B0Z3JvdXBMYWJlbCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG9wdGdyb3VwTGFiZWxUZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgICAgIG9wdGdyb3VwTGFiZWxUZXh0LmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLm9wdGdyb3VwTGFiZWxUZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgb3B0Z3JvdXBMYWJlbFRleHQudGV4dENvbnRlbnQgPSBkLmxhYmVsO1xuICAgICAgICAgICAgICAgICAgICBvcHRncm91cExhYmVsLmFwcGVuZENoaWxkKG9wdGdyb3VwTGFiZWxUZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3B0Z3JvdXBBY3Rpb25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgICAgIG9wdGdyb3VwQWN0aW9ucy5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3Nlcy5vcHRncm91cEFjdGlvbnMpO1xuICAgICAgICAgICAgICAgICAgICBvcHRncm91cExhYmVsLmFwcGVuZENoaWxkKG9wdGdyb3VwQWN0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmlzTXVsdGlwbGUgJiYgZC5zZWxlY3RBbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdEFsbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0QWxsLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLm9wdGdyb3VwU2VsZWN0QWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBhbGxTZWxlY3RlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IG8gb2YgZC5vcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFvLnNlbGVjdGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbFNlbGVjdGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhbGxTZWxlY3RlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdEFsbC5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3Nlcy5zZWxlY3RlZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RBbGxUZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0QWxsVGV4dC50ZXh0Q29udGVudCA9ICdTZWxlY3QgQWxsJztcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdEFsbC5hcHBlbmRDaGlsZChzZWxlY3RBbGxUZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdEFsbFN2ZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCAnc3ZnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RBbGxTdmcuc2V0QXR0cmlidXRlKCd2aWV3Qm94JywgJzAgMCAxMDAgMTAwJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RBbGwuYXBwZW5kQ2hpbGQoc2VsZWN0QWxsU3ZnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdEFsbEJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCAncGF0aCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0QWxsQm94LnNldEF0dHJpYnV0ZSgnZCcsIHRoaXMuY2xhc3Nlcy5vcHRncm91cFNlbGVjdEFsbEJveCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RBbGxTdmcuYXBwZW5kQ2hpbGQoc2VsZWN0QWxsQm94KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdEFsbENoZWNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICdwYXRoJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RBbGxDaGVjay5zZXRBdHRyaWJ1dGUoJ2QnLCB0aGlzLmNsYXNzZXMub3B0Z3JvdXBTZWxlY3RBbGxDaGVjayk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RBbGxTdmcuYXBwZW5kQ2hpbGQoc2VsZWN0QWxsQ2hlY2spO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0QWxsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50U2VsZWN0ZWQgPSB0aGlzLnN0b3JlLmdldFNlbGVjdGVkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFsbFNlbGVjdGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1NlbGVjdGVkID0gY3VycmVudFNlbGVjdGVkLmZpbHRlcigocykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBvIG9mIGQub3B0aW9ucykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzID09PSBvLnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLnNldFNlbGVjdGVkKG5ld1NlbGVjdGVkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3U2VsZWN0ZWQgPSBjdXJyZW50U2VsZWN0ZWQuY29uY2F0KGQub3B0aW9ucy5tYXAoKG8pID0+IG8udmFsdWUpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxsYmFja3Muc2V0U2VsZWN0ZWQobmV3U2VsZWN0ZWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgb3B0Z3JvdXBBY3Rpb25zLmFwcGVuZENoaWxkKHNlbGVjdEFsbCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGQuY2xvc2FibGUgIT09ICdvZmYnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBvcHRncm91cENsb3NhYmxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRncm91cENsb3NhYmxlLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLm9wdGdyb3VwQ2xvc2FibGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3B0Z3JvdXBDbG9zYWJsZVN2ZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCAnc3ZnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRncm91cENsb3NhYmxlU3ZnLnNldEF0dHJpYnV0ZSgndmlld0JveCcsICcwIDAgMTAwIDEwMCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgb3B0Z3JvdXBDbG9zYWJsZVN2Zy5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3Nlcy5hcnJvdyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRncm91cENsb3NhYmxlLmFwcGVuZENoaWxkKG9wdGdyb3VwQ2xvc2FibGVTdmcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3B0Z3JvdXBDbG9zYWJsZUFycm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICdwYXRoJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRncm91cENsb3NhYmxlU3ZnLmFwcGVuZENoaWxkKG9wdGdyb3VwQ2xvc2FibGVBcnJvdyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZC5vcHRpb25zLnNvbWUoKG8pID0+IG8uc2VsZWN0ZWQpIHx8IHRoaXMuY29udGVudC5zZWFyY2guaW5wdXQudmFsdWUudHJpbSgpICE9PSAnJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGdyb3VwQ2xvc2FibGUuY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMub3Blbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0Z3JvdXBDbG9zYWJsZUFycm93LnNldEF0dHJpYnV0ZSgnZCcsIHRoaXMuY2xhc3Nlcy5hcnJvd09wZW4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoZC5jbG9zYWJsZSA9PT0gJ29wZW4nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0Z3JvdXBFbC5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3Nlcy5vcGVuKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRncm91cENsb3NhYmxlQXJyb3cuc2V0QXR0cmlidXRlKCdkJywgdGhpcy5jbGFzc2VzLmFycm93T3Blbik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChkLmNsb3NhYmxlID09PSAnY2xvc2UnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0Z3JvdXBFbC5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3Nlcy5jbG9zZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0Z3JvdXBDbG9zYWJsZUFycm93LnNldEF0dHJpYnV0ZSgnZCcsIHRoaXMuY2xhc3Nlcy5hcnJvd0Nsb3NlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGdyb3VwTGFiZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcHRncm91cEVsLmNsYXNzTGlzdC5jb250YWlucyh0aGlzLmNsYXNzZXMuY2xvc2UpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGdyb3VwRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmNsYXNzZXMuY2xvc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRncm91cEVsLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLm9wZW4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRncm91cENsb3NhYmxlQXJyb3cuc2V0QXR0cmlidXRlKCdkJywgdGhpcy5jbGFzc2VzLmFycm93T3Blbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRncm91cEVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5jbGFzc2VzLm9wZW4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRncm91cEVsLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLmNsb3NlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0Z3JvdXBDbG9zYWJsZUFycm93LnNldEF0dHJpYnV0ZSgnZCcsIHRoaXMuY2xhc3Nlcy5hcnJvd0Nsb3NlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGdyb3VwQWN0aW9ucy5hcHBlbmRDaGlsZChvcHRncm91cENsb3NhYmxlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBvcHRncm91cEVsLmFwcGVuZENoaWxkKG9wdGdyb3VwTGFiZWwpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IG8gb2YgZC5vcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRncm91cEVsLmFwcGVuZENoaWxkKHRoaXMub3B0aW9uKG8pKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnQubGlzdC5hcHBlbmRDaGlsZChvcHRncm91cEVsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGQgaW5zdGFuY2VvZiBPcHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250ZW50Lmxpc3QuYXBwZW5kQ2hpbGQodGhpcy5vcHRpb24oZCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBvcHRpb24ob3B0aW9uKSB7XG4gICAgICAgICAgICBpZiAob3B0aW9uLnBsYWNlaG9sZGVyKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGxhY2Vob2xkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlci5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3Nlcy5vcHRpb24pO1xuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLmhpZGUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBwbGFjZWhvbGRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG9wdGlvbkVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICBvcHRpb25FbC5kYXRhc2V0LmlkID0gb3B0aW9uLmlkO1xuICAgICAgICAgICAgb3B0aW9uRWwuY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMub3B0aW9uKTtcbiAgICAgICAgICAgIG9wdGlvbkVsLnNldEF0dHJpYnV0ZSgncm9sZScsICdvcHRpb24nKTtcbiAgICAgICAgICAgIGlmIChvcHRpb24uY2xhc3MpIHtcbiAgICAgICAgICAgICAgICBvcHRpb24uY2xhc3Muc3BsaXQoJyAnKS5mb3JFYWNoKChkYXRhQ2xhc3MpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uRWwuY2xhc3NMaXN0LmFkZChkYXRhQ2xhc3MpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG9wdGlvbi5zdHlsZSkge1xuICAgICAgICAgICAgICAgIG9wdGlvbkVsLnN0eWxlLmNzc1RleHQgPSBvcHRpb24uc3R5bGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5zZWFyY2hIaWdobGlnaHQgJiYgdGhpcy5jb250ZW50LnNlYXJjaC5pbnB1dC52YWx1ZS50cmltKCkgIT09ICcnKSB7XG4gICAgICAgICAgICAgICAgb3B0aW9uRWwuaW5uZXJIVE1MID0gdGhpcy5oaWdobGlnaHRUZXh0KG9wdGlvbi5odG1sICE9PSAnJyA/IG9wdGlvbi5odG1sIDogb3B0aW9uLnRleHQsIHRoaXMuY29udGVudC5zZWFyY2guaW5wdXQudmFsdWUsIHRoaXMuY2xhc3Nlcy5zZWFyY2hIaWdobGlnaHRlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChvcHRpb24uaHRtbCAhPT0gJycpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25FbC5pbm5lckhUTUwgPSBvcHRpb24uaHRtbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG9wdGlvbkVsLnRleHRDb250ZW50ID0gb3B0aW9uLnRleHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5zaG93T3B0aW9uVG9vbHRpcHMgJiYgb3B0aW9uRWwudGV4dENvbnRlbnQpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25FbC5zZXRBdHRyaWJ1dGUoJ3RpdGxlJywgb3B0aW9uRWwudGV4dENvbnRlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG9wdGlvbi5kaXNhYmxlZCkge1xuICAgICAgICAgICAgICAgIG9wdGlvbkVsLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLmRpc2FibGVkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChvcHRpb24uc2VsZWN0ZWQgJiYgdGhpcy5zZXR0aW5ncy5oaWRlU2VsZWN0ZWQpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25FbC5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3Nlcy5oaWRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChvcHRpb24uc2VsZWN0ZWQpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25FbC5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3Nlcy5zZWxlY3RlZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBvcHRpb25FbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuY2xhc3Nlcy5zZWxlY3RlZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcHRpb25FbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWRPcHRpb25zID0gdGhpcy5zdG9yZS5nZXRTZWxlY3RlZCgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBlLmN1cnJlbnRUYXJnZXQ7XG4gICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudElEID0gU3RyaW5nKGVsZW1lbnQuZGF0YXNldC5pZCk7XG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbi5kaXNhYmxlZCB8fCAob3B0aW9uLnNlbGVjdGVkICYmICF0aGlzLnNldHRpbmdzLmFsbG93RGVzZWxlY3QpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCh0aGlzLnNldHRpbmdzLmlzTXVsdGlwbGUgJiYgdGhpcy5zZXR0aW5ncy5tYXhTZWxlY3RlZCA8PSBzZWxlY3RlZE9wdGlvbnMubGVuZ3RoICYmICFvcHRpb24uc2VsZWN0ZWQpIHx8XG4gICAgICAgICAgICAgICAgICAgICh0aGlzLnNldHRpbmdzLmlzTXVsdGlwbGUgJiYgdGhpcy5zZXR0aW5ncy5taW5TZWxlY3RlZCA+PSBzZWxlY3RlZE9wdGlvbnMubGVuZ3RoICYmIG9wdGlvbi5zZWxlY3RlZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZXQgc2hvdWxkVXBkYXRlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgY29uc3QgYmVmb3JlID0gdGhpcy5zdG9yZS5nZXRTZWxlY3RlZE9wdGlvbnMoKTtcbiAgICAgICAgICAgICAgICBsZXQgYWZ0ZXIgPSBbXTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5pc011bHRpcGxlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcHRpb24uc2VsZWN0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFmdGVyID0gYmVmb3JlLmZpbHRlcigobykgPT4gby5pZCAhPT0gZWxlbWVudElEKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFmdGVyID0gYmVmb3JlLmNvbmNhdChvcHRpb24pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5zZXR0aW5ncy5pc011bHRpcGxlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcHRpb24uc2VsZWN0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFmdGVyID0gW107XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhZnRlciA9IFtvcHRpb25dO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5jYWxsYmFja3MuYmVmb3JlQ2hhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgIHNob3VsZFVwZGF0ZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNhbGxiYWNrcy5iZWZvcmVDaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuY2FsbGJhY2tzLmJlZm9yZUNoYW5nZShhZnRlciwgYmVmb3JlKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3VsZFVwZGF0ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2hvdWxkVXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc2hvdWxkVXBkYXRlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5zdG9yZS5nZXRPcHRpb25CeUlEKGVsZW1lbnRJRCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLmFkZE9wdGlvbihvcHRpb24pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLnNldFNlbGVjdGVkKGFmdGVyLm1hcCgobykgPT4gby52YWx1ZSkpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5jbG9zZU9uU2VsZWN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrcy5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmNhbGxiYWNrcy5hZnRlckNoYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxsYmFja3MuYWZ0ZXJDaGFuZ2UoYWZ0ZXIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9uRWw7XG4gICAgICAgIH1cbiAgICAgICAgZGVzdHJveSgpIHtcbiAgICAgICAgICAgIHRoaXMubWFpbi5tYWluLnJlbW92ZSgpO1xuICAgICAgICAgICAgdGhpcy5jb250ZW50Lm1haW4ucmVtb3ZlKCk7XG4gICAgICAgIH1cbiAgICAgICAgaGlnaGxpZ2h0VGV4dChzdHIsIHNlYXJjaCwgY2xhc3NOYW1lKSB7XG4gICAgICAgICAgICBsZXQgY29tcGxldGVkU3RyaW5nID0gc3RyO1xuICAgICAgICAgICAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKCcoJyArIHNlYXJjaC50cmltKCkgKyAnKSg/IVtePF0qPltePD5dKjwvKScsICdpJyk7XG4gICAgICAgICAgICBpZiAoIXN0ci5tYXRjaChyZWdleCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgbWF0Y2hTdGFydFBvc2l0aW9uID0gc3RyLm1hdGNoKHJlZ2V4KS5pbmRleDtcbiAgICAgICAgICAgIGNvbnN0IG1hdGNoRW5kUG9zaXRpb24gPSBtYXRjaFN0YXJ0UG9zaXRpb24gKyBzdHIubWF0Y2gocmVnZXgpWzBdLnRvU3RyaW5nKCkubGVuZ3RoO1xuICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxUZXh0Rm91bmRCeVJlZ2V4ID0gc3RyLnN1YnN0cmluZyhtYXRjaFN0YXJ0UG9zaXRpb24sIG1hdGNoRW5kUG9zaXRpb24pO1xuICAgICAgICAgICAgY29tcGxldGVkU3RyaW5nID0gY29tcGxldGVkU3RyaW5nLnJlcGxhY2UocmVnZXgsIGA8bWFyayBjbGFzcz1cIiR7Y2xhc3NOYW1lfVwiPiR7b3JpZ2luYWxUZXh0Rm91bmRCeVJlZ2V4fTwvbWFyaz5gKTtcbiAgICAgICAgICAgIHJldHVybiBjb21wbGV0ZWRTdHJpbmc7XG4gICAgICAgIH1cbiAgICAgICAgbW92ZUNvbnRlbnRBYm92ZSgpIHtcbiAgICAgICAgICAgIGNvbnN0IG1haW5IZWlnaHQgPSB0aGlzLm1haW4ubWFpbi5vZmZzZXRIZWlnaHQ7XG4gICAgICAgICAgICBjb25zdCBjb250ZW50SGVpZ2h0ID0gdGhpcy5jb250ZW50Lm1haW4ub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgICAgdGhpcy5tYWluLm1haW4uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmNsYXNzZXMub3BlbkJlbG93KTtcbiAgICAgICAgICAgIHRoaXMubWFpbi5tYWluLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLm9wZW5BYm92ZSk7XG4gICAgICAgICAgICB0aGlzLmNvbnRlbnQubWFpbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuY2xhc3Nlcy5vcGVuQmVsb3cpO1xuICAgICAgICAgICAgdGhpcy5jb250ZW50Lm1haW4uY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMub3BlbkFib3ZlKTtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lclJlY3QgPSB0aGlzLm1haW4ubWFpbi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgIHRoaXMuY29udGVudC5tYWluLnN0eWxlLm1hcmdpbiA9ICctJyArIChtYWluSGVpZ2h0ICsgY29udGVudEhlaWdodCAtIDEpICsgJ3B4IDBweCAwcHggMHB4JztcbiAgICAgICAgICAgIHRoaXMuY29udGVudC5tYWluLnN0eWxlLnRvcCA9IGNvbnRhaW5lclJlY3QudG9wICsgY29udGFpbmVyUmVjdC5oZWlnaHQgKyB3aW5kb3cuc2Nyb2xsWSArICdweCc7XG4gICAgICAgICAgICB0aGlzLmNvbnRlbnQubWFpbi5zdHlsZS5sZWZ0ID0gY29udGFpbmVyUmVjdC5sZWZ0ICsgd2luZG93LnNjcm9sbFggKyAncHgnO1xuICAgICAgICAgICAgdGhpcy5jb250ZW50Lm1haW4uc3R5bGUud2lkdGggPSBjb250YWluZXJSZWN0LndpZHRoICsgJ3B4JztcbiAgICAgICAgfVxuICAgICAgICBtb3ZlQ29udGVudEJlbG93KCkge1xuICAgICAgICAgICAgdGhpcy5tYWluLm1haW4uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmNsYXNzZXMub3BlbkFib3ZlKTtcbiAgICAgICAgICAgIHRoaXMubWFpbi5tYWluLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLm9wZW5CZWxvdyk7XG4gICAgICAgICAgICB0aGlzLmNvbnRlbnQubWFpbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuY2xhc3Nlcy5vcGVuQWJvdmUpO1xuICAgICAgICAgICAgdGhpcy5jb250ZW50Lm1haW4uY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXMub3BlbkJlbG93KTtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lclJlY3QgPSB0aGlzLm1haW4ubWFpbi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgIHRoaXMuY29udGVudC5tYWluLnN0eWxlLm1hcmdpbiA9ICctMXB4IDBweCAwcHggMHB4JztcbiAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmNvbnRlbnRQb3NpdGlvbiAhPT0gJ3JlbGF0aXZlJykge1xuICAgICAgICAgICAgICAgIHRoaXMuY29udGVudC5tYWluLnN0eWxlLnRvcCA9IGNvbnRhaW5lclJlY3QudG9wICsgY29udGFpbmVyUmVjdC5oZWlnaHQgKyB3aW5kb3cuc2Nyb2xsWSArICdweCc7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZW50Lm1haW4uc3R5bGUubGVmdCA9IGNvbnRhaW5lclJlY3QubGVmdCArIHdpbmRvdy5zY3JvbGxYICsgJ3B4JztcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnQubWFpbi5zdHlsZS53aWR0aCA9IGNvbnRhaW5lclJlY3Qud2lkdGggKyAncHgnO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVuc3VyZUVsZW1lbnRJblZpZXcoY29udGFpbmVyLCBlbGVtZW50KSB7XG4gICAgICAgICAgICBjb25zdCBjVG9wID0gY29udGFpbmVyLnNjcm9sbFRvcCArIGNvbnRhaW5lci5vZmZzZXRUb3A7XG4gICAgICAgICAgICBjb25zdCBjQm90dG9tID0gY1RvcCArIGNvbnRhaW5lci5jbGllbnRIZWlnaHQ7XG4gICAgICAgICAgICBjb25zdCBlVG9wID0gZWxlbWVudC5vZmZzZXRUb3A7XG4gICAgICAgICAgICBjb25zdCBlQm90dG9tID0gZVRvcCArIGVsZW1lbnQuY2xpZW50SGVpZ2h0O1xuICAgICAgICAgICAgaWYgKGVUb3AgPCBjVG9wKSB7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyLnNjcm9sbFRvcCAtPSBjVG9wIC0gZVRvcDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGVCb3R0b20gPiBjQm90dG9tKSB7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyLnNjcm9sbFRvcCArPSBlQm90dG9tIC0gY0JvdHRvbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBwdXRDb250ZW50KCkge1xuICAgICAgICAgICAgY29uc3QgbWFpbkhlaWdodCA9IHRoaXMubWFpbi5tYWluLm9mZnNldEhlaWdodDtcbiAgICAgICAgICAgIGNvbnN0IG1haW5SZWN0ID0gdGhpcy5tYWluLm1haW4uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICBjb25zdCBjb250ZW50SGVpZ2h0ID0gdGhpcy5jb250ZW50Lm1haW4ub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgICAgY29uc3Qgc3BhY2VCZWxvdyA9IHdpbmRvdy5pbm5lckhlaWdodCAtIChtYWluUmVjdC50b3AgKyBtYWluSGVpZ2h0KTtcbiAgICAgICAgICAgIGlmIChzcGFjZUJlbG93IDw9IGNvbnRlbnRIZWlnaHQpIHtcbiAgICAgICAgICAgICAgICBpZiAobWFpblJlY3QudG9wID4gY29udGVudEhlaWdodCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ3VwJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAnZG93bic7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuICdkb3duJztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNsYXNzIFNlbGVjdCB7XG4gICAgICAgIGNvbnN0cnVjdG9yKHNlbGVjdCkge1xuICAgICAgICAgICAgdGhpcy5saXN0ZW4gPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMub2JzZXJ2ZXIgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3QgPSBzZWxlY3Q7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLnZhbHVlQ2hhbmdlLmJpbmQodGhpcyksIHtcbiAgICAgICAgICAgICAgICBwYXNzaXZlOiB0cnVlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLm9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIodGhpcy5vYnNlcnZlQ2FsbC5iaW5kKHRoaXMpKTtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlTGlzdGVuKHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGVuYWJsZSgpIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0LmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgZGlzYWJsZSgpIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0LmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBoaWRlVUkoKSB7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdC50YWJJbmRleCA9IC0xO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3Quc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0LnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCAndHJ1ZScpO1xuICAgICAgICB9XG4gICAgICAgIHNob3dVSSgpIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0LnJlbW92ZUF0dHJpYnV0ZSgndGFiaW5kZXgnKTtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0LnN0eWxlLmRpc3BsYXkgPSAnJztcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0LnJlbW92ZUF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nKTtcbiAgICAgICAgfVxuICAgICAgICBjaGFuZ2VMaXN0ZW4obGlzdGVuKSB7XG4gICAgICAgICAgICB0aGlzLmxpc3RlbiA9IGxpc3RlbjtcbiAgICAgICAgICAgIGlmIChsaXN0ZW4pIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vYnNlcnZlcikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9ic2VydmVyLm9ic2VydmUodGhpcy5zZWxlY3QsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1YnRyZWU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZExpc3Q6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWxpc3Rlbikge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9ic2VydmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMub2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YWx1ZUNoYW5nZShldikge1xuICAgICAgICAgICAgaWYgKHRoaXMubGlzdGVuICYmIHRoaXMub25WYWx1ZUNoYW5nZSkge1xuICAgICAgICAgICAgICAgIHRoaXMub25WYWx1ZUNoYW5nZSh0aGlzLmdldFNlbGVjdGVkVmFsdWVzKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgb2JzZXJ2ZUNhbGwobXV0YXRpb25zKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMubGlzdGVuKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IGRpc2FibGVkQ2hhbmdlZCA9IGZhbHNlO1xuICAgICAgICAgICAgbGV0IG9wdGdyb3VwT3B0aW9uQ2hhbmdlZCA9IGZhbHNlO1xuICAgICAgICAgICAgZm9yIChjb25zdCBtIG9mIG11dGF0aW9ucykge1xuICAgICAgICAgICAgICAgIGlmIChtLnRhcmdldCA9PT0gdGhpcy5zZWxlY3QpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG0uYXR0cmlidXRlTmFtZSA9PT0gJ2Rpc2FibGVkJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWRDaGFuZ2VkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobS50YXJnZXQubm9kZU5hbWUgPT09ICdPUFRHUk9VUCcgfHwgbS50YXJnZXQubm9kZU5hbWUgPT09ICdPUFRJT04nKSB7XG4gICAgICAgICAgICAgICAgICAgIG9wdGdyb3VwT3B0aW9uQ2hhbmdlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGRpc2FibGVkQ2hhbmdlZCAmJiB0aGlzLm9uRGlzYWJsZWRDaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUxpc3RlbihmYWxzZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5vbkRpc2FibGVkQ2hhbmdlKHRoaXMuc2VsZWN0LmRpc2FibGVkKTtcbiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUxpc3Rlbih0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChvcHRncm91cE9wdGlvbkNoYW5nZWQgJiYgdGhpcy5vbk9wdGlvbnNDaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUxpc3RlbihmYWxzZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5vbk9wdGlvbnNDaGFuZ2UodGhpcy5nZXREYXRhKCkpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlTGlzdGVuKHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGdldERhdGEoKSB7XG4gICAgICAgICAgICBsZXQgZGF0YSA9IFtdO1xuICAgICAgICAgICAgY29uc3Qgbm9kZXMgPSB0aGlzLnNlbGVjdC5jaGlsZE5vZGVzO1xuICAgICAgICAgICAgZm9yIChjb25zdCBuIG9mIG5vZGVzKSB7XG4gICAgICAgICAgICAgICAgaWYgKG4ubm9kZU5hbWUgPT09ICdPUFRHUk9VUCcpIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5wdXNoKHRoaXMuZ2V0RGF0YUZyb21PcHRncm91cChuKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChuLm5vZGVOYW1lID09PSAnT1BUSU9OJykge1xuICAgICAgICAgICAgICAgICAgICBkYXRhLnB1c2godGhpcy5nZXREYXRhRnJvbU9wdGlvbihuKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgIH1cbiAgICAgICAgZ2V0RGF0YUZyb21PcHRncm91cChvcHRncm91cCkge1xuICAgICAgICAgICAgbGV0IGRhdGEgPSB7XG4gICAgICAgICAgICAgICAgaWQ6IG9wdGdyb3VwLmlkLFxuICAgICAgICAgICAgICAgIGxhYmVsOiBvcHRncm91cC5sYWJlbCxcbiAgICAgICAgICAgICAgICBzZWxlY3RBbGw6IG9wdGdyb3VwLmRhdGFzZXQgPyBvcHRncm91cC5kYXRhc2V0LnNlbGVjdGFsbCA9PT0gJ3RydWUnIDogZmFsc2UsXG4gICAgICAgICAgICAgICAgY2xvc2FibGU6IG9wdGdyb3VwLmRhdGFzZXQgPyBvcHRncm91cC5kYXRhc2V0LmNsb3NhYmxlIDogJ29mZicsXG4gICAgICAgICAgICAgICAgb3B0aW9uczogW10sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IG9wdGdyb3VwLmNoaWxkTm9kZXM7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IG8gb2Ygb3B0aW9ucykge1xuICAgICAgICAgICAgICAgIGlmIChvLm5vZGVOYW1lID09PSAnT1BUSU9OJykge1xuICAgICAgICAgICAgICAgICAgICBkYXRhLm9wdGlvbnMucHVzaCh0aGlzLmdldERhdGFGcm9tT3B0aW9uKG8pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgfVxuICAgICAgICBnZXREYXRhRnJvbU9wdGlvbihvcHRpb24pIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgaWQ6IG9wdGlvbi5pZCxcbiAgICAgICAgICAgICAgICB2YWx1ZTogb3B0aW9uLnZhbHVlLFxuICAgICAgICAgICAgICAgIHRleHQ6IG9wdGlvbi50ZXh0LFxuICAgICAgICAgICAgICAgIGh0bWw6IG9wdGlvbi5kYXRhc2V0ICYmIG9wdGlvbi5kYXRhc2V0Lmh0bWwgPyBvcHRpb24uZGF0YXNldC5odG1sIDogJycsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IG9wdGlvbi5zZWxlY3RlZCxcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBvcHRpb24uc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnID8gZmFsc2UgOiB0cnVlLFxuICAgICAgICAgICAgICAgIGRpc2FibGVkOiBvcHRpb24uZGlzYWJsZWQsXG4gICAgICAgICAgICAgICAgbWFuZGF0b3J5OiBvcHRpb24uZGF0YXNldCA/IG9wdGlvbi5kYXRhc2V0Lm1hbmRhdG9yeSA9PT0gJ3RydWUnIDogZmFsc2UsXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IG9wdGlvbi5kYXRhc2V0LnBsYWNlaG9sZGVyID09PSAndHJ1ZScsXG4gICAgICAgICAgICAgICAgY2xhc3M6IG9wdGlvbi5jbGFzc05hbWUsXG4gICAgICAgICAgICAgICAgc3R5bGU6IG9wdGlvbi5zdHlsZS5jc3NUZXh0LFxuICAgICAgICAgICAgICAgIGRhdGE6IG9wdGlvbi5kYXRhc2V0LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBnZXRTZWxlY3RlZFZhbHVlcygpIHtcbiAgICAgICAgICAgIGxldCB2YWx1ZXMgPSBbXTtcbiAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLnNlbGVjdC5jaGlsZE5vZGVzO1xuICAgICAgICAgICAgZm9yIChjb25zdCBvIG9mIG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICBpZiAoby5ub2RlTmFtZSA9PT0gJ09QVEdST1VQJykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBvcHRncm91cE9wdGlvbnMgPSBvLmNoaWxkTm9kZXM7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgb28gb2Ygb3B0Z3JvdXBPcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob28ubm9kZU5hbWUgPT09ICdPUFRJT04nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3B0aW9uID0gb287XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wdGlvbi5zZWxlY3RlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXMucHVzaChvcHRpb24udmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoby5ub2RlTmFtZSA9PT0gJ09QVElPTicpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3B0aW9uID0gbztcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wdGlvbi5zZWxlY3RlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVzLnB1c2gob3B0aW9uLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB2YWx1ZXM7XG4gICAgICAgIH1cbiAgICAgICAgc2V0U2VsZWN0ZWQodmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlTGlzdGVuKGZhbHNlKTtcbiAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLnNlbGVjdC5jaGlsZE5vZGVzO1xuICAgICAgICAgICAgZm9yIChjb25zdCBvIG9mIG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICBpZiAoby5ub2RlTmFtZSA9PT0gJ09QVEdST1VQJykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBvcHRncm91cCA9IG87XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG9wdGdyb3VwT3B0aW9ucyA9IG9wdGdyb3VwLmNoaWxkTm9kZXM7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgb28gb2Ygb3B0Z3JvdXBPcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob28ubm9kZU5hbWUgPT09ICdPUFRJT04nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3B0aW9uID0gb287XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uLnNlbGVjdGVkID0gdmFsdWUuaW5jbHVkZXMob3B0aW9uLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoby5ub2RlTmFtZSA9PT0gJ09QVElPTicpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3B0aW9uID0gbztcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uLnNlbGVjdGVkID0gdmFsdWUuaW5jbHVkZXMob3B0aW9uLnZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmNoYW5nZUxpc3Rlbih0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICB1cGRhdGVTZWxlY3QoaWQsIHN0eWxlLCBjbGFzc2VzKSB7XG4gICAgICAgICAgICB0aGlzLmNoYW5nZUxpc3RlbihmYWxzZSk7XG4gICAgICAgICAgICBpZiAoaWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdC5pZCA9IGlkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHN0eWxlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3Quc3R5bGUuY3NzVGV4dCA9IHN0eWxlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNsYXNzZXMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdC5jbGFzc05hbWUgPSAnJztcbiAgICAgICAgICAgICAgICBjbGFzc2VzLmZvckVhY2goKGMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGMudHJpbSgpICE9PSAnJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3QuY2xhc3NMaXN0LmFkZChjLnRyaW0oKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuY2hhbmdlTGlzdGVuKHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIHVwZGF0ZU9wdGlvbnMoZGF0YSkge1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VMaXN0ZW4oZmFsc2UpO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3QuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGQgb2YgZGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChkIGluc3RhbmNlb2YgT3B0Z3JvdXApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3QuYXBwZW5kQ2hpbGQodGhpcy5jcmVhdGVPcHRncm91cChkKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChkIGluc3RhbmNlb2YgT3B0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0LmFwcGVuZENoaWxkKHRoaXMuY3JlYXRlT3B0aW9uKGQpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnNlbGVjdC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnY2hhbmdlJykpO1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VMaXN0ZW4odHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgY3JlYXRlT3B0Z3JvdXAob3B0Z3JvdXApIHtcbiAgICAgICAgICAgIGNvbnN0IG9wdGdyb3VwRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRncm91cCcpO1xuICAgICAgICAgICAgb3B0Z3JvdXBFbC5pZCA9IG9wdGdyb3VwLmlkO1xuICAgICAgICAgICAgb3B0Z3JvdXBFbC5sYWJlbCA9IG9wdGdyb3VwLmxhYmVsO1xuICAgICAgICAgICAgaWYgKG9wdGdyb3VwLnNlbGVjdEFsbCkge1xuICAgICAgICAgICAgICAgIG9wdGdyb3VwRWwuZGF0YXNldC5zZWxlY3RBbGwgPSAndHJ1ZSc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob3B0Z3JvdXAuY2xvc2FibGUgIT09ICdvZmYnKSB7XG4gICAgICAgICAgICAgICAgb3B0Z3JvdXBFbC5kYXRhc2V0LmNsb3NhYmxlID0gb3B0Z3JvdXAuY2xvc2FibGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob3B0Z3JvdXAub3B0aW9ucykge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgbyBvZiBvcHRncm91cC5vcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgIG9wdGdyb3VwRWwuYXBwZW5kQ2hpbGQodGhpcy5jcmVhdGVPcHRpb24obykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBvcHRncm91cEVsO1xuICAgICAgICB9XG4gICAgICAgIGNyZWF0ZU9wdGlvbihpbmZvKSB7XG4gICAgICAgICAgICBjb25zdCBvcHRpb25FbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICAgICAgICAgICAgb3B0aW9uRWwuaWQgPSBpbmZvLmlkO1xuICAgICAgICAgICAgb3B0aW9uRWwudmFsdWUgPSBpbmZvLnZhbHVlO1xuICAgICAgICAgICAgb3B0aW9uRWwuaW5uZXJIVE1MID0gaW5mby50ZXh0O1xuICAgICAgICAgICAgaWYgKGluZm8uaHRtbCAhPT0gJycpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25FbC5zZXRBdHRyaWJ1dGUoJ2RhdGEtaHRtbCcsIGluZm8uaHRtbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5mby5zZWxlY3RlZCkge1xuICAgICAgICAgICAgICAgIG9wdGlvbkVsLnNlbGVjdGVkID0gaW5mby5zZWxlY3RlZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmZvLmRpc2FibGVkKSB7XG4gICAgICAgICAgICAgICAgb3B0aW9uRWwuZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGluZm8uZGlzcGxheSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25FbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGluZm8ucGxhY2Vob2xkZXIpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25FbC5zZXRBdHRyaWJ1dGUoJ2RhdGEtcGxhY2Vob2xkZXInLCAndHJ1ZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGluZm8ubWFuZGF0b3J5KSB7XG4gICAgICAgICAgICAgICAgb3B0aW9uRWwuc2V0QXR0cmlidXRlKCdkYXRhLW1hbmRhdG9yeScsICd0cnVlJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5mby5jbGFzcykge1xuICAgICAgICAgICAgICAgIGluZm8uY2xhc3Muc3BsaXQoJyAnKS5mb3JFYWNoKChvcHRpb25DbGFzcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25FbC5jbGFzc0xpc3QuYWRkKG9wdGlvbkNsYXNzKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmZvLmRhdGEgJiYgdHlwZW9mIGluZm8uZGF0YSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhpbmZvLmRhdGEpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25FbC5zZXRBdHRyaWJ1dGUoJ2RhdGEtJyArIGtlYmFiQ2FzZShrZXkpLCBpbmZvLmRhdGFba2V5XSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9uRWw7XG4gICAgICAgIH1cbiAgICAgICAgZGVzdHJveSgpIHtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlTGlzdGVuKGZhbHNlKTtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHRoaXMudmFsdWVDaGFuZ2UuYmluZCh0aGlzKSk7XG4gICAgICAgICAgICBpZiAodGhpcy5vYnNlcnZlcikge1xuICAgICAgICAgICAgICAgIHRoaXMub2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgICAgIHRoaXMub2JzZXJ2ZXIgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zaG93VUkoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNsYXNzIFNsaW1TZWxlY3Qge1xuICAgICAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIHRoaXMuZXZlbnRzID0ge1xuICAgICAgICAgICAgICAgIHNlYXJjaDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIHNlYXJjaEZpbHRlcjogKG9wdCwgc2VhcmNoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvcHQudGV4dC50b0xvd2VyQ2FzZSgpLmluZGV4T2Yoc2VhcmNoLnRvTG93ZXJDYXNlKCkpICE9PSAtMTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGFkZGFibGU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBiZWZvcmVDaGFuZ2U6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBhZnRlckNoYW5nZTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIGJlZm9yZU9wZW46IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBhZnRlck9wZW46IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBiZWZvcmVDbG9zZTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIGFmdGVyQ2xvc2U6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLndpbmRvd1Jlc2l6ZSA9IGRlYm91bmNlKCgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuc2V0dGluZ3MuaXNPcGVuKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXIubW92ZUNvbnRlbnQoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy53aW5kb3dTY3JvbGwgPSBkZWJvdW5jZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLnNldHRpbmdzLmlzT3Blbikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyLm1vdmVDb250ZW50KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuZG9jdW1lbnRDbGljayA9IChlKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLnNldHRpbmdzLmlzT3Blbikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChlLnRhcmdldCAmJiAhaGFzQ2xhc3NJblRyZWUoZS50YXJnZXQsIHRoaXMuc2V0dGluZ3MuaWQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RFbCA9ICh0eXBlb2YgY29uZmlnLnNlbGVjdCA9PT0gJ3N0cmluZycgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbmZpZy5zZWxlY3QpIDogY29uZmlnLnNlbGVjdCk7XG4gICAgICAgICAgICBpZiAoIXRoaXMuc2VsZWN0RWwpIHtcbiAgICAgICAgICAgICAgICBpZiAoY29uZmlnLmV2ZW50cyAmJiBjb25maWcuZXZlbnRzLmVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbmZpZy5ldmVudHMuZXJyb3IobmV3IEVycm9yKCdDb3VsZCBub3QgZmluZCBzZWxlY3QgZWxlbWVudCcpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuc2VsZWN0RWwudGFnTmFtZSAhPT0gJ1NFTEVDVCcpIHtcbiAgICAgICAgICAgICAgICBpZiAoY29uZmlnLmV2ZW50cyAmJiBjb25maWcuZXZlbnRzLmVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbmZpZy5ldmVudHMuZXJyb3IobmV3IEVycm9yKCdFbGVtZW50IGlzbnQgb2YgdHlwZSBzZWxlY3QnKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLnNlbGVjdEVsLmRhdGFzZXQuc3NpZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZXR0aW5ncyA9IG5ldyBTZXR0aW5ncyhjb25maWcuc2V0dGluZ3MpO1xuICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gY29uZmlnLmV2ZW50cykge1xuICAgICAgICAgICAgICAgIGlmIChjb25maWcuZXZlbnRzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ldmVudHNba2V5XSA9IGNvbmZpZy5ldmVudHNba2V5XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnNldHRpbmdzLmRpc2FibGVkID0gKChfYSA9IGNvbmZpZy5zZXR0aW5ncykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmRpc2FibGVkKSA/IGNvbmZpZy5zZXR0aW5ncy5kaXNhYmxlZCA6IHRoaXMuc2VsZWN0RWwuZGlzYWJsZWQ7XG4gICAgICAgICAgICB0aGlzLnNldHRpbmdzLmlzTXVsdGlwbGUgPSB0aGlzLnNlbGVjdEVsLm11bHRpcGxlO1xuICAgICAgICAgICAgdGhpcy5zZXR0aW5ncy5zdHlsZSA9IHRoaXMuc2VsZWN0RWwuc3R5bGUuY3NzVGV4dDtcbiAgICAgICAgICAgIHRoaXMuc2V0dGluZ3MuY2xhc3MgPSB0aGlzLnNlbGVjdEVsLmNsYXNzTmFtZS5zcGxpdCgnICcpO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3QgPSBuZXcgU2VsZWN0KHRoaXMuc2VsZWN0RWwpO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3QudXBkYXRlU2VsZWN0KHRoaXMuc2V0dGluZ3MuaWQsIHRoaXMuc2V0dGluZ3Muc3R5bGUsIHRoaXMuc2V0dGluZ3MuY2xhc3MpO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3QuaGlkZVVJKCk7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdC5vblZhbHVlQ2hhbmdlID0gKHZhbHVlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U2VsZWN0ZWQodmFsdWVzKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLnNlbGVjdC5vbkRpc2FibGVkQ2hhbmdlID0gKGRpc2FibGVkKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGRpc2FibGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGlzYWJsZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbmFibGUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5zZWxlY3Qub25PcHRpb25zQ2hhbmdlID0gKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldERhdGEoZGF0YSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5zdG9yZSA9IG5ldyBTdG9yZSh0aGlzLnNldHRpbmdzLmlzTXVsdGlwbGUgPyAnbXVsdGlwbGUnIDogJ3NpbmdsZScsIGNvbmZpZy5kYXRhID8gY29uZmlnLmRhdGEgOiB0aGlzLnNlbGVjdC5nZXREYXRhKCkpO1xuICAgICAgICAgICAgaWYgKGNvbmZpZy5kYXRhKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3QudXBkYXRlT3B0aW9ucyh0aGlzLnN0b3JlLmdldERhdGEoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBjYWxsYmFja3MgPSB7XG4gICAgICAgICAgICAgICAgb3BlbjogdGhpcy5vcGVuLmJpbmQodGhpcyksXG4gICAgICAgICAgICAgICAgY2xvc2U6IHRoaXMuY2xvc2UuYmluZCh0aGlzKSxcbiAgICAgICAgICAgICAgICBhZGRhYmxlOiB0aGlzLmV2ZW50cy5hZGRhYmxlID8gdGhpcy5ldmVudHMuYWRkYWJsZSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBzZXRTZWxlY3RlZDogdGhpcy5zZXRTZWxlY3RlZC5iaW5kKHRoaXMpLFxuICAgICAgICAgICAgICAgIGFkZE9wdGlvbjogdGhpcy5hZGRPcHRpb24uYmluZCh0aGlzKSxcbiAgICAgICAgICAgICAgICBzZWFyY2g6IHRoaXMuc2VhcmNoLmJpbmQodGhpcyksXG4gICAgICAgICAgICAgICAgYmVmb3JlQ2hhbmdlOiB0aGlzLmV2ZW50cy5iZWZvcmVDaGFuZ2UsXG4gICAgICAgICAgICAgICAgYWZ0ZXJDaGFuZ2U6IHRoaXMuZXZlbnRzLmFmdGVyQ2hhbmdlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMucmVuZGVyID0gbmV3IFJlbmRlcih0aGlzLnNldHRpbmdzLCB0aGlzLnN0b3JlLCBjYWxsYmFja3MpO1xuICAgICAgICAgICAgdGhpcy5yZW5kZXIucmVuZGVyVmFsdWVzKCk7XG4gICAgICAgICAgICB0aGlzLnJlbmRlci5yZW5kZXJPcHRpb25zKHRoaXMuc3RvcmUuZ2V0RGF0YSgpKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnNlbGVjdEVsLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdEVsLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMucmVuZGVyLm1haW4ubWFpbiwgdGhpcy5zZWxlY3RFbC5uZXh0U2libGluZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuZG9jdW1lbnRDbGljayk7XG4gICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy53aW5kb3dSZXNpemUsIGZhbHNlKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLm9wZW5Qb3NpdGlvbiA9PT0gJ2F1dG8nKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMud2luZG93U2Nyb2xsLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5kaXNhYmxlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZGlzYWJsZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuc2V0dGluZ3MuYWx3YXlzT3Blbikge1xuICAgICAgICAgICAgICAgIHRoaXMub3BlbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZWxlY3RFbC5zbGltID0gdGhpcztcbiAgICAgICAgfVxuICAgICAgICBlbmFibGUoKSB7XG4gICAgICAgICAgICB0aGlzLnNldHRpbmdzLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdC5lbmFibGUoKTtcbiAgICAgICAgICAgIHRoaXMucmVuZGVyLmVuYWJsZSgpO1xuICAgICAgICB9XG4gICAgICAgIGRpc2FibGUoKSB7XG4gICAgICAgICAgICB0aGlzLnNldHRpbmdzLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0LmRpc2FibGUoKTtcbiAgICAgICAgICAgIHRoaXMucmVuZGVyLmRpc2FibGUoKTtcbiAgICAgICAgfVxuICAgICAgICBnZXREYXRhKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RvcmUuZ2V0RGF0YSgpO1xuICAgICAgICB9XG4gICAgICAgIHNldERhdGEoZGF0YSkge1xuICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWQgPSB0aGlzLnN0b3JlLmdldFNlbGVjdGVkKCk7XG4gICAgICAgICAgICBjb25zdCBlcnIgPSB0aGlzLnN0b3JlLnZhbGlkYXRlRGF0YUFycmF5KGRhdGEpO1xuICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmV2ZW50cy5lcnJvcikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmV2ZW50cy5lcnJvcihlcnIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnN0b3JlLnNldERhdGEoZGF0YSk7XG4gICAgICAgICAgICBjb25zdCBkYXRhQ2xlYW4gPSB0aGlzLnN0b3JlLmdldERhdGEoKTtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0LnVwZGF0ZU9wdGlvbnMoZGF0YUNsZWFuKTtcbiAgICAgICAgICAgIHRoaXMucmVuZGVyLnJlbmRlclZhbHVlcygpO1xuICAgICAgICAgICAgdGhpcy5yZW5kZXIucmVuZGVyT3B0aW9ucyhkYXRhQ2xlYW4pO1xuICAgICAgICAgICAgaWYgKHRoaXMuZXZlbnRzLmFmdGVyQ2hhbmdlICYmICFpc0VxdWFsKHNlbGVjdGVkLCB0aGlzLnN0b3JlLmdldFNlbGVjdGVkKCkpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudHMuYWZ0ZXJDaGFuZ2UodGhpcy5zdG9yZS5nZXRTZWxlY3RlZE9wdGlvbnMoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZ2V0U2VsZWN0ZWQoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zdG9yZS5nZXRTZWxlY3RlZCgpO1xuICAgICAgICB9XG4gICAgICAgIHNldFNlbGVjdGVkKHZhbHVlKSB7XG4gICAgICAgICAgICBjb25zdCBzZWxlY3RlZCA9IHRoaXMuc3RvcmUuZ2V0U2VsZWN0ZWQoKTtcbiAgICAgICAgICAgIHRoaXMuc3RvcmUuc2V0U2VsZWN0ZWRCeSgndmFsdWUnLCBBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlIDogW3ZhbHVlXSk7XG4gICAgICAgICAgICBjb25zdCBkYXRhID0gdGhpcy5zdG9yZS5nZXREYXRhKCk7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdC51cGRhdGVPcHRpb25zKGRhdGEpO1xuICAgICAgICAgICAgdGhpcy5yZW5kZXIucmVuZGVyVmFsdWVzKCk7XG4gICAgICAgICAgICBpZiAodGhpcy5yZW5kZXIuY29udGVudC5zZWFyY2guaW5wdXQudmFsdWUgIT09ICcnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWFyY2godGhpcy5yZW5kZXIuY29udGVudC5zZWFyY2guaW5wdXQudmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXIucmVuZGVyT3B0aW9ucyhkYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmV2ZW50cy5hZnRlckNoYW5nZSAmJiAhaXNFcXVhbChzZWxlY3RlZCwgdGhpcy5zdG9yZS5nZXRTZWxlY3RlZCgpKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRzLmFmdGVyQ2hhbmdlKHRoaXMuc3RvcmUuZ2V0U2VsZWN0ZWRPcHRpb25zKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGFkZE9wdGlvbihvcHRpb24pIHtcbiAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkID0gdGhpcy5zdG9yZS5nZXRTZWxlY3RlZCgpO1xuICAgICAgICAgICAgdGhpcy5zdG9yZS5hZGRPcHRpb24ob3B0aW9uKTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLnN0b3JlLmdldERhdGEoKTtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0LnVwZGF0ZU9wdGlvbnMoZGF0YSk7XG4gICAgICAgICAgICB0aGlzLnJlbmRlci5yZW5kZXJWYWx1ZXMoKTtcbiAgICAgICAgICAgIHRoaXMucmVuZGVyLnJlbmRlck9wdGlvbnMoZGF0YSk7XG4gICAgICAgICAgICBpZiAodGhpcy5ldmVudHMuYWZ0ZXJDaGFuZ2UgJiYgIWlzRXF1YWwoc2VsZWN0ZWQsIHRoaXMuc3RvcmUuZ2V0U2VsZWN0ZWQoKSkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmV2ZW50cy5hZnRlckNoYW5nZSh0aGlzLnN0b3JlLmdldFNlbGVjdGVkT3B0aW9ucygpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBvcGVuKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuc2V0dGluZ3MuZGlzYWJsZWQgfHwgdGhpcy5zZXR0aW5ncy5pc09wZW4pIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5ldmVudHMuYmVmb3JlT3Blbikge1xuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRzLmJlZm9yZU9wZW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMucmVuZGVyLm9wZW4oKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLnNob3dTZWFyY2gpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlci5zZWFyY2hGb2N1cyhmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5ldmVudHMuYWZ0ZXJPcGVuKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRzLmFmdGVyT3BlbigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnNldHRpbmdzLmlzT3BlbiA9IHRydWU7XG4gICAgICAgICAgICB9LCB0aGlzLnNldHRpbmdzLnRpbWVvdXREZWxheSk7XG4gICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5jb250ZW50UG9zaXRpb24gPT09ICdhYnNvbHV0ZScpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5pbnRlcnZhbE1vdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnNldHRpbmdzLmludGVydmFsTW92ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuc2V0dGluZ3MuaW50ZXJ2YWxNb3ZlID0gc2V0SW50ZXJ2YWwodGhpcy5yZW5kZXIubW92ZUNvbnRlbnQuYmluZCh0aGlzLnJlbmRlciksIDUwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2xvc2UoKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuc2V0dGluZ3MuaXNPcGVuIHx8IHRoaXMuc2V0dGluZ3MuYWx3YXlzT3Blbikge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmV2ZW50cy5iZWZvcmVDbG9zZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRzLmJlZm9yZUNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnJlbmRlci5jbG9zZSgpO1xuICAgICAgICAgICAgdGhpcy5zZWFyY2goJycpO1xuICAgICAgICAgICAgdGhpcy5yZW5kZXIubWFpbkZvY3VzKGZhbHNlKTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmV2ZW50cy5hZnRlckNsb3NlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRzLmFmdGVyQ2xvc2UoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5zZXR0aW5ncy5pc09wZW4gPSBmYWxzZTtcbiAgICAgICAgICAgIH0sIHRoaXMuc2V0dGluZ3MudGltZW91dERlbGF5KTtcbiAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmludGVydmFsTW92ZSkge1xuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5zZXR0aW5ncy5pbnRlcnZhbE1vdmUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHNlYXJjaCh2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucmVuZGVyLmNvbnRlbnQuc2VhcmNoLmlucHV0LnZhbHVlICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyLmNvbnRlbnQuc2VhcmNoLmlucHV0LnZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXRoaXMuZXZlbnRzLnNlYXJjaCkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyLnJlbmRlck9wdGlvbnModmFsdWUgPT09ICcnID8gdGhpcy5zdG9yZS5nZXREYXRhKCkgOiB0aGlzLnN0b3JlLnNlYXJjaCh2YWx1ZSwgdGhpcy5ldmVudHMuc2VhcmNoRmlsdGVyKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5yZW5kZXIucmVuZGVyU2VhcmNoaW5nKCk7XG4gICAgICAgICAgICBjb25zdCBzZWFyY2hSZXNwID0gdGhpcy5ldmVudHMuc2VhcmNoKHZhbHVlLCB0aGlzLnN0b3JlLmdldFNlbGVjdGVkT3B0aW9ucygpKTtcbiAgICAgICAgICAgIGlmIChzZWFyY2hSZXNwIGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgIHNlYXJjaFJlc3BcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXIucmVuZGVyT3B0aW9ucyh0aGlzLnN0b3JlLnBhcnRpYWxUb0Z1bGxEYXRhKGRhdGEpKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlci5yZW5kZXJFcnJvcih0eXBlb2YgZXJyID09PSAnc3RyaW5nJyA/IGVyciA6IGVyci5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KHNlYXJjaFJlc3ApKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXIucmVuZGVyT3B0aW9ucyh0aGlzLnN0b3JlLnBhcnRpYWxUb0Z1bGxEYXRhKHNlYXJjaFJlc3ApKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyLnJlbmRlckVycm9yKCdTZWFyY2ggZXZlbnQgbXVzdCByZXR1cm4gYSBwcm9taXNlIG9yIGFuIGFycmF5IG9mIGRhdGEnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBkZXN0cm95KCkge1xuICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmRvY3VtZW50Q2xpY2spO1xuICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMud2luZG93UmVzaXplLCBmYWxzZSk7XG4gICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5vcGVuUG9zaXRpb24gPT09ICdhdXRvJykge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLndpbmRvd1Njcm9sbCwgZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zdG9yZS5zZXREYXRhKFtdKTtcbiAgICAgICAgICAgIHRoaXMucmVuZGVyLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0LmRlc3Ryb3koKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBTbGltU2VsZWN0O1xuXG59KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/slim-select/dist/slimselect.umd.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/main": 0,
/******/ 			"css/main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk_4cago_back"] = self["webpackChunk_4cago_back"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/main"], () => (__webpack_require__("./resources/js/main.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/main"], () => (__webpack_require__("./resources/scss/main.scss")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;